<?xml version="1.0" encoding="UTF-8"?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns
     http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd">

  <!-- Created by Graph::Easy v0.76 at Tue Jun  8 23:17:08 2021 -->

  <key id="d0" for="edge" attr.name="arrowstyle" attr.type="string">
    <default>open</default>
  </key>
  <key id="d1" for="graph" attr.name="colorscheme" attr.type="string">
    <default>w3c</default>
  </key>
  <key id="d2" for="graph" attr.name="flow" attr.type="string">
    <default>east</default>
  </key>
  <key id="d3" for="graph" attr.name="title" attr.type="string">
    <default></default>
  </key>
  <key id="d4" for="node" attr.name="label" attr.type="string"/>
  <key id="d5" for="edge" attr.name="label" attr.type="string"/>
  <key id="d6" for="edge" attr.name="style" attr.type="string">
    <default>solid</default>
  </key>

  <graph id="G" edgedefault="directed">
    <data key="d1">x11</data>
    <data key="d2">south</data>
    <data key="d3">visit</data>
    <node id="1000247">
      <data key="d4">(METHOD,visit)</data>
    </node>
    <node id="1000253">
      <data key="d4">(&lt;operator&gt;.assignment,cnt = 0)</data>
    </node>
    <node id="1000256">
      <data key="d4">(push,push(r+1))</data>
    </node>
    <node id="1000257">
      <data key="d4">(&lt;operator&gt;.addition,r+1)</data>
    </node>
    <node id="1000260">
      <data key="d4">(&lt;operator&gt;.assignment,color[r] = GRAY)</data>
    </node>
    <node id="1000261">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,color[r])</data>
    </node>
    <node id="1000265">
      <data key="d4">(&lt;operator&gt;.assignment,d[r] = ++time)</data>
    </node>
    <node id="1000266">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,d[r])</data>
    </node>
    <node id="1000269">
      <data key="d4">(&lt;operator&gt;.preIncrement,++time)</data>
    </node>
    <node id="1000272">
      <data key="d4">(&lt;operator&gt;.notEquals,stackEmpty() != 0)</data>
    </node>
    <node id="1000273">
      <data key="d4">(stackEmpty,stackEmpty())</data>
    </node>
    <node id="1000276">
      <data key="d4">(&lt;operator&gt;.assignment,u = stack[top])</data>
    </node>
    <node id="1000278">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,stack[top])</data>
    </node>
    <node id="1000281">
      <data key="d4">(&lt;operator&gt;.assignment,v = next(u))</data>
    </node>
    <node id="1000283">
      <data key="d4">(next,next(u))</data>
    </node>
    <node id="1000286">
      <data key="d4">(&lt;operator&gt;.notEquals,v != -1)</data>
    </node>
    <node id="1000288">
      <data key="d4">(&lt;operator&gt;.minus,-1)</data>
    </node>
    <node id="1000292">
      <data key="d4">(&lt;operator&gt;.equals,color[v-1] == WHITE)</data>
    </node>
    <node id="1000293">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,color[v-1])</data>
    </node>
    <node id="1000295">
      <data key="d4">(&lt;operator&gt;.subtraction,v-1)</data>
    </node>
    <node id="1000300">
      <data key="d4">(push,push(v))</data>
    </node>
    <node id="1000302">
      <data key="d4">(&lt;operator&gt;.assignment,color[v-1] = GRAY)</data>
    </node>
    <node id="1000303">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,color[v-1])</data>
    </node>
    <node id="1000305">
      <data key="d4">(&lt;operator&gt;.subtraction,v-1)</data>
    </node>
    <node id="1000309">
      <data key="d4">(&lt;operator&gt;.assignment,d[v-1] = ++time)</data>
    </node>
    <node id="1000310">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,d[v-1])</data>
    </node>
    <node id="1000312">
      <data key="d4">(&lt;operator&gt;.subtraction,v-1)</data>
    </node>
    <node id="1000315">
      <data key="d4">(&lt;operator&gt;.preIncrement,++time)</data>
    </node>
    <node id="1000319">
      <data key="d4">(&lt;operator&gt;.assignment,color[u-1] = BLACK)</data>
    </node>
    <node id="1000320">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,color[u-1])</data>
    </node>
    <node id="1000322">
      <data key="d4">(&lt;operator&gt;.subtraction,u-1)</data>
    </node>
    <node id="1000326">
      <data key="d4">(&lt;operator&gt;.assignment,f[u-1] = ++time)</data>
    </node>
    <node id="1000327">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,f[u-1])</data>
    </node>
    <node id="1000329">
      <data key="d4">(&lt;operator&gt;.subtraction,u-1)</data>
    </node>
    <node id="1000332">
      <data key="d4">(&lt;operator&gt;.preIncrement,++time)</data>
    </node>
    <node id="1000334">
      <data key="d4">(&lt;operator&gt;.assignment,u = pop())</data>
    </node>
    <node id="1000336">
      <data key="d4">(pop,pop())</data>
    </node>
    <node id="1000337">
      <data key="d4">(METHOD_RETURN,void)</data>
    </node>

    <edge source="1000247" target="1000253">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000253" target="1000257">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000256" target="1000261">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000257" target="1000256">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000260" target="1000266">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000261" target="1000260">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000265" target="1000273">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000266" target="1000269">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000269" target="1000265">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000272" target="1000278">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000272" target="1000337">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000273" target="1000272">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000276" target="1000283">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000278" target="1000276">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000281" target="1000288">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000283" target="1000281">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000286" target="1000295">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000286" target="1000322">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000288" target="1000286">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000292" target="1000273">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000292" target="1000300">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000293" target="1000292">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000295" target="1000293">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000300" target="1000305">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000302" target="1000312">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000303" target="1000302">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000305" target="1000303">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000309" target="1000273">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000310" target="1000315">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000312" target="1000310">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000315" target="1000309">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000319" target="1000329">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000320" target="1000319">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000322" target="1000320">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000326" target="1000336">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000327" target="1000332">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000329" target="1000327">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000332" target="1000326">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000334" target="1000273">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000336" target="1000334">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
  </graph>
</graphml>
