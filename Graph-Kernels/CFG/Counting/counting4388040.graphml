<?xml version="1.0" encoding="UTF-8"?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns
     http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd">

  <!-- Created by Graph::Easy v0.76 at Tue Oct 27 09:43:33 2020 -->

  <key id="d0" for="edge" attr.name="arrowstyle" attr.type="string">
    <default>open</default>
  </key>
  <key id="d1" for="graph" attr.name="colorscheme" attr.type="string">
    <default>w3c</default>
  </key>
  <key id="d2" for="graph" attr.name="flow" attr.type="string">
    <default>east</default>
  </key>
  <key id="d3" for="graph" attr.name="title" attr.type="string">
    <default></default>
  </key>
  <key id="d4" for="node" attr.name="label" attr.type="string"/>
  <key id="d5" for="edge" attr.name="label" attr.type="string"/>
  <key id="d6" for="edge" attr.name="style" attr.type="string">
    <default>solid</default>
  </key>

  <graph id="G" edgedefault="directed">
    <data key="d1">x11</data>
    <data key="d2">south</data>
    <data key="d3">main</data>
    <node id="1000193">
      <data key="d4">(METHOD,main)</data>
    </node>
    <node id="1000203">
      <data key="d4">(&lt;operator&gt;.assignment,max=0)</data>
    </node>
    <node id="1000206">
      <data key="d4">(scanf,scanf(&quot;%d&quot;,&amp;n))</data>
    </node>
    <node id="1000208">
      <data key="d4">(&lt;operator&gt;.addressOf,&amp;n)</data>
    </node>
    <node id="1000210">
      <data key="d4">(&lt;operator&gt;.assignment,m=n)</data>
    </node>
    <node id="1000213">
      <data key="d4">(&lt;operator&gt;.assignment,a=malloc(sizeof(int)*n))</data>
    </node>
    <node id="1000215">
      <data key="d4">(malloc,malloc(sizeof(int)*n))</data>
    </node>
    <node id="1000216">
      <data key="d4">(&lt;operator&gt;.multiplication,sizeof(int)*n)</data>
    </node>
    <node id="1000217">
      <data key="d4">(&lt;operator&gt;.sizeOf,sizeof(int))</data>
    </node>
    <node id="1000220">
      <data key="d4">(&lt;operator&gt;.assignment,b=malloc(sizeof(int)*2000000))</data>
    </node>
    <node id="1000222">
      <data key="d4">(malloc,malloc(sizeof(int)*2000000))</data>
    </node>
    <node id="1000223">
      <data key="d4">(&lt;operator&gt;.multiplication,sizeof(int)*2000000)</data>
    </node>
    <node id="1000224">
      <data key="d4">(&lt;operator&gt;.sizeOf,sizeof(int))</data>
    </node>
    <node id="1000228">
      <data key="d4">(&lt;operator&gt;.assignment,i=0)</data>
    </node>
    <node id="1000231">
      <data key="d4">(&lt;operator&gt;.lessThan,i&lt;n)</data>
    </node>
    <node id="1000234">
      <data key="d4">(&lt;operator&gt;.postIncrement,i++)</data>
    </node>
    <node id="1000237">
      <data key="d4">(scanf,scanf(&quot;%d&quot;,(a+i)))</data>
    </node>
    <node id="1000239">
      <data key="d4">(&lt;operator&gt;.addition,a+i)</data>
    </node>
    <node id="1000243">
      <data key="d4">(&lt;operator&gt;.lessThan,max&lt;*(a+i))</data>
    </node>
    <node id="1000245">
      <data key="d4">(&lt;operator&gt;.indirection,*(a+i))</data>
    </node>
    <node id="1000246">
      <data key="d4">(&lt;operator&gt;.addition,a+i)</data>
    </node>
    <node id="1000249">
      <data key="d4">(&lt;operator&gt;.assignment,max=*(a+i))</data>
    </node>
    <node id="1000251">
      <data key="d4">(&lt;operator&gt;.indirection,*(a+i))</data>
    </node>
    <node id="1000252">
      <data key="d4">(&lt;operator&gt;.addition,a+i)</data>
    </node>
    <node id="1000255">
      <data key="d4">(&lt;operator&gt;.assignment,c=malloc(sizeof(int)*(max+1)))</data>
    </node>
    <node id="1000257">
      <data key="d4">(malloc,malloc(sizeof(int)*(max+1)))</data>
    </node>
    <node id="1000258">
      <data key="d4">(&lt;operator&gt;.multiplication,sizeof(int)*(max+1))</data>
    </node>
    <node id="1000259">
      <data key="d4">(&lt;operator&gt;.sizeOf,sizeof(int))</data>
    </node>
    <node id="1000261">
      <data key="d4">(&lt;operator&gt;.addition,max+1)</data>
    </node>
    <node id="1000264">
      <data key="d4">(Countingsort,Countingsort(a,b,c,n,max))</data>
    </node>
    <node id="1000271">
      <data key="d4">(&lt;operator&gt;.assignment,i=1)</data>
    </node>
    <node id="1000274">
      <data key="d4">(&lt;operator&gt;.lessThan,i&lt;n)</data>
    </node>
    <node id="1000277">
      <data key="d4">(&lt;operator&gt;.postIncrement,i++)</data>
    </node>
    <node id="1000280">
      <data key="d4">(printf,printf(&quot;%d &quot;,*(b+i)))</data>
    </node>
    <node id="1000282">
      <data key="d4">(&lt;operator&gt;.indirection,*(b+i))</data>
    </node>
    <node id="1000283">
      <data key="d4">(&lt;operator&gt;.addition,b+i)</data>
    </node>
    <node id="1000286">
      <data key="d4">(printf,printf(&quot;%d\n&quot;,*(b+i)))</data>
    </node>
    <node id="1000288">
      <data key="d4">(&lt;operator&gt;.indirection,*(b+i))</data>
    </node>
    <node id="1000289">
      <data key="d4">(&lt;operator&gt;.addition,b+i)</data>
    </node>
    <node id="1000292">
      <data key="d4">(free,free(a))</data>
    </node>
    <node id="1000294">
      <data key="d4">(free,free(b))</data>
    </node>
    <node id="1000296">
      <data key="d4">(free,free(c))</data>
    </node>
    <node id="1000298">
      <data key="d4">(RETURN,return 0;,return 0;)</data>
    </node>
    <node id="1000300">
      <data key="d4">(METHOD_RETURN,int)</data>
    </node>

    <edge source="1000193" target="1000203">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000203" target="1000208">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000206" target="1000210">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000208" target="1000206">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000210" target="1000217">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000213" target="1000224">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000215" target="1000213">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000216" target="1000215">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000217" target="1000216">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000220" target="1000228">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000222" target="1000220">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000223" target="1000222">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000224" target="1000223">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000228" target="1000231">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000231" target="1000239">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000231" target="1000239">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000231" target="1000259">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000234" target="1000231">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000237" target="1000246">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000239" target="1000237">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000243" target="1000234">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000243" target="1000252">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000245" target="1000243">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000246" target="1000245">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000249" target="1000234">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000251" target="1000249">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000252" target="1000251">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000255" target="1000264">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000257" target="1000255">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000258" target="1000257">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000259" target="1000261">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000261" target="1000258">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000264" target="1000271">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000271" target="1000274">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000274" target="1000283">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000274" target="1000283">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000274" target="1000289">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000277" target="1000274">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000280" target="1000277">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000282" target="1000280">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000283" target="1000282">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000286" target="1000292">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000288" target="1000286">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000289" target="1000288">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000292" target="1000294">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000294" target="1000296">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000296" target="1000298">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000298" target="1000300">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
  </graph>
</graphml>
