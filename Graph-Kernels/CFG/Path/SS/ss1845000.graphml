<?xml version="1.0" encoding="UTF-8"?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns
     http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd">

  <!-- Created by Graph::Easy v0.76 at Fri Jun 11 00:39:13 2021 -->

  <key id="d0" for="edge" attr.name="arrowstyle" attr.type="string">
    <default>open</default>
  </key>
  <key id="d1" for="graph" attr.name="colorscheme" attr.type="string">
    <default>w3c</default>
  </key>
  <key id="d2" for="graph" attr.name="flow" attr.type="string">
    <default>east</default>
  </key>
  <key id="d3" for="graph" attr.name="title" attr.type="string">
    <default></default>
  </key>
  <key id="d4" for="node" attr.name="label" attr.type="string"/>
  <key id="d5" for="edge" attr.name="label" attr.type="string"/>
  <key id="d6" for="edge" attr.name="style" attr.type="string">
    <default>solid</default>
  </key>

  <graph id="G" edgedefault="directed">
    <data key="d1">x11</data>
    <data key="d2">south</data>
    <data key="d3">main</data>
    <node id="1000134">
      <data key="d4">(METHOD,main)</data>
    </node>
    <node id="1000144">
      <data key="d4">(scanf,scanf(&quot;%d %d %d&quot;, &amp;n, &amp;m, &amp;r))</data>
    </node>
    <node id="1000146">
      <data key="d4">(&lt;operator&gt;.addressOf,&amp;n)</data>
    </node>
    <node id="1000148">
      <data key="d4">(&lt;operator&gt;.addressOf,&amp;m)</data>
    </node>
    <node id="1000150">
      <data key="d4">(&lt;operator&gt;.addressOf,&amp;r)</data>
    </node>
    <node id="1000153">
      <data key="d4">(&lt;operator&gt;.assignment,adlist = new adj [n])</data>
    </node>
    <node id="1000155">
      <data key="d4">(&lt;operator&gt;.new,new adj [n])</data>
    </node>
    <node id="1000159">
      <data key="d4">(&lt;operator&gt;.assignment,k = 0)</data>
    </node>
    <node id="1000162">
      <data key="d4">(&lt;operator&gt;.lessThan,k &lt; m)</data>
    </node>
    <node id="1000165">
      <data key="d4">(&lt;operator&gt;.postIncrement,k++)</data>
    </node>
    <node id="1000168">
      <data key="d4">(scanf,scanf(&quot;%d %d %d&quot;, &amp;j, &amp;next, &amp;cost))</data>
    </node>
    <node id="1000170">
      <data key="d4">(&lt;operator&gt;.addressOf,&amp;j)</data>
    </node>
    <node id="1000172">
      <data key="d4">(&lt;operator&gt;.addressOf,&amp;next)</data>
    </node>
    <node id="1000174">
      <data key="d4">(&lt;operator&gt;.addressOf,&amp;cost)</data>
    </node>
    <node id="1000176">
      <data key="d4">(adlist[j].push_back,adlist[j].push_back(make_pair(next, cost)))</data>
    </node>
    <node id="1000177">
      <data key="d4">(make_pair,make_pair(next, cost))</data>
    </node>
    <node id="1000181">
      <data key="d4">(&lt;operator&gt;.assignment,d = new int [n])</data>
    </node>
    <node id="1000183">
      <data key="d4">(&lt;operator&gt;.new,new int [n])</data>
    </node>
    <node id="1000186">
      <data key="d4">(&lt;operator&gt;.assignment,i = 0)</data>
    </node>
    <node id="1000189">
      <data key="d4">(&lt;operator&gt;.lessThan,i &lt; n)</data>
    </node>
    <node id="1000192">
      <data key="d4">(&lt;operator&gt;.postIncrement,i++)</data>
    </node>
    <node id="1000195">
      <data key="d4">(&lt;operator&gt;.assignment,d[i] = -1)</data>
    </node>
    <node id="1000196">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,d[i])</data>
    </node>
    <node id="1000199">
      <data key="d4">(&lt;operator&gt;.minus,-1)</data>
    </node>
    <node id="1000201">
      <data key="d4">(&lt;operator&gt;.assignment,d[r] = 0)</data>
    </node>
    <node id="1000202">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,d[r])</data>
    </node>
    <node id="1000208">
      <data key="d4">(&lt;operator&gt;.assignment,cur = init(r, 0))</data>
    </node>
    <node id="1000210">
      <data key="d4">(init,init(r, 0))</data>
    </node>
    <node id="1000213">
      <data key="d4">(C.push,C.push(cur))</data>
    </node>
    <node id="1000217">
      <data key="d4">(&lt;operator&gt;.assignment,check = new bool [n])</data>
    </node>
    <node id="1000219">
      <data key="d4">(&lt;operator&gt;.new,new bool [n])</data>
    </node>
    <node id="1000222">
      <data key="d4">(&lt;operator&gt;.assignment,i = 0)</data>
    </node>
    <node id="1000225">
      <data key="d4">(&lt;operator&gt;.lessThan,i &lt; n)</data>
    </node>
    <node id="1000228">
      <data key="d4">(&lt;operator&gt;.postIncrement,i++)</data>
    </node>
    <node id="1000231">
      <data key="d4">(&lt;operator&gt;.assignment,check[i] = false)</data>
    </node>
    <node id="1000232">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,check[i])</data>
    </node>
    <node id="1000237">
      <data key="d4">(&lt;operator&gt;.logicalNot,!C.empty())</data>
    </node>
    <node id="1000238">
      <data key="d4">(C.empty,C.empty())</data>
    </node>
    <node id="1000240">
      <data key="d4">(&lt;operator&gt;.assignment,cur = C.top())</data>
    </node>
    <node id="1000242">
      <data key="d4">(C.top,C.top())</data>
    </node>
    <node id="1000243">
      <data key="d4">(C.pop,C.pop())</data>
    </node>
    <node id="1000244">
      <data key="d4">(&lt;operator&gt;.assignment,i = cur.index)</data>
    </node>
    <node id="1000246">
      <data key="d4">(&lt;operator&gt;.fieldAccess,cur.index)</data>
    </node>
    <node id="1000248">
      <data key="d4">(FIELD_IDENTIFIER,index,index)</data>
    </node>
    <node id="1000250">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,check[i])</data>
    </node>
    <node id="1000254">
      <data key="d4">(&lt;operator&gt;.assignment,check[i] = true)</data>
    </node>
    <node id="1000255">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,check[i])</data>
    </node>
    <node id="1000259">
      <data key="d4">(&lt;operator&gt;.assignment,size = adlist[i].size())</data>
    </node>
    <node id="1000261">
      <data key="d4">(adlist[i].size,adlist[i].size())</data>
    </node>
    <node id="1000264">
      <data key="d4">(&lt;operator&gt;.assignment,j = 0)</data>
    </node>
    <node id="1000267">
      <data key="d4">(&lt;operator&gt;.lessThan,j &lt; size)</data>
    </node>
    <node id="1000270">
      <data key="d4">(&lt;operator&gt;.postIncrement,j++)</data>
    </node>
    <node id="1000274">
      <data key="d4">(&lt;operator&gt;.assignment,k = adlist[i][j].first)</data>
    </node>
    <node id="1000276">
      <data key="d4">(&lt;operator&gt;.fieldAccess,adlist[i][j].first)</data>
    </node>
    <node id="1000277">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,adlist[i][j])</data>
    </node>
    <node id="1000278">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,adlist[i])</data>
    </node>
    <node id="1000282">
      <data key="d4">(FIELD_IDENTIFIER,first,first)</data>
    </node>
    <node id="1000284">
      <data key="d4">(&lt;operator&gt;.logicalOr,d[k] &lt; 0 || d[i] + adlist[i][j].second &lt; d[k])</data>
    </node>
    <node id="1000285">
      <data key="d4">(&lt;operator&gt;.lessThan,d[k] &lt; 0)</data>
    </node>
    <node id="1000286">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,d[k])</data>
    </node>
    <node id="1000290">
      <data key="d4">(&lt;operator&gt;.lessThan,d[i] + adlist[i][j].second &lt; d[k])</data>
    </node>
    <node id="1000291">
      <data key="d4">(&lt;operator&gt;.addition,d[i] + adlist[i][j].second)</data>
    </node>
    <node id="1000292">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,d[i])</data>
    </node>
    <node id="1000295">
      <data key="d4">(&lt;operator&gt;.fieldAccess,adlist[i][j].second)</data>
    </node>
    <node id="1000296">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,adlist[i][j])</data>
    </node>
    <node id="1000297">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,adlist[i])</data>
    </node>
    <node id="1000301">
      <data key="d4">(FIELD_IDENTIFIER,second,second)</data>
    </node>
    <node id="1000302">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,d[k])</data>
    </node>
    <node id="1000306">
      <data key="d4">(&lt;operator&gt;.assignment,d[k] = d[i] + adlist[i][j].second)</data>
    </node>
    <node id="1000307">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,d[k])</data>
    </node>
    <node id="1000310">
      <data key="d4">(&lt;operator&gt;.addition,d[i] + adlist[i][j].second)</data>
    </node>
    <node id="1000311">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,d[i])</data>
    </node>
    <node id="1000314">
      <data key="d4">(&lt;operator&gt;.fieldAccess,adlist[i][j].second)</data>
    </node>
    <node id="1000315">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,adlist[i][j])</data>
    </node>
    <node id="1000316">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,adlist[i])</data>
    </node>
    <node id="1000320">
      <data key="d4">(FIELD_IDENTIFIER,second,second)</data>
    </node>
    <node id="1000321">
      <data key="d4">(C.push,C.push(init(k, d[k])))</data>
    </node>
    <node id="1000322">
      <data key="d4">(init,init(k, d[k]))</data>
    </node>
    <node id="1000324">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,d[k])</data>
    </node>
    <node id="1000328">
      <data key="d4">(&lt;operator&gt;.assignment,i = 0)</data>
    </node>
    <node id="1000331">
      <data key="d4">(&lt;operator&gt;.lessThan,i &lt; n)</data>
    </node>
    <node id="1000334">
      <data key="d4">(&lt;operator&gt;.postIncrement,i++)</data>
    </node>
    <node id="1000337">
      <data key="d4">(&lt;operator&gt;.conditional,check[i] ? printf(&quot;%d\n&quot;, d[i]) : printf(&quot;INF\n&quot;))</data>
    </node>
    <node id="1000338">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,check[i])</data>
    </node>
    <node id="1000341">
      <data key="d4">(printf,printf(&quot;%d\n&quot;, d[i]))</data>
    </node>
    <node id="1000343">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,d[i])</data>
    </node>
    <node id="1000346">
      <data key="d4">(printf,printf(&quot;INF\n&quot;))</data>
    </node>
    <node id="1000348">
      <data key="d4">(RETURN,return 0;,return 0;)</data>
    </node>
    <node id="1000350">
      <data key="d4">(METHOD_RETURN,int)</data>
    </node>

    <edge source="1000134" target="1000146">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000144" target="1000155">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000146" target="1000148">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000148" target="1000150">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000150" target="1000144">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000153" target="1000159">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000155" target="1000153">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000159" target="1000162">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000162" target="1000170">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000162" target="1000170">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000162" target="1000183">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000165" target="1000162">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000168" target="1000177">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000170" target="1000172">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000172" target="1000174">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000174" target="1000168">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000176" target="1000165">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000177" target="1000176">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000181" target="1000186">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000183" target="1000181">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000186" target="1000189">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000189" target="1000196">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000189" target="1000196">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000189" target="1000202">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000192" target="1000189">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000195" target="1000192">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000196" target="1000199">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000199" target="1000195">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000201" target="1000210">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000202" target="1000201">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000208" target="1000213">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000210" target="1000208">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000213" target="1000219">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000217" target="1000222">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000219" target="1000217">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000222" target="1000225">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000225" target="1000232">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000225" target="1000232">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000225" target="1000238">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000228" target="1000225">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000231" target="1000228">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000232" target="1000231">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000237" target="1000242">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000237" target="1000328">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000238" target="1000237">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000240" target="1000243">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000242" target="1000240">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000243" target="1000248">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000244" target="1000250">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000246" target="1000244">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000248" target="1000246">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000250" target="1000238">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000250" target="1000255">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000254" target="1000261">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000255" target="1000254">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000259" target="1000264">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000261" target="1000259">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000264" target="1000267">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000267" target="1000238">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000267" target="1000278">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000267" target="1000278">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000270" target="1000267">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000274" target="1000286">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000276" target="1000274">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000277" target="1000282">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000278" target="1000277">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000282" target="1000276">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000284" target="1000270">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000284" target="1000307">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000285" target="1000284">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000285" target="1000292">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000286" target="1000285">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000290" target="1000284">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000291" target="1000302">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000292" target="1000297">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000295" target="1000291">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000296" target="1000301">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000297" target="1000296">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000301" target="1000295">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000302" target="1000290">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000306" target="1000324">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000307" target="1000311">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000310" target="1000306">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000311" target="1000316">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000314" target="1000310">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000315" target="1000320">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000316" target="1000315">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000320" target="1000314">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000321" target="1000270">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000322" target="1000321">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000324" target="1000322">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000328" target="1000331">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000331" target="1000338">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000331" target="1000338">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000331" target="1000348">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000334" target="1000331">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000337" target="1000334">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000338" target="1000343">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000338" target="1000346">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000341" target="1000337">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000343" target="1000341">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000346" target="1000337">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000348" target="1000350">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
  </graph>
</graphml>
