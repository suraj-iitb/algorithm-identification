<?xml version="1.0" encoding="UTF-8"?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns
     http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd">

  <!-- Created by Graph::Easy v0.76 at Tue Oct 27 11:05:42 2020 -->

  <key id="d0" for="edge" attr.name="arrowstyle" attr.type="string">
    <default>open</default>
  </key>
  <key id="d1" for="graph" attr.name="colorscheme" attr.type="string">
    <default>w3c</default>
  </key>
  <key id="d2" for="graph" attr.name="flow" attr.type="string">
    <default>east</default>
  </key>
  <key id="d3" for="graph" attr.name="title" attr.type="string">
    <default></default>
  </key>
  <key id="d4" for="node" attr.name="label" attr.type="string"/>
  <key id="d5" for="edge" attr.name="label" attr.type="string"/>
  <key id="d6" for="edge" attr.name="style" attr.type="string">
    <default>solid</default>
  </key>

  <graph id="G" edgedefault="directed">
    <data key="d1">x11</data>
    <data key="d2">south</data>
    <data key="d3">main</data>
    <node id="1000277">
      <data key="d4">(METHOD,main)</data>
    </node>
    <node id="1000282">
      <data key="d4">(&lt;operator&gt;.assignment,C=0)</data>
    </node>
    <node id="1000285">
      <data key="d4">(scanf,scanf(&quot;%d&quot;,&amp;n))</data>
    </node>
    <node id="1000287">
      <data key="d4">(&lt;operator&gt;.addressOf,&amp;n)</data>
    </node>
    <node id="1000289">
      <data key="d4">(&lt;operator&gt;.assignment,S=(int*)malloc(sizeof(int)*n))</data>
    </node>
    <node id="1000291">
      <data key="d4">(&lt;operator&gt;.cast,(int*)malloc(sizeof(int)*n))</data>
    </node>
    <node id="1000292">
      <data key="d4">(UNKNOWN,int*,int*)</data>
    </node>
    <node id="1000293">
      <data key="d4">(malloc,malloc(sizeof(int)*n))</data>
    </node>
    <node id="1000294">
      <data key="d4">(&lt;operator&gt;.multiplication,sizeof(int)*n)</data>
    </node>
    <node id="1000295">
      <data key="d4">(&lt;operator&gt;.sizeOf,sizeof(int))</data>
    </node>
    <node id="1000299">
      <data key="d4">(&lt;operator&gt;.assignment,i=0)</data>
    </node>
    <node id="1000302">
      <data key="d4">(&lt;operator&gt;.lessThan,i&lt;n)</data>
    </node>
    <node id="1000305">
      <data key="d4">(&lt;operator&gt;.postIncrement,i++)</data>
    </node>
    <node id="1000308">
      <data key="d4">(scanf,scanf(&quot;%d&quot;,&amp;S[i]))</data>
    </node>
    <node id="1000310">
      <data key="d4">(&lt;operator&gt;.addressOf,&amp;S[i])</data>
    </node>
    <node id="1000311">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,S[i])</data>
    </node>
    <node id="1000314">
      <data key="d4">(margeSort,margeSort(S,0,n))</data>
    </node>
    <node id="1000318">
      <data key="d4">(printf,printf(&quot;%d&quot;,S[0]))</data>
    </node>
    <node id="1000320">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,S[0])</data>
    </node>
    <node id="1000324">
      <data key="d4">(&lt;operator&gt;.assignment,i=1)</data>
    </node>
    <node id="1000327">
      <data key="d4">(&lt;operator&gt;.lessThan,i&lt;n)</data>
    </node>
    <node id="1000330">
      <data key="d4">(&lt;operator&gt;.postIncrement,i++)</data>
    </node>
    <node id="1000333">
      <data key="d4">(printf,printf(&quot; %d&quot;,S[i]))</data>
    </node>
    <node id="1000335">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,S[i])</data>
    </node>
    <node id="1000338">
      <data key="d4">(printf,printf(&quot;\n%d\n&quot;,C))</data>
    </node>
    <node id="1000341">
      <data key="d4">(METHOD_RETURN,int)</data>
    </node>

    <edge source="1000277" target="1000282">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000282" target="1000287">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000285" target="1000292">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000287" target="1000285">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000289" target="1000299">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000291" target="1000289">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000292" target="1000295">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000293" target="1000291">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000294" target="1000293">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000295" target="1000294">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000299" target="1000302">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000302" target="1000311">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000302" target="1000311">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000302" target="1000314">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000305" target="1000302">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000308" target="1000305">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000310" target="1000308">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000311" target="1000310">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000314" target="1000320">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000318" target="1000324">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000320" target="1000318">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000324" target="1000327">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000327" target="1000335">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000327" target="1000335">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000327" target="1000338">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000330" target="1000327">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000333" target="1000330">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000335" target="1000333">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000338" target="1000341">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
  </graph>
</graphml>
