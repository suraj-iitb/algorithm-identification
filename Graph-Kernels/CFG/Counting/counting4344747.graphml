<?xml version="1.0" encoding="UTF-8"?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns
     http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd">

  <!-- Created by Graph::Easy v0.76 at Tue Oct 27 11:18:17 2020 -->

  <key id="d0" for="edge" attr.name="arrowstyle" attr.type="string">
    <default>open</default>
  </key>
  <key id="d1" for="graph" attr.name="colorscheme" attr.type="string">
    <default>w3c</default>
  </key>
  <key id="d2" for="graph" attr.name="flow" attr.type="string">
    <default>east</default>
  </key>
  <key id="d3" for="graph" attr.name="title" attr.type="string">
    <default></default>
  </key>
  <key id="d4" for="node" attr.name="label" attr.type="string"/>
  <key id="d5" for="edge" attr.name="label" attr.type="string"/>
  <key id="d6" for="edge" attr.name="style" attr.type="string">
    <default>solid</default>
  </key>

  <graph id="G" edgedefault="directed">
    <data key="d1">x11</data>
    <data key="d2">south</data>
    <data key="d3">main</data>
    <node id="1000288">
      <data key="d4">(METHOD,main)</data>
    </node>
    <node id="1000292">
      <data key="d4">(scanf,scanf(&quot;%d&quot;, &amp;n))</data>
    </node>
    <node id="1000294">
      <data key="d4">(&lt;operator&gt;.addressOf,&amp;n)</data>
    </node>
    <node id="1000297">
      <data key="d4">(&lt;operator&gt;.assignment,*array = malloc(n * sizeof(int)))</data>
    </node>
    <node id="1000299">
      <data key="d4">(malloc,malloc(n * sizeof(int)))</data>
    </node>
    <node id="1000300">
      <data key="d4">(&lt;operator&gt;.multiplication,n * sizeof(int))</data>
    </node>
    <node id="1000302">
      <data key="d4">(&lt;operator&gt;.sizeOf,sizeof(int))</data>
    </node>
    <node id="1000306">
      <data key="d4">(&lt;operator&gt;.assignment,i = 0)</data>
    </node>
    <node id="1000309">
      <data key="d4">(&lt;operator&gt;.lessThan,i &lt; n)</data>
    </node>
    <node id="1000312">
      <data key="d4">(&lt;operator&gt;.postIncrement,i++)</data>
    </node>
    <node id="1000315">
      <data key="d4">(scanf,scanf(&quot;%d&quot;, &amp;array[i]))</data>
    </node>
    <node id="1000317">
      <data key="d4">(&lt;operator&gt;.addressOf,&amp;array[i])</data>
    </node>
    <node id="1000318">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,array[i])</data>
    </node>
    <node id="1000321">
      <data key="d4">(countingSort,countingSort(array, n))</data>
    </node>
    <node id="1000326">
      <data key="d4">(&lt;operator&gt;.assignment,i = 0)</data>
    </node>
    <node id="1000329">
      <data key="d4">(&lt;operator&gt;.lessThan,i &lt; n)</data>
    </node>
    <node id="1000332">
      <data key="d4">(&lt;operator&gt;.postIncrement,i++)</data>
    </node>
    <node id="1000335">
      <data key="d4">(printf,printf(&quot;%d&quot;, array[i]))</data>
    </node>
    <node id="1000337">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,array[i])</data>
    </node>
    <node id="1000341">
      <data key="d4">(&lt;operator&gt;.notEquals,i != n - 1)</data>
    </node>
    <node id="1000343">
      <data key="d4">(&lt;operator&gt;.subtraction,n - 1)</data>
    </node>
    <node id="1000347">
      <data key="d4">(printf,printf(&quot; &quot;))</data>
    </node>
    <node id="1000349">
      <data key="d4">(printf,printf(&quot;\n&quot;))</data>
    </node>
    <node id="1000351">
      <data key="d4">(free,free(array))</data>
    </node>
    <node id="1000353">
      <data key="d4">(RETURN,return 0;,return 0;)</data>
    </node>
    <node id="1000355">
      <data key="d4">(METHOD_RETURN,int)</data>
    </node>

    <edge source="1000288" target="1000294">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000292" target="1000302">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000294" target="1000292">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000297" target="1000306">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000299" target="1000297">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000300" target="1000299">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000302" target="1000300">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000306" target="1000309">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000309" target="1000318">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000309" target="1000318">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000309" target="1000321">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000312" target="1000309">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000315" target="1000312">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000317" target="1000315">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000318" target="1000317">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000321" target="1000326">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000326" target="1000329">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000329" target="1000337">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000329" target="1000337">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000329" target="1000349">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000332" target="1000329">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000335" target="1000343">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000337" target="1000335">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000341" target="1000332">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000341" target="1000347">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000343" target="1000341">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000347" target="1000332">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000349" target="1000351">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000351" target="1000353">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000353" target="1000355">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
  </graph>
</graphml>
