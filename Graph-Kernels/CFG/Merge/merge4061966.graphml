<?xml version="1.0" encoding="UTF-8"?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns
     http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd">

  <!-- Created by Graph::Easy v0.76 at Tue Oct 27 09:30:22 2020 -->

  <key id="d0" for="edge" attr.name="arrowstyle" attr.type="string">
    <default>open</default>
  </key>
  <key id="d1" for="graph" attr.name="colorscheme" attr.type="string">
    <default>w3c</default>
  </key>
  <key id="d2" for="graph" attr.name="flow" attr.type="string">
    <default>east</default>
  </key>
  <key id="d3" for="graph" attr.name="title" attr.type="string">
    <default></default>
  </key>
  <key id="d4" for="node" attr.name="label" attr.type="string"/>
  <key id="d5" for="edge" attr.name="label" attr.type="string"/>
  <key id="d6" for="edge" attr.name="style" attr.type="string">
    <default>solid</default>
  </key>

  <graph id="G" edgedefault="directed">
    <data key="d1">x11</data>
    <data key="d2">south</data>
    <data key="d3">merge</data>
    <node id="1000185">
      <data key="d4">(METHOD,merge)</data>
    </node>
    <node id="1000196">
      <data key="d4">(&lt;operator&gt;.assignment,n1 = mid - left)</data>
    </node>
    <node id="1000198">
      <data key="d4">(&lt;operator&gt;.subtraction,mid - left)</data>
    </node>
    <node id="1000201">
      <data key="d4">(&lt;operator&gt;.assignment,n2 = right - mid)</data>
    </node>
    <node id="1000203">
      <data key="d4">(&lt;operator&gt;.subtraction,right - mid)</data>
    </node>
    <node id="1000208">
      <data key="d4">(&lt;operator&gt;.assignment,l = (int *)malloc((n1+2)*sizeof(int)))</data>
    </node>
    <node id="1000210">
      <data key="d4">(&lt;operator&gt;.cast,(int *)malloc((n1+2)*sizeof(int)))</data>
    </node>
    <node id="1000211">
      <data key="d4">(UNKNOWN,int *,int *)</data>
    </node>
    <node id="1000212">
      <data key="d4">(malloc,malloc((n1+2)*sizeof(int)))</data>
    </node>
    <node id="1000213">
      <data key="d4">(&lt;operator&gt;.multiplication,(n1+2)*sizeof(int))</data>
    </node>
    <node id="1000214">
      <data key="d4">(&lt;operator&gt;.addition,n1+2)</data>
    </node>
    <node id="1000217">
      <data key="d4">(&lt;operator&gt;.sizeOf,sizeof(int))</data>
    </node>
    <node id="1000219">
      <data key="d4">(&lt;operator&gt;.assignment,r = (int *)malloc((n2+2)*sizeof(int)))</data>
    </node>
    <node id="1000221">
      <data key="d4">(&lt;operator&gt;.cast,(int *)malloc((n2+2)*sizeof(int)))</data>
    </node>
    <node id="1000222">
      <data key="d4">(UNKNOWN,int *,int *)</data>
    </node>
    <node id="1000223">
      <data key="d4">(malloc,malloc((n2+2)*sizeof(int)))</data>
    </node>
    <node id="1000224">
      <data key="d4">(&lt;operator&gt;.multiplication,(n2+2)*sizeof(int))</data>
    </node>
    <node id="1000225">
      <data key="d4">(&lt;operator&gt;.addition,n2+2)</data>
    </node>
    <node id="1000228">
      <data key="d4">(&lt;operator&gt;.sizeOf,sizeof(int))</data>
    </node>
    <node id="1000231">
      <data key="d4">(&lt;operator&gt;.assignment,i=0)</data>
    </node>
    <node id="1000234">
      <data key="d4">(&lt;operator&gt;.lessThan,i&lt;n1)</data>
    </node>
    <node id="1000237">
      <data key="d4">(&lt;operator&gt;.postIncrement,i++)</data>
    </node>
    <node id="1000239">
      <data key="d4">(&lt;operator&gt;.assignment,l[i] = A[left+i])</data>
    </node>
    <node id="1000240">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,l[i])</data>
    </node>
    <node id="1000243">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,A[left+i])</data>
    </node>
    <node id="1000245">
      <data key="d4">(&lt;operator&gt;.addition,left+i)</data>
    </node>
    <node id="1000249">
      <data key="d4">(&lt;operator&gt;.assignment,i=0)</data>
    </node>
    <node id="1000252">
      <data key="d4">(&lt;operator&gt;.lessThan,i&lt;n2)</data>
    </node>
    <node id="1000255">
      <data key="d4">(&lt;operator&gt;.postIncrement,i++)</data>
    </node>
    <node id="1000257">
      <data key="d4">(&lt;operator&gt;.assignment,r[i] = A[mid+i])</data>
    </node>
    <node id="1000258">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,r[i])</data>
    </node>
    <node id="1000261">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,A[mid+i])</data>
    </node>
    <node id="1000263">
      <data key="d4">(&lt;operator&gt;.addition,mid+i)</data>
    </node>
    <node id="1000266">
      <data key="d4">(&lt;operator&gt;.assignment,l[n1]=r[n2]=INF)</data>
    </node>
    <node id="1000267">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,l[n1])</data>
    </node>
    <node id="1000270">
      <data key="d4">(&lt;operator&gt;.assignment,r[n2]=INF)</data>
    </node>
    <node id="1000271">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,r[n2])</data>
    </node>
    <node id="1000275">
      <data key="d4">(&lt;operator&gt;.assignment,i=j=0)</data>
    </node>
    <node id="1000277">
      <data key="d4">(&lt;operator&gt;.assignment,j=0)</data>
    </node>
    <node id="1000281">
      <data key="d4">(&lt;operator&gt;.assignment,k=left)</data>
    </node>
    <node id="1000284">
      <data key="d4">(&lt;operator&gt;.lessThan,k&lt;right)</data>
    </node>
    <node id="1000287">
      <data key="d4">(&lt;operator&gt;.postIncrement,k++)</data>
    </node>
    <node id="1000290">
      <data key="d4">(&lt;operator&gt;.postIncrement,cnt++)</data>
    </node>
    <node id="1000293">
      <data key="d4">(&lt;operator&gt;.lessEqualsThan,l[i] &lt;= r[j])</data>
    </node>
    <node id="1000294">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,l[i])</data>
    </node>
    <node id="1000297">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,r[j])</data>
    </node>
    <node id="1000301">
      <data key="d4">(&lt;operator&gt;.assignment,A[k] = l[i])</data>
    </node>
    <node id="1000302">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,A[k])</data>
    </node>
    <node id="1000305">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,l[i])</data>
    </node>
    <node id="1000308">
      <data key="d4">(&lt;operator&gt;.postIncrement,i++)</data>
    </node>
    <node id="1000312">
      <data key="d4">(&lt;operator&gt;.assignment,A[k] = r[j])</data>
    </node>
    <node id="1000313">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,A[k])</data>
    </node>
    <node id="1000316">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,r[j])</data>
    </node>
    <node id="1000319">
      <data key="d4">(&lt;operator&gt;.postIncrement,j++)</data>
    </node>
    <node id="1000321">
      <data key="d4">(free,free(l))</data>
    </node>
    <node id="1000323">
      <data key="d4">(free,free(r))</data>
    </node>
    <node id="1000325">
      <data key="d4">(METHOD_RETURN,void)</data>
    </node>

    <edge source="1000185" target="1000198">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000196" target="1000203">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000198" target="1000196">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000201" target="1000211">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000203" target="1000201">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000208" target="1000222">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000210" target="1000208">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000211" target="1000214">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000212" target="1000210">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000213" target="1000212">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000214" target="1000217">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000217" target="1000213">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000219" target="1000231">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000221" target="1000219">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000222" target="1000225">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000223" target="1000221">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000224" target="1000223">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000225" target="1000228">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000228" target="1000224">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000231" target="1000234">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000234" target="1000240">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000234" target="1000240">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000234" target="1000249">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000237" target="1000234">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000239" target="1000237">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000240" target="1000245">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000243" target="1000239">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000245" target="1000243">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000249" target="1000252">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000252" target="1000258">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000252" target="1000258">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000252" target="1000267">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000255" target="1000252">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000257" target="1000255">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000258" target="1000263">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000261" target="1000257">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000263" target="1000261">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000266" target="1000277">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000267" target="1000271">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000270" target="1000266">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000271" target="1000270">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000275" target="1000281">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000277" target="1000275">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000281" target="1000284">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000284" target="1000290">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000284" target="1000290">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000284" target="1000321">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000287" target="1000284">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000290" target="1000294">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000293" target="1000302">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000293" target="1000313">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000294" target="1000297">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000297" target="1000293">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000301" target="1000308">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000302" target="1000305">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000305" target="1000301">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000308" target="1000287">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000312" target="1000319">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000313" target="1000316">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000316" target="1000312">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000319" target="1000287">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000321" target="1000323">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000323" target="1000325">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
  </graph>
</graphml>
