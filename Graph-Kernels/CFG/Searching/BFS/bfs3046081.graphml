<?xml version="1.0" encoding="UTF-8"?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns
     http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd">

  <!-- Created by Graph::Easy v0.76 at Tue Jun  8 22:14:11 2021 -->

  <key id="d0" for="edge" attr.name="arrowstyle" attr.type="string">
    <default>open</default>
  </key>
  <key id="d1" for="graph" attr.name="colorscheme" attr.type="string">
    <default>w3c</default>
  </key>
  <key id="d2" for="graph" attr.name="flow" attr.type="string">
    <default>east</default>
  </key>
  <key id="d3" for="graph" attr.name="title" attr.type="string">
    <default></default>
  </key>
  <key id="d4" for="node" attr.name="label" attr.type="string"/>
  <key id="d5" for="edge" attr.name="label" attr.type="string"/>
  <key id="d6" for="edge" attr.name="style" attr.type="string">
    <default>solid</default>
  </key>

  <graph id="G" edgedefault="directed">
    <data key="d1">x11</data>
    <data key="d2">south</data>
    <data key="d3">bfs</data>
    <node id="1000180">
      <data key="d4">(METHOD,bfs)</data>
    </node>
    <node id="1000183">
      <data key="d4">(&lt;operator&gt;.assignment,s = 1)</data>
    </node>
    <node id="1000189">
      <data key="d4">(&lt;operator&gt;.assignment,i = 1)</data>
    </node>
    <node id="1000192">
      <data key="d4">(&lt;operator&gt;.lessEqualsThan,i &lt;= num)</data>
    </node>
    <node id="1000195">
      <data key="d4">(&lt;operator&gt;.postIncrement,i++)</data>
    </node>
    <node id="1000198">
      <data key="d4">(&lt;operator&gt;.assignment,d[i] = -1)</data>
    </node>
    <node id="1000199">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,d[i])</data>
    </node>
    <node id="1000202">
      <data key="d4">(&lt;operator&gt;.minus,-1)</data>
    </node>
    <node id="1000204">
      <data key="d4">(&lt;operator&gt;.assignment,color[s] = GRAY)</data>
    </node>
    <node id="1000205">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,color[s])</data>
    </node>
    <node id="1000209">
      <data key="d4">(&lt;operator&gt;.assignment,d[s] = 0)</data>
    </node>
    <node id="1000210">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,d[s])</data>
    </node>
    <node id="1000214">
      <data key="d4">(enq,enq(s))</data>
    </node>
    <node id="1000217">
      <data key="d4">(&lt;operator&gt;.notEquals,top != tail)</data>
    </node>
    <node id="1000221">
      <data key="d4">(&lt;operator&gt;.assignment,u = deq())</data>
    </node>
    <node id="1000223">
      <data key="d4">(deq,deq())</data>
    </node>
    <node id="1000225">
      <data key="d4">(&lt;operator&gt;.assignment,i = 1)</data>
    </node>
    <node id="1000228">
      <data key="d4">(&lt;operator&gt;.lessEqualsThan,i &lt;= num)</data>
    </node>
    <node id="1000231">
      <data key="d4">(&lt;operator&gt;.postIncrement,i++)</data>
    </node>
    <node id="1000235">
      <data key="d4">(&lt;operator&gt;.logicalAnd,A[u][i] == 1 &amp;&amp; color[i] ==WHITE)</data>
    </node>
    <node id="1000236">
      <data key="d4">(&lt;operator&gt;.equals,A[u][i] == 1)</data>
    </node>
    <node id="1000237">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,A[u][i])</data>
    </node>
    <node id="1000238">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,A[u])</data>
    </node>
    <node id="1000243">
      <data key="d4">(&lt;operator&gt;.equals,color[i] ==WHITE)</data>
    </node>
    <node id="1000244">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,color[i])</data>
    </node>
    <node id="1000249">
      <data key="d4">(&lt;operator&gt;.assignment,color[i] = GRAY)</data>
    </node>
    <node id="1000250">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,color[i])</data>
    </node>
    <node id="1000254">
      <data key="d4">(&lt;operator&gt;.assignment,d[i] = d[u]+1)</data>
    </node>
    <node id="1000255">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,d[i])</data>
    </node>
    <node id="1000258">
      <data key="d4">(&lt;operator&gt;.addition,d[u]+1)</data>
    </node>
    <node id="1000259">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,d[u])</data>
    </node>
    <node id="1000263">
      <data key="d4">(enq,enq(i))</data>
    </node>
    <node id="1000265">
      <data key="d4">(&lt;operator&gt;.assignment,color[u] = BLACK)</data>
    </node>
    <node id="1000266">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,color[u])</data>
    </node>
    <node id="1000270">
      <data key="d4">(METHOD_RETURN,void)</data>
    </node>

    <edge source="1000180" target="1000183">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000183" target="1000189">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000189" target="1000192">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000192" target="1000199">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000192" target="1000199">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000192" target="1000205">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000195" target="1000192">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000198" target="1000195">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000199" target="1000202">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000202" target="1000198">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000204" target="1000210">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000205" target="1000204">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000209" target="1000214">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000210" target="1000209">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000214" target="1000217">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000217" target="1000223">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000217" target="1000270">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000221" target="1000225">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000223" target="1000221">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000225" target="1000228">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000228" target="1000238">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000228" target="1000238">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000228" target="1000266">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000231" target="1000228">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000235" target="1000231">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000235" target="1000250">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000236" target="1000235">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000236" target="1000244">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000237" target="1000236">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000238" target="1000237">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000243" target="1000235">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000244" target="1000243">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000249" target="1000255">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000250" target="1000249">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000254" target="1000263">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000255" target="1000259">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000258" target="1000254">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000259" target="1000258">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000263" target="1000231">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000265" target="1000217">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000266" target="1000265">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
  </graph>
</graphml>
