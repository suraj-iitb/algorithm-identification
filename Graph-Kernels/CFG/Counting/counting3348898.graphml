<?xml version="1.0" encoding="UTF-8"?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns
     http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd">

  <!-- Created by Graph::Easy v0.76 at Tue Oct 27 10:51:37 2020 -->

  <key id="d0" for="edge" attr.name="arrowstyle" attr.type="string">
    <default>open</default>
  </key>
  <key id="d1" for="graph" attr.name="colorscheme" attr.type="string">
    <default>w3c</default>
  </key>
  <key id="d2" for="graph" attr.name="flow" attr.type="string">
    <default>east</default>
  </key>
  <key id="d3" for="graph" attr.name="title" attr.type="string">
    <default></default>
  </key>
  <key id="d4" for="node" attr.name="label" attr.type="string"/>
  <key id="d5" for="edge" attr.name="label" attr.type="string"/>
  <key id="d6" for="edge" attr.name="style" attr.type="string">
    <default>solid</default>
  </key>

  <graph id="G" edgedefault="directed">
    <data key="d1">x11</data>
    <data key="d2">south</data>
    <data key="d3">main</data>
    <node id="1000112">
      <data key="d4">(METHOD,main)</data>
    </node>
    <node id="1000120">
      <data key="d4">(scanf,scanf(&quot;%d&quot;, &amp;n))</data>
    </node>
    <node id="1000122">
      <data key="d4">(&lt;operator&gt;.addressOf,&amp;n)</data>
    </node>
    <node id="1000124">
      <data key="d4">(&lt;operator&gt;.assignment,A = malloc(sizeof(short) * n + 1))</data>
    </node>
    <node id="1000126">
      <data key="d4">(malloc,malloc(sizeof(short) * n + 1))</data>
    </node>
    <node id="1000127">
      <data key="d4">(&lt;operator&gt;.addition,sizeof(short) * n + 1)</data>
    </node>
    <node id="1000128">
      <data key="d4">(&lt;operator&gt;.multiplication,sizeof(short) * n)</data>
    </node>
    <node id="1000129">
      <data key="d4">(&lt;operator&gt;.sizeOf,sizeof(short))</data>
    </node>
    <node id="1000133">
      <data key="d4">(&lt;operator&gt;.assignment,B = malloc(sizeof(short) * n + 1))</data>
    </node>
    <node id="1000135">
      <data key="d4">(malloc,malloc(sizeof(short) * n + 1))</data>
    </node>
    <node id="1000136">
      <data key="d4">(&lt;operator&gt;.addition,sizeof(short) * n + 1)</data>
    </node>
    <node id="1000137">
      <data key="d4">(&lt;operator&gt;.multiplication,sizeof(short) * n)</data>
    </node>
    <node id="1000138">
      <data key="d4">(&lt;operator&gt;.sizeOf,sizeof(short))</data>
    </node>
    <node id="1000143">
      <data key="d4">(&lt;operator&gt;.assignment,i = 0)</data>
    </node>
    <node id="1000146">
      <data key="d4">(&lt;operator&gt;.lessEqualsThan,i &lt;= VMAX)</data>
    </node>
    <node id="1000149">
      <data key="d4">(&lt;operator&gt;.postIncrement,i++)</data>
    </node>
    <node id="1000152">
      <data key="d4">(&lt;operator&gt;.assignment,C[i] = 0)</data>
    </node>
    <node id="1000153">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,C[i])</data>
    </node>
    <node id="1000158">
      <data key="d4">(&lt;operator&gt;.assignment,i = 0)</data>
    </node>
    <node id="1000161">
      <data key="d4">(&lt;operator&gt;.lessThan,i &lt; n)</data>
    </node>
    <node id="1000164">
      <data key="d4">(&lt;operator&gt;.postIncrement,i++)</data>
    </node>
    <node id="1000167">
      <data key="d4">(scanf,scanf(&quot;%hu&quot;, &amp;A[i + 1]))</data>
    </node>
    <node id="1000169">
      <data key="d4">(&lt;operator&gt;.addressOf,&amp;A[i + 1])</data>
    </node>
    <node id="1000170">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,A[i + 1])</data>
    </node>
    <node id="1000172">
      <data key="d4">(&lt;operator&gt;.addition,i + 1)</data>
    </node>
    <node id="1000175">
      <data key="d4">(&lt;operator&gt;.postIncrement,C[A[i + 1]]++)</data>
    </node>
    <node id="1000176">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,C[A[i + 1]])</data>
    </node>
    <node id="1000178">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,A[i + 1])</data>
    </node>
    <node id="1000180">
      <data key="d4">(&lt;operator&gt;.addition,i + 1)</data>
    </node>
    <node id="1000184">
      <data key="d4">(&lt;operator&gt;.assignment,i = 1)</data>
    </node>
    <node id="1000187">
      <data key="d4">(&lt;operator&gt;.lessEqualsThan,i &lt;= VMAX)</data>
    </node>
    <node id="1000190">
      <data key="d4">(&lt;operator&gt;.postIncrement,i++)</data>
    </node>
    <node id="1000193">
      <data key="d4">(&lt;operator&gt;.assignment,C[i] = C[i] + C[i - 1])</data>
    </node>
    <node id="1000194">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,C[i])</data>
    </node>
    <node id="1000197">
      <data key="d4">(&lt;operator&gt;.addition,C[i] + C[i - 1])</data>
    </node>
    <node id="1000198">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,C[i])</data>
    </node>
    <node id="1000201">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,C[i - 1])</data>
    </node>
    <node id="1000203">
      <data key="d4">(&lt;operator&gt;.subtraction,i - 1)</data>
    </node>
    <node id="1000207">
      <data key="d4">(&lt;operator&gt;.assignment,j = 1)</data>
    </node>
    <node id="1000210">
      <data key="d4">(&lt;operator&gt;.lessEqualsThan,j &lt;= n)</data>
    </node>
    <node id="1000213">
      <data key="d4">(&lt;operator&gt;.postIncrement,j++)</data>
    </node>
    <node id="1000216">
      <data key="d4">(&lt;operator&gt;.assignment,B[C[A[j]]] = A[j])</data>
    </node>
    <node id="1000217">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,B[C[A[j]]])</data>
    </node>
    <node id="1000219">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,C[A[j]])</data>
    </node>
    <node id="1000221">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,A[j])</data>
    </node>
    <node id="1000224">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,A[j])</data>
    </node>
    <node id="1000227">
      <data key="d4">(&lt;operator&gt;.postDecrement,C[A[j]]--)</data>
    </node>
    <node id="1000228">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,C[A[j]])</data>
    </node>
    <node id="1000230">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,A[j])</data>
    </node>
    <node id="1000234">
      <data key="d4">(&lt;operator&gt;.assignment,i = 1)</data>
    </node>
    <node id="1000237">
      <data key="d4">(&lt;operator&gt;.lessEqualsThan,i &lt;= n)</data>
    </node>
    <node id="1000240">
      <data key="d4">(&lt;operator&gt;.postIncrement,i++)</data>
    </node>
    <node id="1000244">
      <data key="d4">(&lt;operator&gt;.greaterThan,i &gt; 1)</data>
    </node>
    <node id="1000248">
      <data key="d4">(printf,printf(&quot; &quot;))</data>
    </node>
    <node id="1000250">
      <data key="d4">(printf,printf(&quot;%d&quot;, B[i]))</data>
    </node>
    <node id="1000252">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,B[i])</data>
    </node>
    <node id="1000255">
      <data key="d4">(printf,printf(&quot;\n&quot;))</data>
    </node>
    <node id="1000257">
      <data key="d4">(RETURN,return 0;,return 0;)</data>
    </node>
    <node id="1000259">
      <data key="d4">(METHOD_RETURN,int)</data>
    </node>

    <edge source="1000112" target="1000122">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000120" target="1000129">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000122" target="1000120">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000124" target="1000138">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000126" target="1000124">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000127" target="1000126">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000128" target="1000127">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000129" target="1000128">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000133" target="1000143">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000135" target="1000133">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000136" target="1000135">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000137" target="1000136">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000138" target="1000137">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000143" target="1000146">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000146" target="1000153">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000146" target="1000153">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000146" target="1000158">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000149" target="1000146">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000152" target="1000149">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000153" target="1000152">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000158" target="1000161">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000161" target="1000172">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000161" target="1000172">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000161" target="1000184">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000164" target="1000161">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000167" target="1000180">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000169" target="1000167">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000170" target="1000169">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000172" target="1000170">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000175" target="1000164">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000176" target="1000175">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000178" target="1000176">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000180" target="1000178">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000184" target="1000187">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000187" target="1000194">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000187" target="1000194">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000187" target="1000207">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000190" target="1000187">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000193" target="1000190">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000194" target="1000198">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000197" target="1000193">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000198" target="1000203">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000201" target="1000197">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000203" target="1000201">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000207" target="1000210">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000210" target="1000221">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000210" target="1000221">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000210" target="1000234">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000213" target="1000210">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000216" target="1000230">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000217" target="1000224">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000219" target="1000217">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000221" target="1000219">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000224" target="1000216">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000227" target="1000213">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000228" target="1000227">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000230" target="1000228">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000234" target="1000237">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000237" target="1000244">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000237" target="1000244">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000237" target="1000255">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000240" target="1000237">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000244" target="1000248">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000244" target="1000252">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000248" target="1000252">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000250" target="1000240">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000252" target="1000250">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000255" target="1000257">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000257" target="1000259">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
  </graph>
</graphml>
