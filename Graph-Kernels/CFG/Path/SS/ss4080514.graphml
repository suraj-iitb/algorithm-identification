<?xml version="1.0" encoding="UTF-8"?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns
     http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd">

  <!-- Created by Graph::Easy v0.76 at Thu Jun 10 23:26:53 2021 -->

  <key id="d0" for="edge" attr.name="arrowstyle" attr.type="string">
    <default>open</default>
  </key>
  <key id="d1" for="graph" attr.name="colorscheme" attr.type="string">
    <default>w3c</default>
  </key>
  <key id="d2" for="graph" attr.name="flow" attr.type="string">
    <default>east</default>
  </key>
  <key id="d3" for="graph" attr.name="title" attr.type="string">
    <default></default>
  </key>
  <key id="d4" for="node" attr.name="label" attr.type="string"/>
  <key id="d5" for="edge" attr.name="label" attr.type="string"/>
  <key id="d6" for="edge" attr.name="style" attr.type="string">
    <default>solid</default>
  </key>

  <graph id="G" edgedefault="directed">
    <data key="d1">x11</data>
    <data key="d2">south</data>
    <data key="d3">main</data>
    <node id="1000116">
      <data key="d4">(METHOD,main)</data>
    </node>
    <node id="1000122">
      <data key="d4">(scanf,scanf(&quot;%lld %lld %lld&quot;, &amp;N, &amp;E, &amp;r))</data>
    </node>
    <node id="1000124">
      <data key="d4">(&lt;operator&gt;.addressOf,&amp;N)</data>
    </node>
    <node id="1000126">
      <data key="d4">(&lt;operator&gt;.addressOf,&amp;E)</data>
    </node>
    <node id="1000128">
      <data key="d4">(&lt;operator&gt;.addressOf,&amp;r)</data>
    </node>
    <node id="1000135">
      <data key="d4">(&lt;operator&gt;.lessThan,priority_queue&lt;pair&lt;ll)</data>
    </node>
    <node id="1000137">
      <data key="d4">(&lt;operator&gt;.lessThan,pair&lt;ll)</data>
    </node>
    <node id="1000140">
      <data key="d4">(&lt;operator&gt;.arithmeticShiftRight,ll&gt;&gt; pq)</data>
    </node>
    <node id="1000144">
      <data key="d4">(G,G(N))</data>
    </node>
    <node id="1000148">
      <data key="d4">(&lt;operator&gt;.assignment,i = 0)</data>
    </node>
    <node id="1000151">
      <data key="d4">(&lt;operator&gt;.lessThan,i &lt; N)</data>
    </node>
    <node id="1000154">
      <data key="d4">(&lt;operator&gt;.postIncrement,i++)</data>
    </node>
    <node id="1000157">
      <data key="d4">(&lt;operator&gt;.assignment,d[i]     = INFTY)</data>
    </node>
    <node id="1000158">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,d[i])</data>
    </node>
    <node id="1000163">
      <data key="d4">(&lt;operator&gt;.equals,r == i)</data>
    </node>
    <node id="1000167">
      <data key="d4">(pq.push,pq.push(make_pair(0,i)))</data>
    </node>
    <node id="1000168">
      <data key="d4">(make_pair,make_pair(0,i))</data>
    </node>
    <node id="1000171">
      <data key="d4">(&lt;operator&gt;.assignment,d[i] = 0)</data>
    </node>
    <node id="1000172">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,d[i])</data>
    </node>
    <node id="1000178">
      <data key="d4">(pq.push,pq.push(make_pair(-INFTY,i)))</data>
    </node>
    <node id="1000179">
      <data key="d4">(make_pair,make_pair(-INFTY,i))</data>
    </node>
    <node id="1000180">
      <data key="d4">(&lt;operator&gt;.minus,-INFTY)</data>
    </node>
    <node id="1000185">
      <data key="d4">(&lt;operator&gt;.assignment,i = 0)</data>
    </node>
    <node id="1000188">
      <data key="d4">(&lt;operator&gt;.lessThan,i &lt; E)</data>
    </node>
    <node id="1000191">
      <data key="d4">(&lt;operator&gt;.postIncrement,i++)</data>
    </node>
    <node id="1000194">
      <data key="d4">(scanf,scanf(&quot;%d %d %d&quot;, &amp;u, &amp;v, &amp;weight))</data>
    </node>
    <node id="1000196">
      <data key="d4">(&lt;operator&gt;.addressOf,&amp;u)</data>
    </node>
    <node id="1000198">
      <data key="d4">(&lt;operator&gt;.addressOf,&amp;v)</data>
    </node>
    <node id="1000200">
      <data key="d4">(&lt;operator&gt;.addressOf,&amp;weight)</data>
    </node>
    <node id="1000202">
      <data key="d4">(G[u].push_back,G[u].push_back( make_pair(weight, v) ))</data>
    </node>
    <node id="1000203">
      <data key="d4">(make_pair,make_pair(weight, v))</data>
    </node>
    <node id="1000207">
      <data key="d4">(&lt;operator&gt;.logicalNot,!pq.empty())</data>
    </node>
    <node id="1000208">
      <data key="d4">(pq.empty,pq.empty())</data>
    </node>
    <node id="1000211">
      <data key="d4">(&lt;operator&gt;.assignment,edgepair  =  pq.top())</data>
    </node>
    <node id="1000213">
      <data key="d4">(pq.top,pq.top())</data>
    </node>
    <node id="1000214">
      <data key="d4">(pq.pop,pq.pop())</data>
    </node>
    <node id="1000215">
      <data key="d4">(&lt;operator&gt;.assignment,u                       =  edgepair.second)</data>
    </node>
    <node id="1000217">
      <data key="d4">(&lt;operator&gt;.fieldAccess,edgepair.second)</data>
    </node>
    <node id="1000219">
      <data key="d4">(FIELD_IDENTIFIER,second,second)</data>
    </node>
    <node id="1000221">
      <data key="d4">(&lt;operator&gt;.lessThan,d[u] &lt; -edgepair.first)</data>
    </node>
    <node id="1000222">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,d[u])</data>
    </node>
    <node id="1000225">
      <data key="d4">(&lt;operator&gt;.minus,-edgepair.first)</data>
    </node>
    <node id="1000226">
      <data key="d4">(&lt;operator&gt;.fieldAccess,edgepair.first)</data>
    </node>
    <node id="1000228">
      <data key="d4">(FIELD_IDENTIFIER,first,first)</data>
    </node>
    <node id="1000232">
      <data key="d4">(&lt;operator&gt;.greaterThan,d[e.second]    &gt; d[u] + e.first)</data>
    </node>
    <node id="1000233">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,d[e.second])</data>
    </node>
    <node id="1000235">
      <data key="d4">(&lt;operator&gt;.fieldAccess,e.second)</data>
    </node>
    <node id="1000237">
      <data key="d4">(FIELD_IDENTIFIER,second,second)</data>
    </node>
    <node id="1000238">
      <data key="d4">(&lt;operator&gt;.addition,d[u] + e.first)</data>
    </node>
    <node id="1000239">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,d[u])</data>
    </node>
    <node id="1000242">
      <data key="d4">(&lt;operator&gt;.fieldAccess,e.first)</data>
    </node>
    <node id="1000244">
      <data key="d4">(FIELD_IDENTIFIER,first,first)</data>
    </node>
    <node id="1000246">
      <data key="d4">(&lt;operator&gt;.assignment,d[e.second]     = d[u] + e.first)</data>
    </node>
    <node id="1000247">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,d[e.second])</data>
    </node>
    <node id="1000249">
      <data key="d4">(&lt;operator&gt;.fieldAccess,e.second)</data>
    </node>
    <node id="1000251">
      <data key="d4">(FIELD_IDENTIFIER,second,second)</data>
    </node>
    <node id="1000252">
      <data key="d4">(&lt;operator&gt;.addition,d[u] + e.first)</data>
    </node>
    <node id="1000253">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,d[u])</data>
    </node>
    <node id="1000256">
      <data key="d4">(&lt;operator&gt;.fieldAccess,e.first)</data>
    </node>
    <node id="1000258">
      <data key="d4">(FIELD_IDENTIFIER,first,first)</data>
    </node>
    <node id="1000259">
      <data key="d4">(pq.push,pq.push(make_pair(-d[e.second],e.second)))</data>
    </node>
    <node id="1000260">
      <data key="d4">(make_pair,make_pair(-d[e.second],e.second))</data>
    </node>
    <node id="1000261">
      <data key="d4">(&lt;operator&gt;.minus,-d[e.second])</data>
    </node>
    <node id="1000262">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,d[e.second])</data>
    </node>
    <node id="1000264">
      <data key="d4">(&lt;operator&gt;.fieldAccess,e.second)</data>
    </node>
    <node id="1000266">
      <data key="d4">(FIELD_IDENTIFIER,second,second)</data>
    </node>
    <node id="1000267">
      <data key="d4">(&lt;operator&gt;.fieldAccess,e.second)</data>
    </node>
    <node id="1000269">
      <data key="d4">(FIELD_IDENTIFIER,second,second)</data>
    </node>
    <node id="1000272">
      <data key="d4">(&lt;operator&gt;.assignment,i = 0)</data>
    </node>
    <node id="1000275">
      <data key="d4">(&lt;operator&gt;.lessThan,i &lt; N)</data>
    </node>
    <node id="1000278">
      <data key="d4">(&lt;operator&gt;.postIncrement,i++)</data>
    </node>
    <node id="1000282">
      <data key="d4">(&lt;operator&gt;.notEquals,d[i] != INFTY)</data>
    </node>
    <node id="1000283">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,d[i])</data>
    </node>
    <node id="1000287">
      <data key="d4">(printf,printf(&quot;%d\n&quot;, d[i]))</data>
    </node>
    <node id="1000289">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,d[i])</data>
    </node>
    <node id="1000293">
      <data key="d4">(printf,printf(&quot;INF\n&quot;))</data>
    </node>
    <node id="1000295">
      <data key="d4">(RETURN,return 0;,return 0;)</data>
    </node>
    <node id="1000297">
      <data key="d4">(METHOD_RETURN,int)</data>
    </node>

    <edge source="1000116" target="1000124">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000122" target="1000137">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000124" target="1000126">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000126" target="1000128">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000128" target="1000122">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000135" target="1000140">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000137" target="1000135">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000140" target="1000144">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000144" target="1000148">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000148" target="1000151">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000151" target="1000158">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000151" target="1000158">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000151" target="1000185">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000154" target="1000151">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000157" target="1000163">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000158" target="1000157">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000163" target="1000168">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000163" target="1000180">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000167" target="1000172">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000168" target="1000167">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000171" target="1000154">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000172" target="1000171">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000178" target="1000154">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000179" target="1000178">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000180" target="1000179">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000185" target="1000188">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000188" target="1000196">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000188" target="1000196">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000188" target="1000208">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000191" target="1000188">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000194" target="1000203">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000196" target="1000198">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000198" target="1000200">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000200" target="1000194">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000202" target="1000191">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000203" target="1000202">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000207" target="1000213">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000207" target="1000272">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000208" target="1000207">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000211" target="1000214">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000213" target="1000211">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000214" target="1000219">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000215" target="1000222">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000217" target="1000215">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000219" target="1000217">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000221" target="1000208">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000221" target="1000237">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000222" target="1000228">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000225" target="1000221">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000226" target="1000225">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000228" target="1000226">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000232" target="1000208">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000232" target="1000251">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000233" target="1000239">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000235" target="1000233">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000237" target="1000235">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000238" target="1000232">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000239" target="1000244">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000242" target="1000238">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000244" target="1000242">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000246" target="1000266">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000247" target="1000253">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000249" target="1000247">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000251" target="1000249">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000252" target="1000246">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000253" target="1000258">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000256" target="1000252">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000258" target="1000256">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000259" target="1000208">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000260" target="1000259">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000261" target="1000269">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000262" target="1000261">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000264" target="1000262">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000266" target="1000264">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000267" target="1000260">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000269" target="1000267">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000272" target="1000275">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000275" target="1000283">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000275" target="1000283">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000275" target="1000295">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000278" target="1000275">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000282" target="1000289">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000282" target="1000293">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000283" target="1000282">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000287" target="1000278">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000289" target="1000287">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000293" target="1000278">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000295" target="1000297">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
  </graph>
</graphml>
