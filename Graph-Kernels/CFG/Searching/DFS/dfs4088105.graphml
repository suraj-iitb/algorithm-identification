<?xml version="1.0" encoding="UTF-8"?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns
     http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd">

  <!-- Created by Graph::Easy v0.76 at Tue Jun  8 23:24:17 2021 -->

  <key id="d0" for="edge" attr.name="arrowstyle" attr.type="string">
    <default>open</default>
  </key>
  <key id="d1" for="graph" attr.name="colorscheme" attr.type="string">
    <default>w3c</default>
  </key>
  <key id="d2" for="graph" attr.name="flow" attr.type="string">
    <default>east</default>
  </key>
  <key id="d3" for="graph" attr.name="title" attr.type="string">
    <default></default>
  </key>
  <key id="d4" for="node" attr.name="label" attr.type="string"/>
  <key id="d5" for="edge" attr.name="label" attr.type="string"/>
  <key id="d6" for="edge" attr.name="style" attr.type="string">
    <default>solid</default>
  </key>

  <graph id="G" edgedefault="directed">
    <data key="d1">x11</data>
    <data key="d2">south</data>
    <data key="d3">main</data>
    <node id="1000187">
      <data key="d4">(METHOD,main)</data>
    </node>
    <node id="1000194">
      <data key="d4">(&lt;operator&gt;.assignment,flag = 0)</data>
    </node>
    <node id="1000199">
      <data key="d4">(scanf,scanf(&quot;%d&quot;, &amp;n))</data>
    </node>
    <node id="1000201">
      <data key="d4">(&lt;operator&gt;.addressOf,&amp;n)</data>
    </node>
    <node id="1000203">
      <data key="d4">(&lt;operator&gt;.assignment,GRAPH = (GRAPH_T *)malloc(sizeof(GRAPH_T) * (n + 1)))</data>
    </node>
    <node id="1000205">
      <data key="d4">(&lt;operator&gt;.cast,(GRAPH_T *)malloc(sizeof(GRAPH_T) * (n + 1)))</data>
    </node>
    <node id="1000206">
      <data key="d4">(UNKNOWN,GRAPH_T *,GRAPH_T *)</data>
    </node>
    <node id="1000207">
      <data key="d4">(malloc,malloc(sizeof(GRAPH_T) * (n + 1)))</data>
    </node>
    <node id="1000208">
      <data key="d4">(&lt;operator&gt;.multiplication,sizeof(GRAPH_T) * (n + 1))</data>
    </node>
    <node id="1000209">
      <data key="d4">(&lt;operator&gt;.sizeOf,sizeof(GRAPH_T))</data>
    </node>
    <node id="1000211">
      <data key="d4">(&lt;operator&gt;.addition,n + 1)</data>
    </node>
    <node id="1000215">
      <data key="d4">(&lt;operator&gt;.assignment,i = 0)</data>
    </node>
    <node id="1000218">
      <data key="d4">(&lt;operator&gt;.lessThan,i &lt; n)</data>
    </node>
    <node id="1000221">
      <data key="d4">(&lt;operator&gt;.postIncrement,i++)</data>
    </node>
    <node id="1000223">
      <data key="d4">(&lt;operator&gt;.assignment,GRAPH[i].parent = -1)</data>
    </node>
    <node id="1000224">
      <data key="d4">(&lt;operator&gt;.fieldAccess,GRAPH[i].parent)</data>
    </node>
    <node id="1000225">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,GRAPH[i])</data>
    </node>
    <node id="1000228">
      <data key="d4">(FIELD_IDENTIFIER,parent,parent)</data>
    </node>
    <node id="1000229">
      <data key="d4">(&lt;operator&gt;.minus,-1)</data>
    </node>
    <node id="1000232">
      <data key="d4">(&lt;operator&gt;.assignment,i = 0)</data>
    </node>
    <node id="1000235">
      <data key="d4">(&lt;operator&gt;.lessThan,i &lt; n)</data>
    </node>
    <node id="1000238">
      <data key="d4">(&lt;operator&gt;.postIncrement,i++)</data>
    </node>
    <node id="1000241">
      <data key="d4">(scanf,scanf(&quot;%d %d&quot;, &amp;id, &amp;kazu))</data>
    </node>
    <node id="1000243">
      <data key="d4">(&lt;operator&gt;.addressOf,&amp;id)</data>
    </node>
    <node id="1000245">
      <data key="d4">(&lt;operator&gt;.addressOf,&amp;kazu)</data>
    </node>
    <node id="1000247">
      <data key="d4">(&lt;operator&gt;.assignment,GRAPH[id].t_d = -1)</data>
    </node>
    <node id="1000248">
      <data key="d4">(&lt;operator&gt;.fieldAccess,GRAPH[id].t_d)</data>
    </node>
    <node id="1000249">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,GRAPH[id])</data>
    </node>
    <node id="1000252">
      <data key="d4">(FIELD_IDENTIFIER,t_d,t_d)</data>
    </node>
    <node id="1000253">
      <data key="d4">(&lt;operator&gt;.minus,-1)</data>
    </node>
    <node id="1000255">
      <data key="d4">(&lt;operator&gt;.assignment,GRAPH[id].rinsetu_n = kazu)</data>
    </node>
    <node id="1000256">
      <data key="d4">(&lt;operator&gt;.fieldAccess,GRAPH[id].rinsetu_n)</data>
    </node>
    <node id="1000257">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,GRAPH[id])</data>
    </node>
    <node id="1000260">
      <data key="d4">(FIELD_IDENTIFIER,rinsetu_n,rinsetu_n)</data>
    </node>
    <node id="1000263">
      <data key="d4">(&lt;operator&gt;.notEquals,kazu != 0)</data>
    </node>
    <node id="1000267">
      <data key="d4">(&lt;operator&gt;.assignment,GRAPH[id].rinsetu = (int *)malloc(sizeof(int) * kazu))</data>
    </node>
    <node id="1000268">
      <data key="d4">(&lt;operator&gt;.fieldAccess,GRAPH[id].rinsetu)</data>
    </node>
    <node id="1000269">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,GRAPH[id])</data>
    </node>
    <node id="1000272">
      <data key="d4">(FIELD_IDENTIFIER,rinsetu,rinsetu)</data>
    </node>
    <node id="1000273">
      <data key="d4">(&lt;operator&gt;.cast,(int *)malloc(sizeof(int) * kazu))</data>
    </node>
    <node id="1000274">
      <data key="d4">(UNKNOWN,int *,int *)</data>
    </node>
    <node id="1000275">
      <data key="d4">(malloc,malloc(sizeof(int) * kazu))</data>
    </node>
    <node id="1000276">
      <data key="d4">(&lt;operator&gt;.multiplication,sizeof(int) * kazu)</data>
    </node>
    <node id="1000277">
      <data key="d4">(&lt;operator&gt;.sizeOf,sizeof(int))</data>
    </node>
    <node id="1000281">
      <data key="d4">(&lt;operator&gt;.assignment,j = 0)</data>
    </node>
    <node id="1000284">
      <data key="d4">(&lt;operator&gt;.lessThan,j &lt; kazu)</data>
    </node>
    <node id="1000287">
      <data key="d4">(&lt;operator&gt;.postIncrement,j++)</data>
    </node>
    <node id="1000290">
      <data key="d4">(scanf,scanf(&quot;%d&quot;, &amp;num))</data>
    </node>
    <node id="1000292">
      <data key="d4">(&lt;operator&gt;.addressOf,&amp;num)</data>
    </node>
    <node id="1000294">
      <data key="d4">(&lt;operator&gt;.assignment,GRAPH[id].rinsetu[j] = num)</data>
    </node>
    <node id="1000295">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,GRAPH[id].rinsetu[j])</data>
    </node>
    <node id="1000296">
      <data key="d4">(&lt;operator&gt;.fieldAccess,GRAPH[id].rinsetu)</data>
    </node>
    <node id="1000297">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,GRAPH[id])</data>
    </node>
    <node id="1000300">
      <data key="d4">(FIELD_IDENTIFIER,rinsetu,rinsetu)</data>
    </node>
    <node id="1000303">
      <data key="d4">(&lt;operator&gt;.assignment,GRAPH[num].parent = id)</data>
    </node>
    <node id="1000304">
      <data key="d4">(&lt;operator&gt;.fieldAccess,GRAPH[num].parent)</data>
    </node>
    <node id="1000305">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,GRAPH[num])</data>
    </node>
    <node id="1000308">
      <data key="d4">(FIELD_IDENTIFIER,parent,parent)</data>
    </node>
    <node id="1000310">
      <data key="d4">(&lt;operator&gt;.assignment,i = 0)</data>
    </node>
    <node id="1000314">
      <data key="d4">(&lt;operator&gt;.lessEqualsThan,++i &lt;= n)</data>
    </node>
    <node id="1000315">
      <data key="d4">(&lt;operator&gt;.preIncrement,++i)</data>
    </node>
    <node id="1000320">
      <data key="d4">(&lt;operator&gt;.equals,GRAPH[i].parent == -1)</data>
    </node>
    <node id="1000321">
      <data key="d4">(&lt;operator&gt;.fieldAccess,GRAPH[i].parent)</data>
    </node>
    <node id="1000322">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,GRAPH[i])</data>
    </node>
    <node id="1000325">
      <data key="d4">(FIELD_IDENTIFIER,parent,parent)</data>
    </node>
    <node id="1000326">
      <data key="d4">(&lt;operator&gt;.minus,-1)</data>
    </node>
    <node id="1000329">
      <data key="d4">(&lt;operator&gt;.assignment,flag = 1)</data>
    </node>
    <node id="1000332">
      <data key="d4">(Dfs,Dfs(i))</data>
    </node>
    <node id="1000335">
      <data key="d4">(&lt;operator&gt;.notEquals,flag != 1)</data>
    </node>
    <node id="1000338">
      <data key="d4">(Dfs,Dfs(1))</data>
    </node>
    <node id="1000341">
      <data key="d4">(&lt;operator&gt;.assignment,i = 1)</data>
    </node>
    <node id="1000344">
      <data key="d4">(&lt;operator&gt;.lessEqualsThan,i &lt;= n)</data>
    </node>
    <node id="1000347">
      <data key="d4">(&lt;operator&gt;.postIncrement,i++)</data>
    </node>
    <node id="1000349">
      <data key="d4">(printf,printf(&quot;%d %d %d\n&quot;, i, GRAPH[i].t_d, GRAPH[i].t_v))</data>
    </node>
    <node id="1000352">
      <data key="d4">(&lt;operator&gt;.fieldAccess,GRAPH[i].t_d)</data>
    </node>
    <node id="1000353">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,GRAPH[i])</data>
    </node>
    <node id="1000356">
      <data key="d4">(FIELD_IDENTIFIER,t_d,t_d)</data>
    </node>
    <node id="1000357">
      <data key="d4">(&lt;operator&gt;.fieldAccess,GRAPH[i].t_v)</data>
    </node>
    <node id="1000358">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,GRAPH[i])</data>
    </node>
    <node id="1000361">
      <data key="d4">(FIELD_IDENTIFIER,t_v,t_v)</data>
    </node>
    <node id="1000362">
      <data key="d4">(RETURN,return 0;,return 0;)</data>
    </node>
    <node id="1000364">
      <data key="d4">(METHOD_RETURN,int)</data>
    </node>

    <edge source="1000187" target="1000194">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000194" target="1000201">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000199" target="1000206">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000201" target="1000199">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000203" target="1000215">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000205" target="1000203">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000206" target="1000209">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000207" target="1000205">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000208" target="1000207">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000209" target="1000211">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000211" target="1000208">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000215" target="1000218">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000218" target="1000225">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000218" target="1000225">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000218" target="1000232">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000221" target="1000218">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000223" target="1000221">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000224" target="1000229">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000225" target="1000228">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000228" target="1000224">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000229" target="1000223">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000232" target="1000235">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000235" target="1000243">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000235" target="1000243">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000235" target="1000310">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000238" target="1000235">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000241" target="1000249">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000243" target="1000245">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000245" target="1000241">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000247" target="1000257">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000248" target="1000253">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000249" target="1000252">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000252" target="1000248">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000253" target="1000247">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000255" target="1000263">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000256" target="1000255">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000257" target="1000260">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000260" target="1000256">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000263" target="1000238">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000263" target="1000269">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000267" target="1000281">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000268" target="1000274">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000269" target="1000272">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000272" target="1000268">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000273" target="1000267">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000274" target="1000277">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000275" target="1000273">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000276" target="1000275">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000277" target="1000276">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000281" target="1000284">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000284" target="1000238">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000284" target="1000292">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000284" target="1000292">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000287" target="1000284">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000290" target="1000297">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000292" target="1000290">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000294" target="1000305">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000295" target="1000294">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000296" target="1000295">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000297" target="1000300">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000300" target="1000296">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000303" target="1000287">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000304" target="1000303">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000305" target="1000308">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000308" target="1000304">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000310" target="1000315">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000314" target="1000335">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000314" target="1000322">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000315" target="1000314">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000320" target="1000315">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000320" target="1000329">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000321" target="1000326">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000322" target="1000325">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000325" target="1000321">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000326" target="1000320">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000329" target="1000332">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000332" target="1000315">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000335" target="1000338">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000335" target="1000341">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000338" target="1000341">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000341" target="1000344">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000344" target="1000353">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000344" target="1000353">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000344" target="1000362">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000347" target="1000344">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000349" target="1000347">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000352" target="1000358">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000353" target="1000356">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000356" target="1000352">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000357" target="1000349">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000358" target="1000361">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000361" target="1000357">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000362" target="1000364">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
  </graph>
</graphml>
