<?xml version="1.0" encoding="UTF-8"?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns
     http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd">

  <!-- Created by Graph::Easy v0.76 at Tue Oct 27 10:11:52 2020 -->

  <key id="d0" for="edge" attr.name="arrowstyle" attr.type="string">
    <default>open</default>
  </key>
  <key id="d1" for="graph" attr.name="colorscheme" attr.type="string">
    <default>w3c</default>
  </key>
  <key id="d2" for="graph" attr.name="flow" attr.type="string">
    <default>east</default>
  </key>
  <key id="d3" for="graph" attr.name="title" attr.type="string">
    <default></default>
  </key>
  <key id="d4" for="node" attr.name="label" attr.type="string"/>
  <key id="d5" for="edge" attr.name="label" attr.type="string"/>
  <key id="d6" for="edge" attr.name="style" attr.type="string">
    <default>solid</default>
  </key>

  <graph id="G" edgedefault="directed">
    <data key="d1">x11</data>
    <data key="d2">south</data>
    <data key="d3">main</data>
    <node id="1000102">
      <data key="d4">(METHOD,main)</data>
    </node>
    <node id="1000105">
      <data key="d4">(&lt;operator&gt;.assignment,i = 0)</data>
    </node>
    <node id="1000113">
      <data key="d4">(scanf,scanf(&quot;%d&quot;,&amp;n))</data>
    </node>
    <node id="1000115">
      <data key="d4">(&lt;operator&gt;.addressOf,&amp;n)</data>
    </node>
    <node id="1000117">
      <data key="d4">(&lt;operator&gt;.assignment,a = malloc(sizeof(int)*n+1))</data>
    </node>
    <node id="1000119">
      <data key="d4">(malloc,malloc(sizeof(int)*n+1))</data>
    </node>
    <node id="1000120">
      <data key="d4">(&lt;operator&gt;.addition,sizeof(int)*n+1)</data>
    </node>
    <node id="1000121">
      <data key="d4">(&lt;operator&gt;.multiplication,sizeof(int)*n)</data>
    </node>
    <node id="1000122">
      <data key="d4">(&lt;operator&gt;.sizeOf,sizeof(int))</data>
    </node>
    <node id="1000126">
      <data key="d4">(&lt;operator&gt;.assignment,b = malloc(sizeof(int)*n+1))</data>
    </node>
    <node id="1000128">
      <data key="d4">(malloc,malloc(sizeof(int)*n+1))</data>
    </node>
    <node id="1000129">
      <data key="d4">(&lt;operator&gt;.addition,sizeof(int)*n+1)</data>
    </node>
    <node id="1000130">
      <data key="d4">(&lt;operator&gt;.multiplication,sizeof(int)*n)</data>
    </node>
    <node id="1000131">
      <data key="d4">(&lt;operator&gt;.sizeOf,sizeof(int))</data>
    </node>
    <node id="1000136">
      <data key="d4">(&lt;operator&gt;.assignment,i = 0)</data>
    </node>
    <node id="1000139">
      <data key="d4">(&lt;operator&gt;.lessThan,i &lt; 10001)</data>
    </node>
    <node id="1000142">
      <data key="d4">(&lt;operator&gt;.postIncrement,i++)</data>
    </node>
    <node id="1000145">
      <data key="d4">(&lt;operator&gt;.assignment,c[i] = 0)</data>
    </node>
    <node id="1000146">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,c[i])</data>
    </node>
    <node id="1000151">
      <data key="d4">(&lt;operator&gt;.assignment,i = 0)</data>
    </node>
    <node id="1000154">
      <data key="d4">(&lt;operator&gt;.lessThan,i &lt; n)</data>
    </node>
    <node id="1000157">
      <data key="d4">(&lt;operator&gt;.postIncrement,i++)</data>
    </node>
    <node id="1000160">
      <data key="d4">(scanf,scanf(&quot;%d&quot;,&amp;a[i+1]))</data>
    </node>
    <node id="1000162">
      <data key="d4">(&lt;operator&gt;.addressOf,&amp;a[i+1])</data>
    </node>
    <node id="1000163">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,a[i+1])</data>
    </node>
    <node id="1000165">
      <data key="d4">(&lt;operator&gt;.addition,i+1)</data>
    </node>
    <node id="1000168">
      <data key="d4">(&lt;operator&gt;.postIncrement,c[a[i+1]]++)</data>
    </node>
    <node id="1000169">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,c[a[i+1]])</data>
    </node>
    <node id="1000171">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,a[i+1])</data>
    </node>
    <node id="1000173">
      <data key="d4">(&lt;operator&gt;.addition,i+1)</data>
    </node>
    <node id="1000177">
      <data key="d4">(&lt;operator&gt;.assignment,i = 1)</data>
    </node>
    <node id="1000180">
      <data key="d4">(&lt;operator&gt;.lessThan,i &lt; 10001)</data>
    </node>
    <node id="1000183">
      <data key="d4">(&lt;operator&gt;.postIncrement,i++)</data>
    </node>
    <node id="1000186">
      <data key="d4">(&lt;operator&gt;.assignment,c[i] = c[i] + c[i - 1])</data>
    </node>
    <node id="1000187">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,c[i])</data>
    </node>
    <node id="1000190">
      <data key="d4">(&lt;operator&gt;.addition,c[i] + c[i - 1])</data>
    </node>
    <node id="1000191">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,c[i])</data>
    </node>
    <node id="1000194">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,c[i - 1])</data>
    </node>
    <node id="1000196">
      <data key="d4">(&lt;operator&gt;.subtraction,i - 1)</data>
    </node>
    <node id="1000200">
      <data key="d4">(&lt;operator&gt;.assignment,j = 1)</data>
    </node>
    <node id="1000203">
      <data key="d4">(&lt;operator&gt;.lessThan,j &lt; n+1)</data>
    </node>
    <node id="1000205">
      <data key="d4">(&lt;operator&gt;.addition,n+1)</data>
    </node>
    <node id="1000208">
      <data key="d4">(&lt;operator&gt;.postIncrement,j++)</data>
    </node>
    <node id="1000211">
      <data key="d4">(&lt;operator&gt;.assignment,b[c[a[j]]] = a[j])</data>
    </node>
    <node id="1000212">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,b[c[a[j]]])</data>
    </node>
    <node id="1000214">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,c[a[j]])</data>
    </node>
    <node id="1000216">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,a[j])</data>
    </node>
    <node id="1000219">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,a[j])</data>
    </node>
    <node id="1000222">
      <data key="d4">(&lt;operator&gt;.postDecrement,c[a[j]]--)</data>
    </node>
    <node id="1000223">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,c[a[j]])</data>
    </node>
    <node id="1000225">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,a[j])</data>
    </node>
    <node id="1000229">
      <data key="d4">(&lt;operator&gt;.assignment,i =1)</data>
    </node>
    <node id="1000232">
      <data key="d4">(&lt;operator&gt;.lessThan,i &lt; n)</data>
    </node>
    <node id="1000235">
      <data key="d4">(&lt;operator&gt;.postIncrement,i++)</data>
    </node>
    <node id="1000238">
      <data key="d4">(printf,printf(&quot;%d &quot;,b[i]))</data>
    </node>
    <node id="1000240">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,b[i])</data>
    </node>
    <node id="1000243">
      <data key="d4">(printf,printf(&quot;%d\n&quot;,b[i]))</data>
    </node>
    <node id="1000245">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,b[i])</data>
    </node>
    <node id="1000248">
      <data key="d4">(RETURN,return 0;,return 0;)</data>
    </node>
    <node id="1000250">
      <data key="d4">(METHOD_RETURN,int)</data>
    </node>

    <edge source="1000102" target="1000105">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000105" target="1000115">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000113" target="1000122">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000115" target="1000113">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000117" target="1000131">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000119" target="1000117">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000120" target="1000119">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000121" target="1000120">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000122" target="1000121">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000126" target="1000136">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000128" target="1000126">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000129" target="1000128">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000130" target="1000129">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000131" target="1000130">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000136" target="1000139">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000139" target="1000146">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000139" target="1000146">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000139" target="1000151">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000142" target="1000139">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000145" target="1000142">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000146" target="1000145">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000151" target="1000154">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000154" target="1000165">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000154" target="1000165">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000154" target="1000177">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000157" target="1000154">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000160" target="1000173">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000162" target="1000160">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000163" target="1000162">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000165" target="1000163">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000168" target="1000157">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000169" target="1000168">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000171" target="1000169">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000173" target="1000171">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000177" target="1000180">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000180" target="1000187">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000180" target="1000187">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000180" target="1000200">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000183" target="1000180">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000186" target="1000183">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000187" target="1000191">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000190" target="1000186">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000191" target="1000196">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000194" target="1000190">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000196" target="1000194">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000200" target="1000205">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000203" target="1000216">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000203" target="1000216">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000203" target="1000229">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000205" target="1000203">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000208" target="1000205">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000211" target="1000225">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000212" target="1000219">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000214" target="1000212">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000216" target="1000214">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000219" target="1000211">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000222" target="1000208">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000223" target="1000222">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000225" target="1000223">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000229" target="1000232">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000232" target="1000240">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000232" target="1000240">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000232" target="1000245">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000235" target="1000232">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000238" target="1000235">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000240" target="1000238">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000243" target="1000248">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000245" target="1000243">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000248" target="1000250">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
  </graph>
</graphml>
