<?xml version="1.0" encoding="UTF-8"?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns
     http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd">

  <!-- Created by Graph::Easy v0.76 at Tue Jun  8 21:39:10 2021 -->

  <key id="d0" for="edge" attr.name="arrowstyle" attr.type="string">
    <default>open</default>
  </key>
  <key id="d1" for="graph" attr.name="colorscheme" attr.type="string">
    <default>w3c</default>
  </key>
  <key id="d2" for="graph" attr.name="flow" attr.type="string">
    <default>east</default>
  </key>
  <key id="d3" for="graph" attr.name="title" attr.type="string">
    <default></default>
  </key>
  <key id="d4" for="node" attr.name="label" attr.type="string"/>
  <key id="d5" for="edge" attr.name="label" attr.type="string"/>
  <key id="d6" for="edge" attr.name="style" attr.type="string">
    <default>solid</default>
  </key>

  <graph id="G" edgedefault="directed">
    <data key="d1">x11</data>
    <data key="d2">south</data>
    <data key="d3">dfs</data>
    <node id="1000214">
      <data key="d4">(METHOD,dfs)</data>
    </node>
    <node id="1000219">
      <data key="d4">(&lt;operator&gt;.assignment,visit[n] = 1)</data>
    </node>
    <node id="1000220">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,visit[n])</data>
    </node>
    <node id="1000225">
      <data key="d4">(&lt;operator&gt;.equals,time[n][0] == 0)</data>
    </node>
    <node id="1000226">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,time[n][0])</data>
    </node>
    <node id="1000227">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,time[n])</data>
    </node>
    <node id="1000233">
      <data key="d4">(&lt;operator&gt;.assignment,time[n][0] = t)</data>
    </node>
    <node id="1000234">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,time[n][0])</data>
    </node>
    <node id="1000235">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,time[n])</data>
    </node>
    <node id="1000241">
      <data key="d4">(&lt;operator&gt;.assignment,i = 1)</data>
    </node>
    <node id="1000244">
      <data key="d4">(&lt;operator&gt;.lessEqualsThan,i &lt;= node[n][0])</data>
    </node>
    <node id="1000246">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,node[n][0])</data>
    </node>
    <node id="1000247">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,node[n])</data>
    </node>
    <node id="1000251">
      <data key="d4">(&lt;operator&gt;.postIncrement,i++)</data>
    </node>
    <node id="1000255">
      <data key="d4">(&lt;operator&gt;.logicalAnd,node[n][i] != 0 &amp;&amp; visit[node[n][i]] == 0)</data>
    </node>
    <node id="1000256">
      <data key="d4">(&lt;operator&gt;.notEquals,node[n][i] != 0)</data>
    </node>
    <node id="1000257">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,node[n][i])</data>
    </node>
    <node id="1000258">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,node[n])</data>
    </node>
    <node id="1000263">
      <data key="d4">(&lt;operator&gt;.equals,visit[node[n][i]] == 0)</data>
    </node>
    <node id="1000264">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,visit[node[n][i]])</data>
    </node>
    <node id="1000266">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,node[n][i])</data>
    </node>
    <node id="1000267">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,node[n])</data>
    </node>
    <node id="1000273">
      <data key="d4">(&lt;operator&gt;.assignment,t = dfs(node[n][i], t + 1))</data>
    </node>
    <node id="1000275">
      <data key="d4">(dfs,dfs(node[n][i], t + 1))</data>
    </node>
    <node id="1000276">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,node[n][i])</data>
    </node>
    <node id="1000277">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,node[n])</data>
    </node>
    <node id="1000281">
      <data key="d4">(&lt;operator&gt;.addition,t + 1)</data>
    </node>
    <node id="1000284">
      <data key="d4">(&lt;operator&gt;.postIncrement,t++)</data>
    </node>
    <node id="1000286">
      <data key="d4">(&lt;operator&gt;.assignment,time[n][1] = t)</data>
    </node>
    <node id="1000287">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,time[n][1])</data>
    </node>
    <node id="1000288">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,time[n])</data>
    </node>
    <node id="1000293">
      <data key="d4">(RETURN,return t;,return t;)</data>
    </node>
    <node id="1000295">
      <data key="d4">(METHOD_RETURN,int)</data>
    </node>

    <edge source="1000214" target="1000220">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000219" target="1000227">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000220" target="1000219">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000225" target="1000235">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000225" target="1000241">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000226" target="1000225">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000227" target="1000226">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000233" target="1000241">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000234" target="1000233">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000235" target="1000234">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000241" target="1000247">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000244" target="1000258">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000244" target="1000258">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000244" target="1000284">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000246" target="1000244">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000247" target="1000246">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000251" target="1000247">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000255" target="1000251">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000255" target="1000277">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000256" target="1000255">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000256" target="1000267">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000257" target="1000256">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000258" target="1000257">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000263" target="1000255">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000264" target="1000263">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000266" target="1000264">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000267" target="1000266">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000273" target="1000251">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000275" target="1000273">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000276" target="1000281">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000277" target="1000276">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000281" target="1000275">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000284" target="1000288">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000286" target="1000293">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000287" target="1000286">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000288" target="1000287">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000293" target="1000295">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
  </graph>
</graphml>
