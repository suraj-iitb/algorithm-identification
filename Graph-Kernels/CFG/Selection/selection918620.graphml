<?xml version="1.0" encoding="UTF-8"?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns
     http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd">

  <!-- Created by Graph::Easy v0.76 at Tue Oct 27 12:31:14 2020 -->

  <key id="d0" for="edge" attr.name="arrowstyle" attr.type="string">
    <default>open</default>
  </key>
  <key id="d1" for="graph" attr.name="colorscheme" attr.type="string">
    <default>w3c</default>
  </key>
  <key id="d2" for="graph" attr.name="flow" attr.type="string">
    <default>east</default>
  </key>
  <key id="d3" for="graph" attr.name="title" attr.type="string">
    <default></default>
  </key>
  <key id="d4" for="node" attr.name="label" attr.type="string"/>
  <key id="d5" for="edge" attr.name="label" attr.type="string"/>
  <key id="d6" for="edge" attr.name="style" attr.type="string">
    <default>solid</default>
  </key>

  <graph id="G" edgedefault="directed">
    <data key="d1">x11</data>
    <data key="d2">south</data>
    <data key="d3">main</data>
    <node id="1000102">
      <data key="d4">(METHOD,main)</data>
    </node>
    <node id="1000106">
      <data key="d4">(&lt;operator&gt;.assignment,k=0)</data>
    </node>
    <node id="1000114">
      <data key="d4">(scanf,scanf(&quot;%d&quot;,&amp;n))</data>
    </node>
    <node id="1000116">
      <data key="d4">(&lt;operator&gt;.addressOf,&amp;n)</data>
    </node>
    <node id="1000118">
      <data key="d4">(&lt;operator&gt;.assignment,k = 0)</data>
    </node>
    <node id="1000122">
      <data key="d4">(&lt;operator&gt;.assignment,i = 0)</data>
    </node>
    <node id="1000125">
      <data key="d4">(&lt;operator&gt;.lessThan,i &lt; n)</data>
    </node>
    <node id="1000128">
      <data key="d4">(&lt;operator&gt;.postIncrement,i++)</data>
    </node>
    <node id="1000131">
      <data key="d4">(scanf,scanf(&quot;%d&quot;,&amp;A[i]))</data>
    </node>
    <node id="1000133">
      <data key="d4">(&lt;operator&gt;.addressOf,&amp;A[i])</data>
    </node>
    <node id="1000134">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,A[i])</data>
    </node>
    <node id="1000138">
      <data key="d4">(&lt;operator&gt;.assignment,i = 0)</data>
    </node>
    <node id="1000141">
      <data key="d4">(&lt;operator&gt;.lessEqualsThan,i &lt;= n-1)</data>
    </node>
    <node id="1000143">
      <data key="d4">(&lt;operator&gt;.subtraction,n-1)</data>
    </node>
    <node id="1000146">
      <data key="d4">(&lt;operator&gt;.postIncrement,i++)</data>
    </node>
    <node id="1000149">
      <data key="d4">(&lt;operator&gt;.assignment,mini = i)</data>
    </node>
    <node id="1000153">
      <data key="d4">(&lt;operator&gt;.assignment,j = i)</data>
    </node>
    <node id="1000156">
      <data key="d4">(&lt;operator&gt;.lessEqualsThan,j &lt;= n-1)</data>
    </node>
    <node id="1000158">
      <data key="d4">(&lt;operator&gt;.subtraction,n-1)</data>
    </node>
    <node id="1000161">
      <data key="d4">(&lt;operator&gt;.postIncrement,j++)</data>
    </node>
    <node id="1000165">
      <data key="d4">(&lt;operator&gt;.lessThan,A[j] &lt; A[mini])</data>
    </node>
    <node id="1000166">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,A[j])</data>
    </node>
    <node id="1000169">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,A[mini])</data>
    </node>
    <node id="1000173">
      <data key="d4">(&lt;operator&gt;.assignment,mini = j)</data>
    </node>
    <node id="1000176">
      <data key="d4">(&lt;operator&gt;.assignment,f = A[i])</data>
    </node>
    <node id="1000178">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,A[i])</data>
    </node>
    <node id="1000181">
      <data key="d4">(&lt;operator&gt;.assignment,A[i] = A[mini])</data>
    </node>
    <node id="1000182">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,A[i])</data>
    </node>
    <node id="1000185">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,A[mini])</data>
    </node>
    <node id="1000188">
      <data key="d4">(&lt;operator&gt;.assignment,A[mini] = f)</data>
    </node>
    <node id="1000189">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,A[mini])</data>
    </node>
    <node id="1000194">
      <data key="d4">(&lt;operator&gt;.notEquals,mini != i)</data>
    </node>
    <node id="1000198">
      <data key="d4">(&lt;operator&gt;.postIncrement,k++)</data>
    </node>
    <node id="1000201">
      <data key="d4">(&lt;operator&gt;.assignment,i = 0)</data>
    </node>
    <node id="1000204">
      <data key="d4">(&lt;operator&gt;.lessThan,i &lt; n)</data>
    </node>
    <node id="1000207">
      <data key="d4">(&lt;operator&gt;.postIncrement,i++)</data>
    </node>
    <node id="1000211">
      <data key="d4">(&lt;operator&gt;.notEquals,i != 0)</data>
    </node>
    <node id="1000215">
      <data key="d4">(printf,printf(&quot; &quot;))</data>
    </node>
    <node id="1000217">
      <data key="d4">(printf,printf(&quot;%d&quot;,A[i]))</data>
    </node>
    <node id="1000219">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,A[i])</data>
    </node>
    <node id="1000222">
      <data key="d4">(printf,printf(&quot;\n&quot;))</data>
    </node>
    <node id="1000224">
      <data key="d4">(printf,printf(&quot;%d\n&quot;,k))</data>
    </node>
    <node id="1000227">
      <data key="d4">(RETURN,return 0;,return 0;)</data>
    </node>
    <node id="1000229">
      <data key="d4">(METHOD_RETURN,int)</data>
    </node>

    <edge source="1000102" target="1000106">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000106" target="1000116">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000114" target="1000118">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000116" target="1000114">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000118" target="1000122">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000122" target="1000125">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000125" target="1000134">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000125" target="1000134">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000125" target="1000138">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000128" target="1000125">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000131" target="1000128">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000133" target="1000131">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000134" target="1000133">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000138" target="1000143">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000141" target="1000149">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000141" target="1000149">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000141" target="1000201">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000143" target="1000141">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000146" target="1000143">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000149" target="1000153">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000153" target="1000158">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000156" target="1000166">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000156" target="1000166">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000156" target="1000178">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000158" target="1000156">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000161" target="1000158">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000165" target="1000161">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000165" target="1000173">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000166" target="1000169">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000169" target="1000165">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000173" target="1000161">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000176" target="1000182">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000178" target="1000176">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000181" target="1000189">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000182" target="1000185">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000185" target="1000181">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000188" target="1000194">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000189" target="1000188">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000194" target="1000146">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000194" target="1000198">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000198" target="1000146">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000201" target="1000204">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000204" target="1000211">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000204" target="1000211">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000204" target="1000222">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000207" target="1000204">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000211" target="1000215">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000211" target="1000219">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000215" target="1000219">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000217" target="1000207">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000219" target="1000217">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000222" target="1000224">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000224" target="1000227">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000227" target="1000229">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
  </graph>
</graphml>
