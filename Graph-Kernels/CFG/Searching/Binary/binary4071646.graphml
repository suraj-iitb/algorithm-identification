<?xml version="1.0" encoding="UTF-8"?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns
     http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd">

  <!-- Created by Graph::Easy v0.76 at Wed Jun  9 01:05:03 2021 -->

  <key id="d0" for="edge" attr.name="arrowstyle" attr.type="string">
    <default>open</default>
  </key>
  <key id="d1" for="graph" attr.name="colorscheme" attr.type="string">
    <default>w3c</default>
  </key>
  <key id="d2" for="graph" attr.name="flow" attr.type="string">
    <default>east</default>
  </key>
  <key id="d3" for="graph" attr.name="title" attr.type="string">
    <default></default>
  </key>
  <key id="d4" for="node" attr.name="label" attr.type="string"/>
  <key id="d5" for="edge" attr.name="label" attr.type="string"/>
  <key id="d6" for="edge" attr.name="style" attr.type="string">
    <default>solid</default>
  </key>

  <graph id="G" edgedefault="directed">
    <data key="d1">x11</data>
    <data key="d2">south</data>
    <data key="d3">main</data>
    <node id="1000102">
      <data key="d4">(METHOD,main)</data>
    </node>
    <node id="1000115">
      <data key="d4">(scanf,scanf(&quot;%d&quot;, &amp;n))</data>
    </node>
    <node id="1000117">
      <data key="d4">(&lt;operator&gt;.addressOf,&amp;n)</data>
    </node>
    <node id="1000119">
      <data key="d4">(&lt;operator&gt;.assignment,S = (int *)malloc(sizeof(int) * n))</data>
    </node>
    <node id="1000121">
      <data key="d4">(&lt;operator&gt;.cast,(int *)malloc(sizeof(int) * n))</data>
    </node>
    <node id="1000122">
      <data key="d4">(UNKNOWN,int *,int *)</data>
    </node>
    <node id="1000123">
      <data key="d4">(malloc,malloc(sizeof(int) * n))</data>
    </node>
    <node id="1000124">
      <data key="d4">(&lt;operator&gt;.multiplication,sizeof(int) * n)</data>
    </node>
    <node id="1000125">
      <data key="d4">(&lt;operator&gt;.sizeOf,sizeof(int))</data>
    </node>
    <node id="1000129">
      <data key="d4">(&lt;operator&gt;.assignment,i = 0)</data>
    </node>
    <node id="1000132">
      <data key="d4">(&lt;operator&gt;.lessThan,i &lt; n)</data>
    </node>
    <node id="1000135">
      <data key="d4">(&lt;operator&gt;.postIncrement,i++)</data>
    </node>
    <node id="1000137">
      <data key="d4">(scanf,scanf(&quot;%d&quot;, &amp;S[i]))</data>
    </node>
    <node id="1000139">
      <data key="d4">(&lt;operator&gt;.addressOf,&amp;S[i])</data>
    </node>
    <node id="1000140">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,S[i])</data>
    </node>
    <node id="1000143">
      <data key="d4">(scanf,scanf(&quot;%d&quot;, &amp;q))</data>
    </node>
    <node id="1000145">
      <data key="d4">(&lt;operator&gt;.addressOf,&amp;q)</data>
    </node>
    <node id="1000147">
      <data key="d4">(&lt;operator&gt;.assignment,T = (int *)malloc(sizeof(int) * q))</data>
    </node>
    <node id="1000149">
      <data key="d4">(&lt;operator&gt;.cast,(int *)malloc(sizeof(int) * q))</data>
    </node>
    <node id="1000150">
      <data key="d4">(UNKNOWN,int *,int *)</data>
    </node>
    <node id="1000151">
      <data key="d4">(malloc,malloc(sizeof(int) * q))</data>
    </node>
    <node id="1000152">
      <data key="d4">(&lt;operator&gt;.multiplication,sizeof(int) * q)</data>
    </node>
    <node id="1000153">
      <data key="d4">(&lt;operator&gt;.sizeOf,sizeof(int))</data>
    </node>
    <node id="1000157">
      <data key="d4">(&lt;operator&gt;.assignment,i = 0)</data>
    </node>
    <node id="1000160">
      <data key="d4">(&lt;operator&gt;.lessThan,i &lt; q)</data>
    </node>
    <node id="1000163">
      <data key="d4">(&lt;operator&gt;.postIncrement,i++)</data>
    </node>
    <node id="1000165">
      <data key="d4">(scanf,scanf(&quot;%d&quot;, &amp;T[i]))</data>
    </node>
    <node id="1000167">
      <data key="d4">(&lt;operator&gt;.addressOf,&amp;T[i])</data>
    </node>
    <node id="1000168">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,T[i])</data>
    </node>
    <node id="1000171">
      <data key="d4">(&lt;operator&gt;.assignment,count = 0)</data>
    </node>
    <node id="1000175">
      <data key="d4">(&lt;operator&gt;.assignment,i = 0)</data>
    </node>
    <node id="1000178">
      <data key="d4">(&lt;operator&gt;.lessThan,i &lt; q)</data>
    </node>
    <node id="1000181">
      <data key="d4">(&lt;operator&gt;.postIncrement,i++)</data>
    </node>
    <node id="1000184">
      <data key="d4">(&lt;operator&gt;.assignment,left = 0)</data>
    </node>
    <node id="1000187">
      <data key="d4">(&lt;operator&gt;.assignment,right = n - 1)</data>
    </node>
    <node id="1000189">
      <data key="d4">(&lt;operator&gt;.subtraction,n - 1)</data>
    </node>
    <node id="1000193">
      <data key="d4">(&lt;operator&gt;.lessEqualsThan,left &lt;= right)</data>
    </node>
    <node id="1000197">
      <data key="d4">(&lt;operator&gt;.assignment,center = (left + right) / 2)</data>
    </node>
    <node id="1000199">
      <data key="d4">(&lt;operator&gt;.division,(left + right) / 2)</data>
    </node>
    <node id="1000200">
      <data key="d4">(&lt;operator&gt;.addition,left + right)</data>
    </node>
    <node id="1000204">
      <data key="d4">(&lt;operator&gt;.assignment,num = S[center])</data>
    </node>
    <node id="1000206">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,S[center])</data>
    </node>
    <node id="1000210">
      <data key="d4">(&lt;operator&gt;.equals,T[i] == num)</data>
    </node>
    <node id="1000211">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,T[i])</data>
    </node>
    <node id="1000216">
      <data key="d4">(&lt;operator&gt;.postIncrement,count++)</data>
    </node>
    <node id="1000221">
      <data key="d4">(&lt;operator&gt;.lessThan,T[i] &lt; num)</data>
    </node>
    <node id="1000222">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,T[i])</data>
    </node>
    <node id="1000226">
      <data key="d4">(&lt;operator&gt;.assignment,right = center - 1)</data>
    </node>
    <node id="1000228">
      <data key="d4">(&lt;operator&gt;.subtraction,center - 1)</data>
    </node>
    <node id="1000233">
      <data key="d4">(&lt;operator&gt;.lessThan,num &lt; T[i])</data>
    </node>
    <node id="1000235">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,T[i])</data>
    </node>
    <node id="1000238">
      <data key="d4">(&lt;operator&gt;.assignment,left = center + 1)</data>
    </node>
    <node id="1000240">
      <data key="d4">(&lt;operator&gt;.addition,center + 1)</data>
    </node>
    <node id="1000243">
      <data key="d4">(printf,printf(&quot;%d\n&quot;, count))</data>
    </node>
    <node id="1000246">
      <data key="d4">(RETURN,return 0;,return 0;)</data>
    </node>
    <node id="1000248">
      <data key="d4">(METHOD_RETURN,int)</data>
    </node>

    <edge source="1000102" target="1000117">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000115" target="1000122">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000117" target="1000115">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000119" target="1000129">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000121" target="1000119">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000122" target="1000125">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000123" target="1000121">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000124" target="1000123">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000125" target="1000124">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000129" target="1000132">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000132" target="1000140">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000132" target="1000140">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000132" target="1000145">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000135" target="1000132">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000137" target="1000135">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000139" target="1000137">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000140" target="1000139">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000143" target="1000150">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000145" target="1000143">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000147" target="1000157">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000149" target="1000147">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000150" target="1000153">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000151" target="1000149">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000152" target="1000151">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000153" target="1000152">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000157" target="1000160">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000160" target="1000168">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000160" target="1000168">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000160" target="1000171">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000163" target="1000160">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000165" target="1000163">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000167" target="1000165">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000168" target="1000167">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000171" target="1000175">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000175" target="1000178">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000178" target="1000184">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000178" target="1000184">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000178" target="1000243">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000181" target="1000178">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000184" target="1000189">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000187" target="1000193">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000189" target="1000187">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000193" target="1000181">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000193" target="1000200">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000197" target="1000206">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000199" target="1000197">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000200" target="1000199">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000204" target="1000211">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000206" target="1000204">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000210" target="1000216">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000210" target="1000222">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000211" target="1000210">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000216" target="1000181">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000216" target="1000243">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000221" target="1000228">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000221" target="1000235">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000222" target="1000221">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000226" target="1000193">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000228" target="1000226">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000233" target="1000193">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000233" target="1000240">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000235" target="1000233">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000238" target="1000193">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000240" target="1000238">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000243" target="1000246">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000246" target="1000248">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
  </graph>
</graphml>
