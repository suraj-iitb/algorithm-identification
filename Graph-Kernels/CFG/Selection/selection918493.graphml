<?xml version="1.0" encoding="UTF-8"?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns
     http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd">

  <!-- Created by Graph::Easy v0.76 at Tue Oct 27 08:54:48 2020 -->

  <key id="d0" for="edge" attr.name="arrowstyle" attr.type="string">
    <default>open</default>
  </key>
  <key id="d1" for="graph" attr.name="colorscheme" attr.type="string">
    <default>w3c</default>
  </key>
  <key id="d2" for="graph" attr.name="flow" attr.type="string">
    <default>east</default>
  </key>
  <key id="d3" for="graph" attr.name="title" attr.type="string">
    <default></default>
  </key>
  <key id="d4" for="node" attr.name="label" attr.type="string"/>
  <key id="d5" for="edge" attr.name="label" attr.type="string"/>
  <key id="d6" for="edge" attr.name="style" attr.type="string">
    <default>solid</default>
  </key>

  <graph id="G" edgedefault="directed">
    <data key="d1">x11</data>
    <data key="d2">south</data>
    <data key="d3">main</data>
    <node id="1000102">
      <data key="d4">(METHOD,main)</data>
    </node>
    <node id="1000111">
      <data key="d4">(&lt;operator&gt;.assignment,count=0)</data>
    </node>
    <node id="1000114">
      <data key="d4">(scanf,scanf(&quot;%d&quot;,&amp;key))</data>
    </node>
    <node id="1000116">
      <data key="d4">(&lt;operator&gt;.addressOf,&amp;key)</data>
    </node>
    <node id="1000118">
      <data key="d4">(&lt;operator&gt;.assignment,A = (int *)malloc(sizeof(int) * key))</data>
    </node>
    <node id="1000120">
      <data key="d4">(&lt;operator&gt;.cast,(int *)malloc(sizeof(int) * key))</data>
    </node>
    <node id="1000121">
      <data key="d4">(UNKNOWN,int *,int *)</data>
    </node>
    <node id="1000122">
      <data key="d4">(malloc,malloc(sizeof(int) * key))</data>
    </node>
    <node id="1000123">
      <data key="d4">(&lt;operator&gt;.multiplication,sizeof(int) * key)</data>
    </node>
    <node id="1000124">
      <data key="d4">(&lt;operator&gt;.sizeOf,sizeof(int))</data>
    </node>
    <node id="1000128">
      <data key="d4">(&lt;operator&gt;.equals,A == NULL)</data>
    </node>
    <node id="1000132">
      <data key="d4">(exit,exit(0))</data>
    </node>
    <node id="1000135">
      <data key="d4">(&lt;operator&gt;.assignment,i=0)</data>
    </node>
    <node id="1000138">
      <data key="d4">(&lt;operator&gt;.lessThan,i&lt;key)</data>
    </node>
    <node id="1000141">
      <data key="d4">(&lt;operator&gt;.postIncrement,i++)</data>
    </node>
    <node id="1000144">
      <data key="d4">(&lt;operator&gt;.assignment,A[i] = 0)</data>
    </node>
    <node id="1000145">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,A[i])</data>
    </node>
    <node id="1000150">
      <data key="d4">(&lt;operator&gt;.assignment,i=0)</data>
    </node>
    <node id="1000153">
      <data key="d4">(&lt;operator&gt;.lessThan,i&lt;key)</data>
    </node>
    <node id="1000156">
      <data key="d4">(&lt;operator&gt;.postIncrement,i++)</data>
    </node>
    <node id="1000159">
      <data key="d4">(scanf,scanf(&quot;%d&quot;,&amp;A[i]))</data>
    </node>
    <node id="1000161">
      <data key="d4">(&lt;operator&gt;.addressOf,&amp;A[i])</data>
    </node>
    <node id="1000162">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,A[i])</data>
    </node>
    <node id="1000166">
      <data key="d4">(&lt;operator&gt;.assignment,i = 0)</data>
    </node>
    <node id="1000169">
      <data key="d4">(&lt;operator&gt;.lessThan,i&lt;key)</data>
    </node>
    <node id="1000172">
      <data key="d4">(&lt;operator&gt;.postIncrement,i++)</data>
    </node>
    <node id="1000175">
      <data key="d4">(&lt;operator&gt;.assignment,mini = i)</data>
    </node>
    <node id="1000179">
      <data key="d4">(&lt;operator&gt;.assignment,j = i)</data>
    </node>
    <node id="1000182">
      <data key="d4">(&lt;operator&gt;.lessThan,j &lt; key)</data>
    </node>
    <node id="1000185">
      <data key="d4">(&lt;operator&gt;.postIncrement,j++)</data>
    </node>
    <node id="1000189">
      <data key="d4">(&lt;operator&gt;.lessThan,A[j] &lt; A[mini])</data>
    </node>
    <node id="1000190">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,A[j])</data>
    </node>
    <node id="1000193">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,A[mini])</data>
    </node>
    <node id="1000197">
      <data key="d4">(&lt;operator&gt;.assignment,mini = j)</data>
    </node>
    <node id="1000200">
      <data key="d4">(&lt;operator&gt;.assignment,tmp = A[i])</data>
    </node>
    <node id="1000202">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,A[i])</data>
    </node>
    <node id="1000205">
      <data key="d4">(&lt;operator&gt;.assignment,A[i] = A[mini])</data>
    </node>
    <node id="1000206">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,A[i])</data>
    </node>
    <node id="1000209">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,A[mini])</data>
    </node>
    <node id="1000212">
      <data key="d4">(&lt;operator&gt;.assignment,A[mini] = tmp)</data>
    </node>
    <node id="1000213">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,A[mini])</data>
    </node>
    <node id="1000218">
      <data key="d4">(&lt;operator&gt;.notEquals,i!=mini)</data>
    </node>
    <node id="1000221">
      <data key="d4">(&lt;operator&gt;.postIncrement,count++)</data>
    </node>
    <node id="1000224">
      <data key="d4">(&lt;operator&gt;.assignment,i=0)</data>
    </node>
    <node id="1000227">
      <data key="d4">(&lt;operator&gt;.lessThan,i&lt;key)</data>
    </node>
    <node id="1000230">
      <data key="d4">(&lt;operator&gt;.postIncrement,i++)</data>
    </node>
    <node id="1000234">
      <data key="d4">(&lt;operator&gt;.notEquals,i != key-1)</data>
    </node>
    <node id="1000236">
      <data key="d4">(&lt;operator&gt;.subtraction,key-1)</data>
    </node>
    <node id="1000240">
      <data key="d4">(printf,printf(&quot;%d &quot;,A[i]))</data>
    </node>
    <node id="1000242">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,A[i])</data>
    </node>
    <node id="1000247">
      <data key="d4">(printf,printf(&quot;%d\n%d\n&quot;,A[key-1],count))</data>
    </node>
    <node id="1000249">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,A[key-1])</data>
    </node>
    <node id="1000251">
      <data key="d4">(&lt;operator&gt;.subtraction,key-1)</data>
    </node>
    <node id="1000255">
      <data key="d4">(free,free(A))</data>
    </node>
    <node id="1000257">
      <data key="d4">(RETURN,return 0;,return 0;)</data>
    </node>
    <node id="1000259">
      <data key="d4">(METHOD_RETURN,int)</data>
    </node>

    <edge source="1000102" target="1000111">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000111" target="1000116">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000114" target="1000121">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000116" target="1000114">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000118" target="1000128">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000120" target="1000118">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000121" target="1000124">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000122" target="1000120">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000123" target="1000122">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000124" target="1000123">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000128" target="1000132">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000128" target="1000135">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000132" target="1000135">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000135" target="1000138">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000138" target="1000145">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000138" target="1000145">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000138" target="1000150">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000141" target="1000138">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000144" target="1000141">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000145" target="1000144">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000150" target="1000153">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000153" target="1000162">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000153" target="1000162">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000153" target="1000166">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000156" target="1000153">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000159" target="1000156">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000161" target="1000159">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000162" target="1000161">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000166" target="1000169">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000169" target="1000175">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000169" target="1000175">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000169" target="1000224">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000172" target="1000169">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000175" target="1000179">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000179" target="1000182">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000182" target="1000190">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000182" target="1000190">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000182" target="1000202">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000185" target="1000182">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000189" target="1000185">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000189" target="1000197">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000190" target="1000193">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000193" target="1000189">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000197" target="1000185">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000200" target="1000206">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000202" target="1000200">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000205" target="1000213">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000206" target="1000209">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000209" target="1000205">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000212" target="1000218">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000213" target="1000212">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000218" target="1000172">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000218" target="1000221">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000221" target="1000172">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000224" target="1000227">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000227" target="1000236">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000227" target="1000236">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000227" target="1000255">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000230" target="1000227">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000234" target="1000242">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000234" target="1000251">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000236" target="1000234">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000240" target="1000230">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000242" target="1000240">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000247" target="1000230">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000249" target="1000247">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000251" target="1000249">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000255" target="1000257">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000257" target="1000259">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
  </graph>
</graphml>
