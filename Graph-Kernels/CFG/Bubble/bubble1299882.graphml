<?xml version="1.0" encoding="UTF-8"?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns
     http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd">

  <!-- Created by Graph::Easy v0.76 at Tue Oct 27 10:56:07 2020 -->

  <key id="d0" for="edge" attr.name="arrowstyle" attr.type="string">
    <default>open</default>
  </key>
  <key id="d1" for="graph" attr.name="colorscheme" attr.type="string">
    <default>w3c</default>
  </key>
  <key id="d2" for="graph" attr.name="flow" attr.type="string">
    <default>east</default>
  </key>
  <key id="d3" for="graph" attr.name="title" attr.type="string">
    <default></default>
  </key>
  <key id="d4" for="node" attr.name="label" attr.type="string"/>
  <key id="d5" for="edge" attr.name="label" attr.type="string"/>
  <key id="d6" for="edge" attr.name="style" attr.type="string">
    <default>solid</default>
  </key>

  <graph id="G" edgedefault="directed">
    <data key="d1">x11</data>
    <data key="d2">south</data>
    <data key="d3">main</data>
    <node id="1000102">
      <data key="d4">(METHOD,main)</data>
    </node>
    <node id="1000109">
      <data key="d4">(&lt;operator&gt;.assignment,sum = 0)</data>
    </node>
    <node id="1000113">
      <data key="d4">(scanf,scanf(&quot;%d&quot;,&amp;length))</data>
    </node>
    <node id="1000115">
      <data key="d4">(&lt;operator&gt;.addressOf,&amp;length)</data>
    </node>
    <node id="1000117">
      <data key="d4">(&lt;operator&gt;.assignment,buf = (int *)malloc(sizeof(int)*length))</data>
    </node>
    <node id="1000119">
      <data key="d4">(&lt;operator&gt;.cast,(int *)malloc(sizeof(int)*length))</data>
    </node>
    <node id="1000120">
      <data key="d4">(UNKNOWN,int *,int *)</data>
    </node>
    <node id="1000121">
      <data key="d4">(malloc,malloc(sizeof(int)*length))</data>
    </node>
    <node id="1000122">
      <data key="d4">(&lt;operator&gt;.multiplication,sizeof(int)*length)</data>
    </node>
    <node id="1000123">
      <data key="d4">(&lt;operator&gt;.sizeOf,sizeof(int))</data>
    </node>
    <node id="1000127">
      <data key="d4">(&lt;operator&gt;.assignment,j = 0)</data>
    </node>
    <node id="1000130">
      <data key="d4">(&lt;operator&gt;.lessThan,j &lt; length)</data>
    </node>
    <node id="1000133">
      <data key="d4">(&lt;operator&gt;.postIncrement,j++)</data>
    </node>
    <node id="1000136">
      <data key="d4">(scanf,scanf(&quot;%d&quot;,&amp;buf[j]))</data>
    </node>
    <node id="1000138">
      <data key="d4">(&lt;operator&gt;.addressOf,&amp;buf[j])</data>
    </node>
    <node id="1000139">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,buf[j])</data>
    </node>
    <node id="1000145">
      <data key="d4">(&lt;operator&gt;.assignment,flag = 0)</data>
    </node>
    <node id="1000149">
      <data key="d4">(&lt;operator&gt;.assignment,j = length - 1)</data>
    </node>
    <node id="1000151">
      <data key="d4">(&lt;operator&gt;.subtraction,length - 1)</data>
    </node>
    <node id="1000154">
      <data key="d4">(&lt;operator&gt;.greaterThan,j &gt; 0)</data>
    </node>
    <node id="1000157">
      <data key="d4">(&lt;operator&gt;.postDecrement,j--)</data>
    </node>
    <node id="1000161">
      <data key="d4">(&lt;operator&gt;.lessThan,buf[j] &lt; buf[j - 1])</data>
    </node>
    <node id="1000162">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,buf[j])</data>
    </node>
    <node id="1000165">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,buf[j - 1])</data>
    </node>
    <node id="1000167">
      <data key="d4">(&lt;operator&gt;.subtraction,j - 1)</data>
    </node>
    <node id="1000171">
      <data key="d4">(&lt;operator&gt;.assignment,temp = buf[j - 1])</data>
    </node>
    <node id="1000173">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,buf[j - 1])</data>
    </node>
    <node id="1000175">
      <data key="d4">(&lt;operator&gt;.subtraction,j - 1)</data>
    </node>
    <node id="1000178">
      <data key="d4">(&lt;operator&gt;.assignment,buf[j - 1] = buf[j])</data>
    </node>
    <node id="1000179">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,buf[j - 1])</data>
    </node>
    <node id="1000181">
      <data key="d4">(&lt;operator&gt;.subtraction,j - 1)</data>
    </node>
    <node id="1000184">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,buf[j])</data>
    </node>
    <node id="1000187">
      <data key="d4">(&lt;operator&gt;.assignment,buf[j] = temp)</data>
    </node>
    <node id="1000188">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,buf[j])</data>
    </node>
    <node id="1000192">
      <data key="d4">(&lt;operator&gt;.postIncrement,sum++)</data>
    </node>
    <node id="1000194">
      <data key="d4">(&lt;operator&gt;.assignment,flag = 1)</data>
    </node>
    <node id="1000198">
      <data key="d4">(&lt;operator&gt;.equals,flag == 0)</data>
    </node>
    <node id="1000203">
      <data key="d4">(&lt;operator&gt;.assignment,j = 0)</data>
    </node>
    <node id="1000206">
      <data key="d4">(&lt;operator&gt;.lessThan,j &lt; length)</data>
    </node>
    <node id="1000209">
      <data key="d4">(&lt;operator&gt;.postIncrement,j++)</data>
    </node>
    <node id="1000212">
      <data key="d4">(printf,printf(&quot;%d&quot;,buf[j]))</data>
    </node>
    <node id="1000214">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,buf[j])</data>
    </node>
    <node id="1000218">
      <data key="d4">(&lt;operator&gt;.notEquals,j != length - 1)</data>
    </node>
    <node id="1000220">
      <data key="d4">(&lt;operator&gt;.subtraction,length - 1)</data>
    </node>
    <node id="1000224">
      <data key="d4">(printf,printf(&quot; &quot;))</data>
    </node>
    <node id="1000226">
      <data key="d4">(printf,printf(&quot;\n&quot;))</data>
    </node>
    <node id="1000228">
      <data key="d4">(printf,printf(&quot;%d\n&quot;,sum))</data>
    </node>
    <node id="1000231">
      <data key="d4">(RETURN,return 0;,return 0;)</data>
    </node>
    <node id="1000233">
      <data key="d4">(METHOD_RETURN,int)</data>
    </node>

    <edge source="1000102" target="1000109">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000109" target="1000115">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000113" target="1000120">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000115" target="1000113">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000117" target="1000127">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000119" target="1000117">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000120" target="1000123">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000121" target="1000119">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000122" target="1000121">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000123" target="1000122">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000127" target="1000130">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000130" target="1000139">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000130" target="1000139">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000130" target="1000145">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000130" target="1000203">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000133" target="1000130">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000136" target="1000133">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000138" target="1000136">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000139" target="1000138">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000145" target="1000151">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000149" target="1000154">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000151" target="1000149">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000154" target="1000198">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000154" target="1000162">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000154" target="1000162">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000157" target="1000154">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000161" target="1000157">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000161" target="1000175">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000162" target="1000167">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000165" target="1000161">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000167" target="1000165">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000171" target="1000181">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000173" target="1000171">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000175" target="1000173">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000178" target="1000188">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000179" target="1000184">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000181" target="1000179">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000184" target="1000178">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000187" target="1000192">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000188" target="1000187">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000192" target="1000194">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000194" target="1000157">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000198" target="1000145">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000198" target="1000203">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000198" target="1000203">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000203" target="1000206">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000206" target="1000214">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000206" target="1000214">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000206" target="1000226">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000209" target="1000206">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000212" target="1000220">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000214" target="1000212">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000218" target="1000209">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000218" target="1000224">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000220" target="1000218">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000224" target="1000209">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000226" target="1000228">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000228" target="1000231">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000231" target="1000233">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
  </graph>
</graphml>
