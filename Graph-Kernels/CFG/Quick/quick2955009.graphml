<?xml version="1.0" encoding="UTF-8"?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns
     http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd">

  <!-- Created by Graph::Easy v0.76 at Tue Oct 27 09:57:18 2020 -->

  <key id="d0" for="edge" attr.name="arrowstyle" attr.type="string">
    <default>open</default>
  </key>
  <key id="d1" for="graph" attr.name="colorscheme" attr.type="string">
    <default>w3c</default>
  </key>
  <key id="d2" for="graph" attr.name="flow" attr.type="string">
    <default>east</default>
  </key>
  <key id="d3" for="graph" attr.name="title" attr.type="string">
    <default></default>
  </key>
  <key id="d4" for="node" attr.name="label" attr.type="string"/>
  <key id="d5" for="edge" attr.name="label" attr.type="string"/>
  <key id="d6" for="edge" attr.name="style" attr.type="string">
    <default>solid</default>
  </key>

  <graph id="G" edgedefault="directed">
    <data key="d1">x11</data>
    <data key="d2">south</data>
    <data key="d3">get_uint</data>
    <node id="1000103">
      <data key="d4">(METHOD,get_uint)</data>
    </node>
    <node id="1000106">
      <data key="d4">(&lt;operator&gt;.assignment,n = 0)</data>
    </node>
    <node id="1000110">
      <data key="d4">(&lt;operator&gt;.assignment,c = getchar_unlocked())</data>
    </node>
    <node id="1000112">
      <data key="d4">(getchar_unlocked,getchar_unlocked())</data>
    </node>
    <node id="1000114">
      <data key="d4">(&lt;operator&gt;.logicalOr,c &lt; 48 || 57 &lt; c)</data>
    </node>
    <node id="1000115">
      <data key="d4">(&lt;operator&gt;.lessThan,c &lt; 48)</data>
    </node>
    <node id="1000118">
      <data key="d4">(&lt;operator&gt;.lessThan,57 &lt; c)</data>
    </node>
    <node id="1000121">
      <data key="d4">(RETURN,return c;,return c;)</data>
    </node>
    <node id="1000124">
      <data key="d4">(&lt;operator&gt;.logicalAnd,47 &lt; c &amp;&amp; c &lt; 58)</data>
    </node>
    <node id="1000125">
      <data key="d4">(&lt;operator&gt;.lessThan,47 &lt; c)</data>
    </node>
    <node id="1000128">
      <data key="d4">(&lt;operator&gt;.lessThan,c &lt; 58)</data>
    </node>
    <node id="1000132">
      <data key="d4">(&lt;operator&gt;.assignment,n = 10 * n + (c &amp; 0xf))</data>
    </node>
    <node id="1000134">
      <data key="d4">(&lt;operator&gt;.addition,10 * n + (c &amp; 0xf))</data>
    </node>
    <node id="1000135">
      <data key="d4">(&lt;operator&gt;.multiplication,10 * n)</data>
    </node>
    <node id="1000138">
      <data key="d4">(&lt;operator&gt;.and,c &amp; 0xf)</data>
    </node>
    <node id="1000141">
      <data key="d4">(&lt;operator&gt;.assignment,c = getchar_unlocked())</data>
    </node>
    <node id="1000143">
      <data key="d4">(getchar_unlocked,getchar_unlocked())</data>
    </node>
    <node id="1000144">
      <data key="d4">(RETURN,return n;,return n;)</data>
    </node>
    <node id="1000146">
      <data key="d4">(METHOD_RETURN,int)</data>
    </node>

    <edge source="1000103" target="1000106">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000106" target="1000112">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000110" target="1000115">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000112" target="1000110">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000114" target="1000125">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000114" target="1000121">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000115" target="1000114">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000115" target="1000118">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000118" target="1000114">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000121" target="1000146">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000124" target="1000135">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000124" target="1000144">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000125" target="1000124">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000125" target="1000128">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000128" target="1000124">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000132" target="1000143">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000134" target="1000132">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000135" target="1000138">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000138" target="1000134">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000141" target="1000125">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000143" target="1000141">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000144" target="1000146">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
  </graph>
</graphml>
