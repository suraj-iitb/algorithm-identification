<?xml version="1.0" encoding="UTF-8"?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns
     http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd">

  <!-- Created by Graph::Easy v0.76 at Tue Jun  8 22:44:44 2021 -->

  <key id="d0" for="edge" attr.name="arrowstyle" attr.type="string">
    <default>open</default>
  </key>
  <key id="d1" for="graph" attr.name="colorscheme" attr.type="string">
    <default>w3c</default>
  </key>
  <key id="d2" for="graph" attr.name="flow" attr.type="string">
    <default>east</default>
  </key>
  <key id="d3" for="graph" attr.name="title" attr.type="string">
    <default></default>
  </key>
  <key id="d4" for="node" attr.name="label" attr.type="string"/>
  <key id="d5" for="edge" attr.name="label" attr.type="string"/>
  <key id="d6" for="edge" attr.name="style" attr.type="string">
    <default>solid</default>
  </key>

  <graph id="G" edgedefault="directed">
    <data key="d1">x11</data>
    <data key="d2">south</data>
    <data key="d3">visit</data>
    <node id="1000120">
      <data key="d4">(METHOD,visit)</data>
    </node>
    <node id="1000126">
      <data key="d4">(push,push(i))</data>
    </node>
    <node id="1000128">
      <data key="d4">(&lt;operator&gt;.assignment,color[i]=G)</data>
    </node>
    <node id="1000129">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,color[i])</data>
    </node>
    <node id="1000133">
      <data key="d4">(&lt;operator&gt;.assignment,d[i] = ++time)</data>
    </node>
    <node id="1000134">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,d[i])</data>
    </node>
    <node id="1000137">
      <data key="d4">(&lt;operator&gt;.preIncrement,++time)</data>
    </node>
    <node id="1000140">
      <data key="d4">(&lt;operator&gt;.notEquals,top!=0)</data>
    </node>
    <node id="1000144">
      <data key="d4">(&lt;operator&gt;.assignment,v=0)</data>
    </node>
    <node id="1000147">
      <data key="d4">(&lt;operator&gt;.assignment,u = S[top])</data>
    </node>
    <node id="1000149">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,S[top])</data>
    </node>
    <node id="1000153">
      <data key="d4">(&lt;operator&gt;.assignment,j=1)</data>
    </node>
    <node id="1000156">
      <data key="d4">(&lt;operator&gt;.lessEqualsThan,j&lt;=n)</data>
    </node>
    <node id="1000159">
      <data key="d4">(&lt;operator&gt;.postIncrement,j++)</data>
    </node>
    <node id="1000163">
      <data key="d4">(&lt;operator&gt;.equals,a[u][j]==1)</data>
    </node>
    <node id="1000164">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,a[u][j])</data>
    </node>
    <node id="1000165">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,a[u])</data>
    </node>
    <node id="1000171">
      <data key="d4">(&lt;operator&gt;.assignment,a[u][j]=0)</data>
    </node>
    <node id="1000172">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,a[u][j])</data>
    </node>
    <node id="1000173">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,a[u])</data>
    </node>
    <node id="1000178">
      <data key="d4">(&lt;operator&gt;.assignment,v = j)</data>
    </node>
    <node id="1000183">
      <data key="d4">(&lt;operator&gt;.notEquals,v != 0)</data>
    </node>
    <node id="1000188">
      <data key="d4">(&lt;operator&gt;.equals,color[v] == W)</data>
    </node>
    <node id="1000189">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,color[v])</data>
    </node>
    <node id="1000194">
      <data key="d4">(push,push(v))</data>
    </node>
    <node id="1000196">
      <data key="d4">(&lt;operator&gt;.assignment,color[v] = G)</data>
    </node>
    <node id="1000197">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,color[v])</data>
    </node>
    <node id="1000201">
      <data key="d4">(&lt;operator&gt;.assignment,d[v] = ++time)</data>
    </node>
    <node id="1000202">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,d[v])</data>
    </node>
    <node id="1000205">
      <data key="d4">(&lt;operator&gt;.preIncrement,++time)</data>
    </node>
    <node id="1000209">
      <data key="d4">(pop,pop())</data>
    </node>
    <node id="1000210">
      <data key="d4">(&lt;operator&gt;.assignment,color[u] = B)</data>
    </node>
    <node id="1000211">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,color[u])</data>
    </node>
    <node id="1000215">
      <data key="d4">(&lt;operator&gt;.assignment,f[u] = ++time)</data>
    </node>
    <node id="1000216">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,f[u])</data>
    </node>
    <node id="1000219">
      <data key="d4">(&lt;operator&gt;.preIncrement,++time)</data>
    </node>
    <node id="1000221">
      <data key="d4">(METHOD_RETURN,void)</data>
    </node>

    <edge source="1000120" target="1000126">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000126" target="1000129">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000128" target="1000134">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000129" target="1000128">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000133" target="1000140">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000134" target="1000137">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000137" target="1000133">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000140" target="1000144">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000140" target="1000221">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000144" target="1000149">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000147" target="1000153">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000149" target="1000147">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000153" target="1000156">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000156" target="1000183">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000156" target="1000165">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000156" target="1000165">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000159" target="1000156">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000163" target="1000159">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000163" target="1000173">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000164" target="1000163">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000165" target="1000164">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000171" target="1000178">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000172" target="1000171">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000173" target="1000172">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000178" target="1000183">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000178" target="1000221">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000183" target="1000189">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000183" target="1000209">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000188" target="1000140">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000188" target="1000194">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000189" target="1000188">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000194" target="1000197">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000196" target="1000202">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000197" target="1000196">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000201" target="1000140">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000202" target="1000205">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000205" target="1000201">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000209" target="1000211">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000210" target="1000216">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000211" target="1000210">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000215" target="1000140">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000216" target="1000219">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000219" target="1000215">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
  </graph>
</graphml>
