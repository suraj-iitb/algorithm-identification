<?xml version="1.0" encoding="UTF-8"?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns
     http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd">

  <!-- Created by Graph::Easy v0.76 at Tue Oct 27 10:40:10 2020 -->

  <key id="d0" for="edge" attr.name="arrowstyle" attr.type="string">
    <default>open</default>
  </key>
  <key id="d1" for="graph" attr.name="colorscheme" attr.type="string">
    <default>w3c</default>
  </key>
  <key id="d2" for="graph" attr.name="flow" attr.type="string">
    <default>east</default>
  </key>
  <key id="d3" for="graph" attr.name="title" attr.type="string">
    <default></default>
  </key>
  <key id="d4" for="node" attr.name="label" attr.type="string"/>
  <key id="d5" for="edge" attr.name="label" attr.type="string"/>
  <key id="d6" for="edge" attr.name="style" attr.type="string">
    <default>solid</default>
  </key>

  <graph id="G" edgedefault="directed">
    <data key="d1">x11</data>
    <data key="d2">south</data>
    <data key="d3">merge</data>
    <node id="1000169">
      <data key="d4">(METHOD,merge)</data>
    </node>
    <node id="1000182">
      <data key="d4">(&lt;operator&gt;.assignment,n1 = mid - left)</data>
    </node>
    <node id="1000184">
      <data key="d4">(&lt;operator&gt;.subtraction,mid - left)</data>
    </node>
    <node id="1000187">
      <data key="d4">(&lt;operator&gt;.assignment,n2 = right - mid)</data>
    </node>
    <node id="1000189">
      <data key="d4">(&lt;operator&gt;.subtraction,right - mid)</data>
    </node>
    <node id="1000192">
      <data key="d4">(&lt;operator&gt;.assignment,L = (int *)malloc((n1+1) * sizeof(int)))</data>
    </node>
    <node id="1000194">
      <data key="d4">(&lt;operator&gt;.cast,(int *)malloc((n1+1) * sizeof(int)))</data>
    </node>
    <node id="1000195">
      <data key="d4">(UNKNOWN,int *,int *)</data>
    </node>
    <node id="1000196">
      <data key="d4">(malloc,malloc((n1+1) * sizeof(int)))</data>
    </node>
    <node id="1000197">
      <data key="d4">(&lt;operator&gt;.multiplication,(n1+1) * sizeof(int))</data>
    </node>
    <node id="1000198">
      <data key="d4">(&lt;operator&gt;.addition,n1+1)</data>
    </node>
    <node id="1000201">
      <data key="d4">(&lt;operator&gt;.sizeOf,sizeof(int))</data>
    </node>
    <node id="1000203">
      <data key="d4">(&lt;operator&gt;.assignment,R = (int *)malloc((n2+1) * sizeof(int)))</data>
    </node>
    <node id="1000205">
      <data key="d4">(&lt;operator&gt;.cast,(int *)malloc((n2+1) * sizeof(int)))</data>
    </node>
    <node id="1000206">
      <data key="d4">(UNKNOWN,int *,int *)</data>
    </node>
    <node id="1000207">
      <data key="d4">(malloc,malloc((n2+1) * sizeof(int)))</data>
    </node>
    <node id="1000208">
      <data key="d4">(&lt;operator&gt;.multiplication,(n2+1) * sizeof(int))</data>
    </node>
    <node id="1000209">
      <data key="d4">(&lt;operator&gt;.addition,n2+1)</data>
    </node>
    <node id="1000212">
      <data key="d4">(&lt;operator&gt;.sizeOf,sizeof(int))</data>
    </node>
    <node id="1000215">
      <data key="d4">(&lt;operator&gt;.assignment,i = 0)</data>
    </node>
    <node id="1000218">
      <data key="d4">(&lt;operator&gt;.lessThan,i &lt; n1)</data>
    </node>
    <node id="1000221">
      <data key="d4">(&lt;operator&gt;.postIncrement,i++)</data>
    </node>
    <node id="1000224">
      <data key="d4">(&lt;operator&gt;.assignment,L[i] = A[left + i])</data>
    </node>
    <node id="1000225">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,L[i])</data>
    </node>
    <node id="1000228">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,A[left + i])</data>
    </node>
    <node id="1000230">
      <data key="d4">(&lt;operator&gt;.addition,left + i)</data>
    </node>
    <node id="1000234">
      <data key="d4">(&lt;operator&gt;.assignment,i = 0)</data>
    </node>
    <node id="1000237">
      <data key="d4">(&lt;operator&gt;.lessThan,i &lt; n2)</data>
    </node>
    <node id="1000240">
      <data key="d4">(&lt;operator&gt;.postIncrement,i++)</data>
    </node>
    <node id="1000243">
      <data key="d4">(&lt;operator&gt;.assignment,R[i] = A[mid + i])</data>
    </node>
    <node id="1000244">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,R[i])</data>
    </node>
    <node id="1000247">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,A[mid + i])</data>
    </node>
    <node id="1000249">
      <data key="d4">(&lt;operator&gt;.addition,mid + i)</data>
    </node>
    <node id="1000252">
      <data key="d4">(&lt;operator&gt;.assignment,L[n1] = INFTY)</data>
    </node>
    <node id="1000253">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,L[n1])</data>
    </node>
    <node id="1000257">
      <data key="d4">(&lt;operator&gt;.assignment,R[n2] = INFTY)</data>
    </node>
    <node id="1000258">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,R[n2])</data>
    </node>
    <node id="1000262">
      <data key="d4">(&lt;operator&gt;.assignment,i = j = 0)</data>
    </node>
    <node id="1000264">
      <data key="d4">(&lt;operator&gt;.assignment,j = 0)</data>
    </node>
    <node id="1000268">
      <data key="d4">(&lt;operator&gt;.assignment,k = left)</data>
    </node>
    <node id="1000271">
      <data key="d4">(&lt;operator&gt;.lessThan,k &lt; right)</data>
    </node>
    <node id="1000274">
      <data key="d4">(&lt;operator&gt;.postIncrement,k++)</data>
    </node>
    <node id="1000278">
      <data key="d4">(&lt;operator&gt;.lessEqualsThan,L[i] &lt;= R[j])</data>
    </node>
    <node id="1000279">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,L[i])</data>
    </node>
    <node id="1000282">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,R[j])</data>
    </node>
    <node id="1000286">
      <data key="d4">(&lt;operator&gt;.assignment,A[k] = L[i])</data>
    </node>
    <node id="1000287">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,A[k])</data>
    </node>
    <node id="1000290">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,L[i])</data>
    </node>
    <node id="1000293">
      <data key="d4">(&lt;operator&gt;.postIncrement,i++)</data>
    </node>
    <node id="1000297">
      <data key="d4">(&lt;operator&gt;.assignment,A[k] = R[j])</data>
    </node>
    <node id="1000298">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,A[k])</data>
    </node>
    <node id="1000301">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,R[j])</data>
    </node>
    <node id="1000304">
      <data key="d4">(&lt;operator&gt;.postIncrement,j++)</data>
    </node>
    <node id="1000306">
      <data key="d4">(&lt;operator&gt;.postIncrement,compcount++)</data>
    </node>
    <node id="1000308">
      <data key="d4">(free,free(L))</data>
    </node>
    <node id="1000310">
      <data key="d4">(free,free(R))</data>
    </node>
    <node id="1000312">
      <data key="d4">(METHOD_RETURN,void)</data>
    </node>

    <edge source="1000169" target="1000184">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000182" target="1000189">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000184" target="1000182">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000187" target="1000195">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000189" target="1000187">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000192" target="1000206">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000194" target="1000192">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000195" target="1000198">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000196" target="1000194">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000197" target="1000196">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000198" target="1000201">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000201" target="1000197">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000203" target="1000215">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000205" target="1000203">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000206" target="1000209">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000207" target="1000205">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000208" target="1000207">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000209" target="1000212">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000212" target="1000208">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000215" target="1000218">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000218" target="1000225">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000218" target="1000225">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000218" target="1000234">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000221" target="1000218">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000224" target="1000221">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000225" target="1000230">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000228" target="1000224">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000230" target="1000228">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000234" target="1000237">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000237" target="1000244">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000237" target="1000244">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000237" target="1000253">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000240" target="1000237">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000243" target="1000240">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000244" target="1000249">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000247" target="1000243">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000249" target="1000247">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000252" target="1000258">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000253" target="1000252">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000257" target="1000264">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000258" target="1000257">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000262" target="1000268">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000264" target="1000262">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000268" target="1000271">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000271" target="1000279">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000271" target="1000279">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000271" target="1000308">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000274" target="1000271">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000278" target="1000287">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000278" target="1000298">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000279" target="1000282">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000282" target="1000278">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000286" target="1000293">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000287" target="1000290">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000290" target="1000286">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000293" target="1000306">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000297" target="1000304">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000298" target="1000301">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000301" target="1000297">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000304" target="1000306">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000306" target="1000274">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000308" target="1000310">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000310" target="1000312">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
  </graph>
</graphml>
