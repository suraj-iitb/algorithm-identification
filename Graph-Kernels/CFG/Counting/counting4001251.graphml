<?xml version="1.0" encoding="UTF-8"?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns
     http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd">

  <!-- Created by Graph::Easy v0.76 at Tue Oct 27 08:51:00 2020 -->

  <key id="d0" for="edge" attr.name="arrowstyle" attr.type="string">
    <default>open</default>
  </key>
  <key id="d1" for="graph" attr.name="colorscheme" attr.type="string">
    <default>w3c</default>
  </key>
  <key id="d2" for="graph" attr.name="flow" attr.type="string">
    <default>east</default>
  </key>
  <key id="d3" for="graph" attr.name="title" attr.type="string">
    <default></default>
  </key>
  <key id="d4" for="node" attr.name="label" attr.type="string"/>
  <key id="d5" for="edge" attr.name="label" attr.type="string"/>
  <key id="d6" for="edge" attr.name="style" attr.type="string">
    <default>solid</default>
  </key>

  <graph id="G" edgedefault="directed">
    <data key="d1">x11</data>
    <data key="d2">south</data>
    <data key="d3">main</data>
    <node id="1000189">
      <data key="d4">(METHOD,main)</data>
    </node>
    <node id="1000200">
      <data key="d4">(&lt;operator&gt;.assignment,ret = scanf(&quot;%d&quot;, &amp;n))</data>
    </node>
    <node id="1000202">
      <data key="d4">(scanf,scanf(&quot;%d&quot;, &amp;n))</data>
    </node>
    <node id="1000204">
      <data key="d4">(&lt;operator&gt;.addressOf,&amp;n)</data>
    </node>
    <node id="1000207">
      <data key="d4">(&lt;operator&gt;.notEquals,errno != 0)</data>
    </node>
    <node id="1000210">
      <data key="d4">(perror,perror(&quot;scanf: n&quot;))</data>
    </node>
    <node id="1000213">
      <data key="d4">(&lt;operator&gt;.lessThan,ret &lt; 1)</data>
    </node>
    <node id="1000216">
      <data key="d4">(exit,exit(1))</data>
    </node>
    <node id="1000218">
      <data key="d4">(&lt;operator&gt;.assignment,a = (int *) malloc(sizeof(int) * n))</data>
    </node>
    <node id="1000220">
      <data key="d4">(&lt;operator&gt;.cast,(int *) malloc(sizeof(int) * n))</data>
    </node>
    <node id="1000221">
      <data key="d4">(UNKNOWN,int *,int *)</data>
    </node>
    <node id="1000222">
      <data key="d4">(malloc,malloc(sizeof(int) * n))</data>
    </node>
    <node id="1000223">
      <data key="d4">(&lt;operator&gt;.multiplication,sizeof(int) * n)</data>
    </node>
    <node id="1000224">
      <data key="d4">(&lt;operator&gt;.sizeOf,sizeof(int))</data>
    </node>
    <node id="1000228">
      <data key="d4">(&lt;operator&gt;.equals,a == NULL)</data>
    </node>
    <node id="1000231">
      <data key="d4">(exit,exit(1))</data>
    </node>
    <node id="1000234">
      <data key="d4">(&lt;operator&gt;.assignment,i = max = 0)</data>
    </node>
    <node id="1000236">
      <data key="d4">(&lt;operator&gt;.assignment,max = 0)</data>
    </node>
    <node id="1000239">
      <data key="d4">(&lt;operator&gt;.lessThan,i &lt; n)</data>
    </node>
    <node id="1000242">
      <data key="d4">(&lt;operator&gt;.preIncrement,++i)</data>
    </node>
    <node id="1000245">
      <data key="d4">(&lt;operator&gt;.assignment,ret = scanf(&quot;%d&quot;, &amp;a[i]))</data>
    </node>
    <node id="1000247">
      <data key="d4">(scanf,scanf(&quot;%d&quot;, &amp;a[i]))</data>
    </node>
    <node id="1000249">
      <data key="d4">(&lt;operator&gt;.addressOf,&amp;a[i])</data>
    </node>
    <node id="1000250">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,a[i])</data>
    </node>
    <node id="1000254">
      <data key="d4">(&lt;operator&gt;.notEquals,errno != 0)</data>
    </node>
    <node id="1000257">
      <data key="d4">(perror,perror(&quot;scanf: a[i]&quot;))</data>
    </node>
    <node id="1000260">
      <data key="d4">(&lt;operator&gt;.lessThan,ret &lt; 1)</data>
    </node>
    <node id="1000265">
      <data key="d4">(&lt;operator&gt;.greaterThan,a[i] &gt; max)</data>
    </node>
    <node id="1000266">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,a[i])</data>
    </node>
    <node id="1000270">
      <data key="d4">(&lt;operator&gt;.assignment,max = a[i])</data>
    </node>
    <node id="1000272">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,a[i])</data>
    </node>
    <node id="1000275">
      <data key="d4">(&lt;operator&gt;.assignment,b = (int *) malloc(sizeof(int) * n))</data>
    </node>
    <node id="1000277">
      <data key="d4">(&lt;operator&gt;.cast,(int *) malloc(sizeof(int) * n))</data>
    </node>
    <node id="1000278">
      <data key="d4">(UNKNOWN,int *,int *)</data>
    </node>
    <node id="1000279">
      <data key="d4">(malloc,malloc(sizeof(int) * n))</data>
    </node>
    <node id="1000280">
      <data key="d4">(&lt;operator&gt;.multiplication,sizeof(int) * n)</data>
    </node>
    <node id="1000281">
      <data key="d4">(&lt;operator&gt;.sizeOf,sizeof(int))</data>
    </node>
    <node id="1000285">
      <data key="d4">(&lt;operator&gt;.equals,b == NULL)</data>
    </node>
    <node id="1000289">
      <data key="d4">(free,free(a))</data>
    </node>
    <node id="1000291">
      <data key="d4">(exit,exit(1))</data>
    </node>
    <node id="1000293">
      <data key="d4">(&lt;operator&gt;.assignment,c = (int *) malloc(sizeof(int) * (max + 1)))</data>
    </node>
    <node id="1000295">
      <data key="d4">(&lt;operator&gt;.cast,(int *) malloc(sizeof(int) * (max + 1)))</data>
    </node>
    <node id="1000296">
      <data key="d4">(UNKNOWN,int *,int *)</data>
    </node>
    <node id="1000297">
      <data key="d4">(malloc,malloc(sizeof(int) * (max + 1)))</data>
    </node>
    <node id="1000298">
      <data key="d4">(&lt;operator&gt;.multiplication,sizeof(int) * (max + 1))</data>
    </node>
    <node id="1000299">
      <data key="d4">(&lt;operator&gt;.sizeOf,sizeof(int))</data>
    </node>
    <node id="1000301">
      <data key="d4">(&lt;operator&gt;.addition,max + 1)</data>
    </node>
    <node id="1000305">
      <data key="d4">(&lt;operator&gt;.equals,c == NULL)</data>
    </node>
    <node id="1000309">
      <data key="d4">(free,free(a))</data>
    </node>
    <node id="1000311">
      <data key="d4">(free,free(b))</data>
    </node>
    <node id="1000313">
      <data key="d4">(exit,exit(1))</data>
    </node>
    <node id="1000315">
      <data key="d4">(counting_sort,counting_sort(a, b, c, n, max + 1))</data>
    </node>
    <node id="1000320">
      <data key="d4">(&lt;operator&gt;.addition,max + 1)</data>
    </node>
    <node id="1000324">
      <data key="d4">(&lt;operator&gt;.assignment,i = 0)</data>
    </node>
    <node id="1000327">
      <data key="d4">(&lt;operator&gt;.lessThan,i &lt; n)</data>
    </node>
    <node id="1000330">
      <data key="d4">(&lt;operator&gt;.preIncrement,++i)</data>
    </node>
    <node id="1000334">
      <data key="d4">(&lt;operator&gt;.greaterThan,i &gt; 0)</data>
    </node>
    <node id="1000337">
      <data key="d4">(printf,printf(&quot; &quot;))</data>
    </node>
    <node id="1000339">
      <data key="d4">(printf,printf(&quot;%d&quot;, b[i]))</data>
    </node>
    <node id="1000341">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,b[i])</data>
    </node>
    <node id="1000344">
      <data key="d4">(printf,printf(&quot;\n&quot;))</data>
    </node>
    <node id="1000346">
      <data key="d4">(free,free(a))</data>
    </node>
    <node id="1000348">
      <data key="d4">(free,free(b))</data>
    </node>
    <node id="1000350">
      <data key="d4">(free,free(c))</data>
    </node>
    <node id="1000352">
      <data key="d4">(exit,exit(0))</data>
    </node>
    <node id="1000354">
      <data key="d4">(METHOD_RETURN,int)</data>
    </node>

    <edge source="1000189" target="1000204">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000200" target="1000207">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000202" target="1000200">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000204" target="1000202">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000207" target="1000213">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000207" target="1000210">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000210" target="1000213">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000213" target="1000216">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000213" target="1000221">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000216" target="1000221">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000218" target="1000228">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000220" target="1000218">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000221" target="1000224">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000222" target="1000220">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000223" target="1000222">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000224" target="1000223">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000228" target="1000231">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000228" target="1000236">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000231" target="1000236">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000234" target="1000239">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000236" target="1000234">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000239" target="1000250">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000239" target="1000250">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000239" target="1000278">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000242" target="1000239">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000245" target="1000254">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000247" target="1000245">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000249" target="1000247">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000250" target="1000249">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000254" target="1000260">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000254" target="1000257">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000257" target="1000260">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000260" target="1000266">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000260" target="1000278">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000265" target="1000242">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000265" target="1000272">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000266" target="1000265">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000270" target="1000242">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000272" target="1000270">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000275" target="1000285">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000277" target="1000275">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000278" target="1000281">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000279" target="1000277">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000280" target="1000279">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000281" target="1000280">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000285" target="1000289">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000285" target="1000296">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000289" target="1000291">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000291" target="1000296">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000293" target="1000305">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000295" target="1000293">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000296" target="1000299">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000297" target="1000295">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000298" target="1000297">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000299" target="1000301">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000301" target="1000298">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000305" target="1000309">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000305" target="1000320">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000309" target="1000311">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000311" target="1000313">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000313" target="1000320">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000315" target="1000324">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000320" target="1000315">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000324" target="1000327">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000327" target="1000334">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000327" target="1000334">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000327" target="1000344">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000330" target="1000327">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000334" target="1000337">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000334" target="1000341">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000337" target="1000341">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000339" target="1000330">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000341" target="1000339">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000344" target="1000346">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000346" target="1000348">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000348" target="1000350">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000350" target="1000352">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000352" target="1000354">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
  </graph>
</graphml>
