<?xml version="1.0" encoding="UTF-8"?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns
     http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd">

  <!-- Created by Graph::Easy v0.76 at Tue Jun  8 22:19:42 2021 -->

  <key id="d0" for="edge" attr.name="arrowstyle" attr.type="string">
    <default>open</default>
  </key>
  <key id="d1" for="graph" attr.name="colorscheme" attr.type="string">
    <default>w3c</default>
  </key>
  <key id="d2" for="graph" attr.name="flow" attr.type="string">
    <default>east</default>
  </key>
  <key id="d3" for="graph" attr.name="title" attr.type="string">
    <default></default>
  </key>
  <key id="d4" for="node" attr.name="label" attr.type="string"/>
  <key id="d5" for="edge" attr.name="label" attr.type="string"/>
  <key id="d6" for="edge" attr.name="style" attr.type="string">
    <default>solid</default>
  </key>

  <graph id="G" edgedefault="directed">
    <data key="d1">x11</data>
    <data key="d2">south</data>
    <data key="d3">main</data>
    <node id="1000108">
      <data key="d4">(METHOD,main)</data>
    </node>
    <node id="1000117">
      <data key="d4">(&lt;operator&gt;.assignment,c = 0)</data>
    </node>
    <node id="1000120">
      <data key="d4">(scanf,scanf( &quot;%d&quot; , &amp;n ))</data>
    </node>
    <node id="1000122">
      <data key="d4">(&lt;operator&gt;.addressOf,&amp;n)</data>
    </node>
    <node id="1000124">
      <data key="d4">(&lt;operator&gt;.assignment,s = (int *)malloc(n * sizeof(int)))</data>
    </node>
    <node id="1000126">
      <data key="d4">(&lt;operator&gt;.cast,(int *)malloc(n * sizeof(int)))</data>
    </node>
    <node id="1000127">
      <data key="d4">(UNKNOWN,int *,int *)</data>
    </node>
    <node id="1000128">
      <data key="d4">(malloc,malloc(n * sizeof(int)))</data>
    </node>
    <node id="1000129">
      <data key="d4">(&lt;operator&gt;.multiplication,n * sizeof(int))</data>
    </node>
    <node id="1000131">
      <data key="d4">(&lt;operator&gt;.sizeOf,sizeof(int))</data>
    </node>
    <node id="1000134">
      <data key="d4">(&lt;operator&gt;.assignment,i = 0)</data>
    </node>
    <node id="1000137">
      <data key="d4">(&lt;operator&gt;.lessThan,i &lt; n)</data>
    </node>
    <node id="1000140">
      <data key="d4">(&lt;operator&gt;.postIncrement,i++)</data>
    </node>
    <node id="1000143">
      <data key="d4">(scanf,scanf( &quot;%d&quot; , &amp;s[i] ))</data>
    </node>
    <node id="1000145">
      <data key="d4">(&lt;operator&gt;.addressOf,&amp;s[i])</data>
    </node>
    <node id="1000146">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,s[i])</data>
    </node>
    <node id="1000149">
      <data key="d4">(scanf,scanf( &quot;%d&quot; , &amp;q ))</data>
    </node>
    <node id="1000151">
      <data key="d4">(&lt;operator&gt;.addressOf,&amp;q)</data>
    </node>
    <node id="1000153">
      <data key="d4">(&lt;operator&gt;.assignment,t = (int *)malloc(q * sizeof(int)))</data>
    </node>
    <node id="1000155">
      <data key="d4">(&lt;operator&gt;.cast,(int *)malloc(q * sizeof(int)))</data>
    </node>
    <node id="1000156">
      <data key="d4">(UNKNOWN,int *,int *)</data>
    </node>
    <node id="1000157">
      <data key="d4">(malloc,malloc(q * sizeof(int)))</data>
    </node>
    <node id="1000158">
      <data key="d4">(&lt;operator&gt;.multiplication,q * sizeof(int))</data>
    </node>
    <node id="1000160">
      <data key="d4">(&lt;operator&gt;.sizeOf,sizeof(int))</data>
    </node>
    <node id="1000163">
      <data key="d4">(&lt;operator&gt;.assignment,i = 0)</data>
    </node>
    <node id="1000166">
      <data key="d4">(&lt;operator&gt;.lessThan,i &lt; q)</data>
    </node>
    <node id="1000169">
      <data key="d4">(&lt;operator&gt;.postIncrement,i++)</data>
    </node>
    <node id="1000172">
      <data key="d4">(scanf,scanf( &quot;%d&quot; , &amp;t[i] ))</data>
    </node>
    <node id="1000174">
      <data key="d4">(&lt;operator&gt;.addressOf,&amp;t[i])</data>
    </node>
    <node id="1000175">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,t[i])</data>
    </node>
    <node id="1000179">
      <data key="d4">(&lt;operator&gt;.assignment,i = 0)</data>
    </node>
    <node id="1000182">
      <data key="d4">(&lt;operator&gt;.lessThan,i &lt; q)</data>
    </node>
    <node id="1000185">
      <data key="d4">(&lt;operator&gt;.postIncrement,i++)</data>
    </node>
    <node id="1000189">
      <data key="d4">(&lt;operator&gt;.notEquals,binarySearch( n , s , t[i]) != -1)</data>
    </node>
    <node id="1000190">
      <data key="d4">(binarySearch,binarySearch( n , s , t[i]))</data>
    </node>
    <node id="1000193">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,t[i])</data>
    </node>
    <node id="1000196">
      <data key="d4">(&lt;operator&gt;.minus,-1)</data>
    </node>
    <node id="1000199">
      <data key="d4">(&lt;operator&gt;.postIncrement,c++)</data>
    </node>
    <node id="1000201">
      <data key="d4">(printf,printf( &quot;%d\n&quot; , c ))</data>
    </node>
    <node id="1000204">
      <data key="d4">(METHOD_RETURN,int)</data>
    </node>

    <edge source="1000108" target="1000117">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000117" target="1000122">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000120" target="1000127">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000122" target="1000120">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000124" target="1000134">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000126" target="1000124">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000127" target="1000131">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000128" target="1000126">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000129" target="1000128">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000131" target="1000129">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000134" target="1000137">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000137" target="1000146">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000137" target="1000146">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000137" target="1000151">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000140" target="1000137">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000143" target="1000140">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000145" target="1000143">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000146" target="1000145">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000149" target="1000156">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000151" target="1000149">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000153" target="1000163">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000155" target="1000153">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000156" target="1000160">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000157" target="1000155">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000158" target="1000157">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000160" target="1000158">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000163" target="1000166">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000166" target="1000175">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000166" target="1000175">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000166" target="1000179">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000169" target="1000166">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000172" target="1000169">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000174" target="1000172">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000175" target="1000174">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000179" target="1000182">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000182" target="1000193">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000182" target="1000193">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000182" target="1000201">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000185" target="1000182">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000189" target="1000185">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000189" target="1000199">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000190" target="1000196">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000193" target="1000190">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000196" target="1000189">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000199" target="1000185">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000201" target="1000204">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
  </graph>
</graphml>
