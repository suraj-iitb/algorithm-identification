<?xml version="1.0" encoding="UTF-8"?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns
     http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd">

  <!-- Created by Graph::Easy v0.76 at Tue Oct 27 10:17:08 2020 -->

  <key id="d0" for="edge" attr.name="arrowstyle" attr.type="string">
    <default>open</default>
  </key>
  <key id="d1" for="graph" attr.name="colorscheme" attr.type="string">
    <default>w3c</default>
  </key>
  <key id="d2" for="graph" attr.name="flow" attr.type="string">
    <default>east</default>
  </key>
  <key id="d3" for="graph" attr.name="title" attr.type="string">
    <default></default>
  </key>
  <key id="d4" for="node" attr.name="label" attr.type="string"/>
  <key id="d5" for="edge" attr.name="label" attr.type="string"/>
  <key id="d6" for="edge" attr.name="style" attr.type="string">
    <default>solid</default>
  </key>

  <graph id="G" edgedefault="directed">
    <data key="d1">x11</data>
    <data key="d2">south</data>
    <data key="d3">merge</data>
    <node id="1000170">
      <data key="d4">(METHOD,merge)</data>
    </node>
    <node id="1000183">
      <data key="d4">(&lt;operator&gt;.assignment,n1 = m-l)</data>
    </node>
    <node id="1000185">
      <data key="d4">(&lt;operator&gt;.subtraction,m-l)</data>
    </node>
    <node id="1000188">
      <data key="d4">(&lt;operator&gt;.assignment,n2 = r-m)</data>
    </node>
    <node id="1000190">
      <data key="d4">(&lt;operator&gt;.subtraction,r-m)</data>
    </node>
    <node id="1000193">
      <data key="d4">(&lt;operator&gt;.assignment,L = (int *)malloc((n1+1) * sizeof(int)))</data>
    </node>
    <node id="1000195">
      <data key="d4">(&lt;operator&gt;.cast,(int *)malloc((n1+1) * sizeof(int)))</data>
    </node>
    <node id="1000196">
      <data key="d4">(UNKNOWN,int *,int *)</data>
    </node>
    <node id="1000197">
      <data key="d4">(malloc,malloc((n1+1) * sizeof(int)))</data>
    </node>
    <node id="1000198">
      <data key="d4">(&lt;operator&gt;.multiplication,(n1+1) * sizeof(int))</data>
    </node>
    <node id="1000199">
      <data key="d4">(&lt;operator&gt;.addition,n1+1)</data>
    </node>
    <node id="1000202">
      <data key="d4">(&lt;operator&gt;.sizeOf,sizeof(int))</data>
    </node>
    <node id="1000204">
      <data key="d4">(&lt;operator&gt;.assignment,R = (int *)malloc((n2+1) * sizeof(int)))</data>
    </node>
    <node id="1000206">
      <data key="d4">(&lt;operator&gt;.cast,(int *)malloc((n2+1) * sizeof(int)))</data>
    </node>
    <node id="1000207">
      <data key="d4">(UNKNOWN,int *,int *)</data>
    </node>
    <node id="1000208">
      <data key="d4">(malloc,malloc((n2+1) * sizeof(int)))</data>
    </node>
    <node id="1000209">
      <data key="d4">(&lt;operator&gt;.multiplication,(n2+1) * sizeof(int))</data>
    </node>
    <node id="1000210">
      <data key="d4">(&lt;operator&gt;.addition,n2+1)</data>
    </node>
    <node id="1000213">
      <data key="d4">(&lt;operator&gt;.sizeOf,sizeof(int))</data>
    </node>
    <node id="1000216">
      <data key="d4">(&lt;operator&gt;.assignment,i=0)</data>
    </node>
    <node id="1000219">
      <data key="d4">(&lt;operator&gt;.lessThan,i&lt;n1)</data>
    </node>
    <node id="1000222">
      <data key="d4">(&lt;operator&gt;.postIncrement,i++)</data>
    </node>
    <node id="1000224">
      <data key="d4">(&lt;operator&gt;.assignment,L[i] = A[l+i])</data>
    </node>
    <node id="1000225">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,L[i])</data>
    </node>
    <node id="1000228">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,A[l+i])</data>
    </node>
    <node id="1000230">
      <data key="d4">(&lt;operator&gt;.addition,l+i)</data>
    </node>
    <node id="1000234">
      <data key="d4">(&lt;operator&gt;.assignment,i=0)</data>
    </node>
    <node id="1000237">
      <data key="d4">(&lt;operator&gt;.lessThan,i&lt;n2)</data>
    </node>
    <node id="1000240">
      <data key="d4">(&lt;operator&gt;.postIncrement,i++)</data>
    </node>
    <node id="1000242">
      <data key="d4">(&lt;operator&gt;.assignment,R[i] = A[m+i])</data>
    </node>
    <node id="1000243">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,R[i])</data>
    </node>
    <node id="1000246">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,A[m+i])</data>
    </node>
    <node id="1000248">
      <data key="d4">(&lt;operator&gt;.addition,m+i)</data>
    </node>
    <node id="1000251">
      <data key="d4">(&lt;operator&gt;.assignment,L[n1] = INFTY)</data>
    </node>
    <node id="1000252">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,L[n1])</data>
    </node>
    <node id="1000256">
      <data key="d4">(&lt;operator&gt;.assignment,R[n2] = INFTY)</data>
    </node>
    <node id="1000257">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,R[n2])</data>
    </node>
    <node id="1000261">
      <data key="d4">(&lt;operator&gt;.assignment,i = j = 0)</data>
    </node>
    <node id="1000263">
      <data key="d4">(&lt;operator&gt;.assignment,j = 0)</data>
    </node>
    <node id="1000267">
      <data key="d4">(&lt;operator&gt;.assignment,k=l)</data>
    </node>
    <node id="1000270">
      <data key="d4">(&lt;operator&gt;.lessThan,k&lt;r)</data>
    </node>
    <node id="1000273">
      <data key="d4">(&lt;operator&gt;.postIncrement,k++)</data>
    </node>
    <node id="1000277">
      <data key="d4">(&lt;operator&gt;.lessEqualsThan,L[i] &lt;= R[j])</data>
    </node>
    <node id="1000278">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,L[i])</data>
    </node>
    <node id="1000281">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,R[j])</data>
    </node>
    <node id="1000285">
      <data key="d4">(&lt;operator&gt;.assignment,A[k] = L[i])</data>
    </node>
    <node id="1000286">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,A[k])</data>
    </node>
    <node id="1000289">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,L[i])</data>
    </node>
    <node id="1000292">
      <data key="d4">(&lt;operator&gt;.postIncrement,i++)</data>
    </node>
    <node id="1000294">
      <data key="d4">(&lt;operator&gt;.postIncrement,count++)</data>
    </node>
    <node id="1000298">
      <data key="d4">(&lt;operator&gt;.assignment,A[k] = R[j])</data>
    </node>
    <node id="1000299">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,A[k])</data>
    </node>
    <node id="1000302">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,R[j])</data>
    </node>
    <node id="1000305">
      <data key="d4">(&lt;operator&gt;.postIncrement,j++)</data>
    </node>
    <node id="1000307">
      <data key="d4">(&lt;operator&gt;.postIncrement,count++)</data>
    </node>
    <node id="1000309">
      <data key="d4">(free,free(L))</data>
    </node>
    <node id="1000311">
      <data key="d4">(free,free(R))</data>
    </node>
    <node id="1000313">
      <data key="d4">(RETURN,return;,return;)</data>
    </node>
    <node id="1000314">
      <data key="d4">(METHOD_RETURN,void)</data>
    </node>

    <edge source="1000170" target="1000185">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000183" target="1000190">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000185" target="1000183">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000188" target="1000196">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000190" target="1000188">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000193" target="1000207">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000195" target="1000193">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000196" target="1000199">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000197" target="1000195">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000198" target="1000197">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000199" target="1000202">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000202" target="1000198">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000204" target="1000216">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000206" target="1000204">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000207" target="1000210">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000208" target="1000206">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000209" target="1000208">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000210" target="1000213">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000213" target="1000209">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000216" target="1000219">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000219" target="1000225">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000219" target="1000225">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000219" target="1000234">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000222" target="1000219">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000224" target="1000222">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000225" target="1000230">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000228" target="1000224">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000230" target="1000228">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000234" target="1000237">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000237" target="1000243">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000237" target="1000243">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000237" target="1000252">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000240" target="1000237">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000242" target="1000240">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000243" target="1000248">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000246" target="1000242">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000248" target="1000246">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000251" target="1000257">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000252" target="1000251">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000256" target="1000263">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000257" target="1000256">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000261" target="1000267">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000263" target="1000261">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000267" target="1000270">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000270" target="1000278">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000270" target="1000278">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000270" target="1000309">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000273" target="1000270">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000277" target="1000286">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000277" target="1000299">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000278" target="1000281">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000281" target="1000277">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000285" target="1000292">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000286" target="1000289">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000289" target="1000285">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000292" target="1000294">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000294" target="1000273">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000298" target="1000305">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000299" target="1000302">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000302" target="1000298">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000305" target="1000307">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000307" target="1000273">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000309" target="1000311">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000311" target="1000313">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000313" target="1000314">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
  </graph>
</graphml>
