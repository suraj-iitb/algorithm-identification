<?xml version="1.0" encoding="UTF-8"?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns
     http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd">

  <!-- Created by Graph::Easy v0.76 at Tue Jun  8 22:38:32 2021 -->

  <key id="d0" for="edge" attr.name="arrowstyle" attr.type="string">
    <default>open</default>
  </key>
  <key id="d1" for="graph" attr.name="colorscheme" attr.type="string">
    <default>w3c</default>
  </key>
  <key id="d2" for="graph" attr.name="flow" attr.type="string">
    <default>east</default>
  </key>
  <key id="d3" for="graph" attr.name="title" attr.type="string">
    <default></default>
  </key>
  <key id="d4" for="node" attr.name="label" attr.type="string"/>
  <key id="d5" for="edge" attr.name="label" attr.type="string"/>
  <key id="d6" for="edge" attr.name="style" attr.type="string">
    <default>solid</default>
  </key>

  <graph id="G" edgedefault="directed">
    <data key="d1">x11</data>
    <data key="d2">south</data>
    <data key="d3">main</data>
    <node id="1000102">
      <data key="d4">(METHOD,main)</data>
    </node>
    <node id="1000109">
      <data key="d4">(scanf,scanf(&quot;%d&quot;, &amp;first_array_size))</data>
    </node>
    <node id="1000111">
      <data key="d4">(&lt;operator&gt;.addressOf,&amp;first_array_size)</data>
    </node>
    <node id="1000114">
      <data key="d4">(&lt;operator&gt;.assignment,* first_array = (int*)malloc(sizeof(int) * first_array_size))</data>
    </node>
    <node id="1000116">
      <data key="d4">(&lt;operator&gt;.cast,(int*)malloc(sizeof(int) * first_array_size))</data>
    </node>
    <node id="1000117">
      <data key="d4">(UNKNOWN,int*,int*)</data>
    </node>
    <node id="1000118">
      <data key="d4">(malloc,malloc(sizeof(int) * first_array_size))</data>
    </node>
    <node id="1000119">
      <data key="d4">(&lt;operator&gt;.multiplication,sizeof(int) * first_array_size)</data>
    </node>
    <node id="1000120">
      <data key="d4">(&lt;operator&gt;.sizeOf,sizeof(int))</data>
    </node>
    <node id="1000124">
      <data key="d4">(&lt;operator&gt;.assignment,i = 0)</data>
    </node>
    <node id="1000127">
      <data key="d4">(&lt;operator&gt;.notEquals,i != first_array_size)</data>
    </node>
    <node id="1000130">
      <data key="d4">(&lt;operator&gt;.postIncrement,i++)</data>
    </node>
    <node id="1000133">
      <data key="d4">(scanf,scanf(&quot;%d&quot;, &amp;first_array[i]))</data>
    </node>
    <node id="1000135">
      <data key="d4">(&lt;operator&gt;.addressOf,&amp;first_array[i])</data>
    </node>
    <node id="1000136">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,first_array[i])</data>
    </node>
    <node id="1000139">
      <data key="d4">(&lt;operator&gt;.assignment,answer = 0)</data>
    </node>
    <node id="1000142">
      <data key="d4">(scanf,scanf(&quot;%d&quot;, &amp;second_array_size))</data>
    </node>
    <node id="1000144">
      <data key="d4">(&lt;operator&gt;.addressOf,&amp;second_array_size)</data>
    </node>
    <node id="1000150">
      <data key="d4">(&lt;operator&gt;.postDecrement,second_array_size--)</data>
    </node>
    <node id="1000153">
      <data key="d4">(scanf,scanf(&quot;%d&quot;, &amp;temp))</data>
    </node>
    <node id="1000155">
      <data key="d4">(&lt;operator&gt;.addressOf,&amp;temp)</data>
    </node>
    <node id="1000157">
      <data key="d4">(&lt;operator&gt;.assignment,minimum = 0)</data>
    </node>
    <node id="1000160">
      <data key="d4">(&lt;operator&gt;.assignment,maximum = first_array_size - 1)</data>
    </node>
    <node id="1000162">
      <data key="d4">(&lt;operator&gt;.subtraction,first_array_size - 1)</data>
    </node>
    <node id="1000166">
      <data key="d4">(&lt;operator&gt;.lessEqualsThan,minimum &lt;= maximum)</data>
    </node>
    <node id="1000170">
      <data key="d4">(&lt;operator&gt;.assignment,middle = (minimum + maximum) / 2)</data>
    </node>
    <node id="1000172">
      <data key="d4">(&lt;operator&gt;.division,(minimum + maximum) / 2)</data>
    </node>
    <node id="1000173">
      <data key="d4">(&lt;operator&gt;.addition,minimum + maximum)</data>
    </node>
    <node id="1000178">
      <data key="d4">(&lt;operator&gt;.equals,first_array[middle] == temp)</data>
    </node>
    <node id="1000179">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,first_array[middle])</data>
    </node>
    <node id="1000184">
      <data key="d4">(&lt;operator&gt;.postIncrement,answer++)</data>
    </node>
    <node id="1000189">
      <data key="d4">(&lt;operator&gt;.greaterThan,first_array[middle] &gt; temp)</data>
    </node>
    <node id="1000190">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,first_array[middle])</data>
    </node>
    <node id="1000195">
      <data key="d4">(&lt;operator&gt;.assignment,maximum = middle - 1)</data>
    </node>
    <node id="1000197">
      <data key="d4">(&lt;operator&gt;.subtraction,middle - 1)</data>
    </node>
    <node id="1000202">
      <data key="d4">(&lt;operator&gt;.lessThan,first_array[middle] &lt; temp)</data>
    </node>
    <node id="1000203">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,first_array[middle])</data>
    </node>
    <node id="1000208">
      <data key="d4">(&lt;operator&gt;.assignment,minimum = middle + 1)</data>
    </node>
    <node id="1000210">
      <data key="d4">(&lt;operator&gt;.addition,middle + 1)</data>
    </node>
    <node id="1000213">
      <data key="d4">(printf,printf(&quot;%d\n&quot;, answer))</data>
    </node>
    <node id="1000216">
      <data key="d4">(free,free(first_array))</data>
    </node>
    <node id="1000218">
      <data key="d4">(METHOD_RETURN,int)</data>
    </node>

    <edge source="1000102" target="1000111">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000109" target="1000117">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000111" target="1000109">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000114" target="1000124">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000116" target="1000114">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000117" target="1000120">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000118" target="1000116">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000119" target="1000118">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000120" target="1000119">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000124" target="1000127">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000127" target="1000136">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000127" target="1000136">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000127" target="1000139">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000130" target="1000127">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000133" target="1000130">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000135" target="1000133">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000136" target="1000135">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000139" target="1000144">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000142" target="1000150">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000144" target="1000142">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000150" target="1000155">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000150" target="1000213">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000153" target="1000157">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000155" target="1000153">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000157" target="1000162">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000160" target="1000166">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000162" target="1000160">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000166" target="1000150">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000166" target="1000173">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000170" target="1000179">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000172" target="1000170">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000173" target="1000172">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000178" target="1000184">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000178" target="1000190">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000179" target="1000178">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000184" target="1000150">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000184" target="1000213">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000189" target="1000197">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000189" target="1000203">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000190" target="1000189">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000195" target="1000166">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000197" target="1000195">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000202" target="1000166">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000202" target="1000210">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000203" target="1000202">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000208" target="1000166">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000210" target="1000208">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000213" target="1000216">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000216" target="1000218">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
  </graph>
</graphml>
