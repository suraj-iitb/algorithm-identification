<?xml version="1.0" encoding="UTF-8"?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns
     http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd">

  <!-- Created by Graph::Easy v0.76 at Tue Oct 27 11:34:50 2020 -->

  <key id="d0" for="edge" attr.name="arrowstyle" attr.type="string">
    <default>open</default>
  </key>
  <key id="d1" for="graph" attr.name="colorscheme" attr.type="string">
    <default>w3c</default>
  </key>
  <key id="d2" for="graph" attr.name="flow" attr.type="string">
    <default>east</default>
  </key>
  <key id="d3" for="graph" attr.name="title" attr.type="string">
    <default></default>
  </key>
  <key id="d4" for="node" attr.name="label" attr.type="string"/>
  <key id="d5" for="edge" attr.name="label" attr.type="string"/>
  <key id="d6" for="edge" attr.name="style" attr.type="string">
    <default>solid</default>
  </key>

  <graph id="G" edgedefault="directed">
    <data key="d1">x11</data>
    <data key="d2">south</data>
    <data key="d3">merge</data>
    <node id="1000137">
      <data key="d4">(METHOD,merge)</data>
    </node>
    <node id="1000150">
      <data key="d4">(&lt;operator&gt;.assignment,n1=mid-left)</data>
    </node>
    <node id="1000152">
      <data key="d4">(&lt;operator&gt;.subtraction,mid-left)</data>
    </node>
    <node id="1000155">
      <data key="d4">(&lt;operator&gt;.assignment,n2=right-mid)</data>
    </node>
    <node id="1000157">
      <data key="d4">(&lt;operator&gt;.subtraction,right-mid)</data>
    </node>
    <node id="1000160">
      <data key="d4">(&lt;operator&gt;.assignment,L=(int *)malloc(sizeof(int)*(n1+1)))</data>
    </node>
    <node id="1000162">
      <data key="d4">(&lt;operator&gt;.cast,(int *)malloc(sizeof(int)*(n1+1)))</data>
    </node>
    <node id="1000163">
      <data key="d4">(UNKNOWN,int *,int *)</data>
    </node>
    <node id="1000164">
      <data key="d4">(malloc,malloc(sizeof(int)*(n1+1)))</data>
    </node>
    <node id="1000165">
      <data key="d4">(&lt;operator&gt;.multiplication,sizeof(int)*(n1+1))</data>
    </node>
    <node id="1000166">
      <data key="d4">(&lt;operator&gt;.sizeOf,sizeof(int))</data>
    </node>
    <node id="1000168">
      <data key="d4">(&lt;operator&gt;.addition,n1+1)</data>
    </node>
    <node id="1000171">
      <data key="d4">(&lt;operator&gt;.assignment,R=(int *)malloc(sizeof(int)*(n2+1)))</data>
    </node>
    <node id="1000173">
      <data key="d4">(&lt;operator&gt;.cast,(int *)malloc(sizeof(int)*(n2+1)))</data>
    </node>
    <node id="1000174">
      <data key="d4">(UNKNOWN,int *,int *)</data>
    </node>
    <node id="1000175">
      <data key="d4">(malloc,malloc(sizeof(int)*(n2+1)))</data>
    </node>
    <node id="1000176">
      <data key="d4">(&lt;operator&gt;.multiplication,sizeof(int)*(n2+1))</data>
    </node>
    <node id="1000177">
      <data key="d4">(&lt;operator&gt;.sizeOf,sizeof(int))</data>
    </node>
    <node id="1000179">
      <data key="d4">(&lt;operator&gt;.addition,n2+1)</data>
    </node>
    <node id="1000183">
      <data key="d4">(&lt;operator&gt;.assignment,i=0)</data>
    </node>
    <node id="1000186">
      <data key="d4">(&lt;operator&gt;.lessEqualsThan,i&lt;=n1-1)</data>
    </node>
    <node id="1000188">
      <data key="d4">(&lt;operator&gt;.subtraction,n1-1)</data>
    </node>
    <node id="1000191">
      <data key="d4">(&lt;operator&gt;.postIncrement,i++)</data>
    </node>
    <node id="1000194">
      <data key="d4">(&lt;operator&gt;.assignment,L[i]=A[left+i])</data>
    </node>
    <node id="1000195">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,L[i])</data>
    </node>
    <node id="1000198">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,A[left+i])</data>
    </node>
    <node id="1000200">
      <data key="d4">(&lt;operator&gt;.addition,left+i)</data>
    </node>
    <node id="1000204">
      <data key="d4">(&lt;operator&gt;.assignment,j=0)</data>
    </node>
    <node id="1000207">
      <data key="d4">(&lt;operator&gt;.lessEqualsThan,j&lt;=n2-1)</data>
    </node>
    <node id="1000209">
      <data key="d4">(&lt;operator&gt;.subtraction,n2-1)</data>
    </node>
    <node id="1000212">
      <data key="d4">(&lt;operator&gt;.postIncrement,j++)</data>
    </node>
    <node id="1000215">
      <data key="d4">(&lt;operator&gt;.assignment,R[j]=A[mid+j])</data>
    </node>
    <node id="1000216">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,R[j])</data>
    </node>
    <node id="1000219">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,A[mid+j])</data>
    </node>
    <node id="1000221">
      <data key="d4">(&lt;operator&gt;.addition,mid+j)</data>
    </node>
    <node id="1000224">
      <data key="d4">(&lt;operator&gt;.assignment,L[n1]=SENTINEL)</data>
    </node>
    <node id="1000225">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,L[n1])</data>
    </node>
    <node id="1000229">
      <data key="d4">(&lt;operator&gt;.assignment,R[n2]=SENTINEL)</data>
    </node>
    <node id="1000230">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,R[n2])</data>
    </node>
    <node id="1000234">
      <data key="d4">(&lt;operator&gt;.assignment,i=0)</data>
    </node>
    <node id="1000237">
      <data key="d4">(&lt;operator&gt;.assignment,j=0)</data>
    </node>
    <node id="1000241">
      <data key="d4">(&lt;operator&gt;.assignment,k=left)</data>
    </node>
    <node id="1000244">
      <data key="d4">(&lt;operator&gt;.lessEqualsThan,k&lt;=right-1)</data>
    </node>
    <node id="1000246">
      <data key="d4">(&lt;operator&gt;.subtraction,right-1)</data>
    </node>
    <node id="1000249">
      <data key="d4">(&lt;operator&gt;.postIncrement,k++)</data>
    </node>
    <node id="1000253">
      <data key="d4">(&lt;operator&gt;.lessEqualsThan,L[i]&lt;=R[j])</data>
    </node>
    <node id="1000254">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,L[i])</data>
    </node>
    <node id="1000257">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,R[j])</data>
    </node>
    <node id="1000261">
      <data key="d4">(&lt;operator&gt;.assignment,A[k]=L[i])</data>
    </node>
    <node id="1000262">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,A[k])</data>
    </node>
    <node id="1000265">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,L[i])</data>
    </node>
    <node id="1000268">
      <data key="d4">(&lt;operator&gt;.postIncrement,i++)</data>
    </node>
    <node id="1000270">
      <data key="d4">(&lt;operator&gt;.postIncrement,count++)</data>
    </node>
    <node id="1000274">
      <data key="d4">(&lt;operator&gt;.assignment,A[k]=R[j])</data>
    </node>
    <node id="1000275">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,A[k])</data>
    </node>
    <node id="1000278">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,R[j])</data>
    </node>
    <node id="1000281">
      <data key="d4">(&lt;operator&gt;.postIncrement,j++)</data>
    </node>
    <node id="1000283">
      <data key="d4">(&lt;operator&gt;.postIncrement,count++)</data>
    </node>
    <node id="1000285">
      <data key="d4">(free,free(L))</data>
    </node>
    <node id="1000287">
      <data key="d4">(free,free(R))</data>
    </node>
    <node id="1000289">
      <data key="d4">(METHOD_RETURN,void)</data>
    </node>

    <edge source="1000137" target="1000152">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000150" target="1000157">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000152" target="1000150">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000155" target="1000163">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000157" target="1000155">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000160" target="1000174">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000162" target="1000160">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000163" target="1000166">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000164" target="1000162">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000165" target="1000164">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000166" target="1000168">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000168" target="1000165">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000171" target="1000183">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000173" target="1000171">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000174" target="1000177">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000175" target="1000173">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000176" target="1000175">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000177" target="1000179">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000179" target="1000176">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000183" target="1000188">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000186" target="1000195">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000186" target="1000195">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000186" target="1000204">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000188" target="1000186">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000191" target="1000188">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000194" target="1000191">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000195" target="1000200">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000198" target="1000194">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000200" target="1000198">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000204" target="1000209">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000207" target="1000216">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000207" target="1000216">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000207" target="1000225">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000209" target="1000207">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000212" target="1000209">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000215" target="1000212">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000216" target="1000221">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000219" target="1000215">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000221" target="1000219">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000224" target="1000230">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000225" target="1000224">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000229" target="1000234">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000230" target="1000229">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000234" target="1000237">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000237" target="1000241">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000241" target="1000246">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000244" target="1000254">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000244" target="1000254">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000244" target="1000285">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000246" target="1000244">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000249" target="1000246">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000253" target="1000262">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000253" target="1000275">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000254" target="1000257">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000257" target="1000253">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000261" target="1000268">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000262" target="1000265">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000265" target="1000261">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000268" target="1000270">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000270" target="1000249">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000274" target="1000281">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000275" target="1000278">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000278" target="1000274">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000281" target="1000283">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000283" target="1000249">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000285" target="1000287">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000287" target="1000289">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
  </graph>
</graphml>
