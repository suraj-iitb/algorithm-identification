strict digraph "" {
	node [label="\N"];
	0	 [label="0: start"];
	9	 [label="63: if: (__name__ == '__main__')"];
	0 -> 9;
	10	 [label="64: parser = argparse.ArgumentParser(description='Problem 4')"];
	9 -> 10;
	44	 [label="0: stop"];
	9 -> 44;
	1	 [label="6: enter: get_data(dataset, num_train_samples)"];
	3	 [label="7: datasets = ['D1', 'D2']"];
	1 -> 3;
	4	 [label="9: X_train = np.loadtxt(f'data/{dataset}/training_data')"];
	3 -> 4;
	14	 [label="71: (X_train, Y_train, X_test, Y_test) = get_data('D1', num_train_samples)"];
	14 -> 1;
	15	 [label="73: C = (max(np.max(Y_train), np.max(Y_test)) + 1)"];
	14 -> 15	 [style=dotted,
		weight=100];
	16	 [label="74: D = X_train.shape[1]"];
	15 -> 16;
	2	 [label="6: exit: get_data(dataset, num_train_samples)"];
	2 -> 15;
	8	 [label="14: return (X_train[:num_train_samples, :], Y_train[:num_train_samples], X_test, Y_test)"];
	8 -> 2;
	5	 [label="10: Y_train = np.loadtxt(f'data/{dataset}/training_labels', dtype=int)"];
	4 -> 5;
	6	 [label="11: X_test = np.loadtxt(f'data/{dataset}/test_data')"];
	5 -> 6;
	7	 [label="12: Y_test = np.loadtxt(f'data/{dataset}/test_labels', dtype=int)"];
	6 -> 7;
	7 -> 8;
	11	 [label="65: parser.add_argument('--num_samples', type=int, default=(- 1), help='Number of samples to train on')"];
	10 -> 11;
	12	 [label="67: args = parser.parse_args()"];
	11 -> 12;
	13	 [label="69: num_train_samples = args.num_samples"];
	12 -> 13;
	13 -> 14;
	17	 [label="76: perceptron = Perceptron(C, D)"];
	16 -> 17;
	18	 [label="77: perceptron.train(X_train, Y_train)"];
	17 -> 18;
	19	 [label="78: acc = perceptron.eval(X_test, Y_test)"];
	18 -> 19;
	20	 [label="79: test_error = (1 - acc)"];
	19 -> 20;
	21	 [label="80: print(f'Test Accuracy: {acc}')"];
	20 -> 21;
	22	 [label="92: file0 = open('train_num.txt', 'a')"];
	21 -> 22;
	23	 [label="93: file0.write(str(num_train_samples))"];
	22 -> 23;
	24	 [label="94: file0.write(' ')"];
	23 -> 24;
	25	 [label="95: file0.write(str(test_error))"];
	24 -> 25;
	26	 [label="96: file0.write('\n')"];
	25 -> 26;
	27	 [label="97: file0.close()"];
	26 -> 27;
	28	 [label="99: file0 = open('train_num.txt', 'r')"];
	27 -> 28;
	29	 [label="100: x = []"];
	28 -> 29;
	30	 [label="101: y = []"];
	29 -> 30;
	31	 [label="102: for: (True if file0 else False)"];
	30 -> 31;
	32	 [label="102: line = file0.shift()"];
	31 -> 32;
	38	 [label="108: file0.close()"];
	31 -> 38;
	33	 [label="103: fields = line.split(' ')"];
	32 -> 33;
	39	 [label="110: plt.plot(x, y)"];
	38 -> 39;
	37	 [label="107: y.append(field1)"];
	37 -> 31;
	34	 [label="104: field0 = log(int(fields[0]))"];
	33 -> 34;
	35	 [label="105: x.append(field0)"];
	34 -> 35;
	36	 [label="106: field1 = float(fields[1])"];
	35 -> 36;
	36 -> 37;
	40	 [label="111: plt.xlabel('log(Number of training samples)')"];
	39 -> 40;
	41	 [label="112: plt.ylabel('Test Error')"];
	40 -> 41;
	42	 [label="113: plt.title('Error Plot')"];
	41 -> 42;
	43	 [label="114: plt.show()"];
	42 -> 43;
	43 -> 44;
}

