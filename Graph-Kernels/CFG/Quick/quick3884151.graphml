<?xml version="1.0" encoding="UTF-8"?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns
     http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd">

  <!-- Created by Graph::Easy v0.76 at Tue Oct 27 10:38:58 2020 -->

  <key id="d0" for="edge" attr.name="arrowstyle" attr.type="string">
    <default>open</default>
  </key>
  <key id="d1" for="graph" attr.name="colorscheme" attr.type="string">
    <default>w3c</default>
  </key>
  <key id="d2" for="graph" attr.name="flow" attr.type="string">
    <default>east</default>
  </key>
  <key id="d3" for="graph" attr.name="title" attr.type="string">
    <default></default>
  </key>
  <key id="d4" for="node" attr.name="label" attr.type="string"/>
  <key id="d5" for="edge" attr.name="label" attr.type="string"/>
  <key id="d6" for="edge" attr.name="style" attr.type="string">
    <default>solid</default>
  </key>

  <graph id="G" edgedefault="directed">
    <data key="d1">x11</data>
    <data key="d2">south</data>
    <data key="d3">main</data>
    <node id="1000278">
      <data key="d4">(METHOD,main)</data>
    </node>
    <node id="1000284">
      <data key="d4">(scanf,scanf(&quot;%d\n&quot;, &amp;n))</data>
    </node>
    <node id="1000286">
      <data key="d4">(&lt;operator&gt;.addressOf,&amp;n)</data>
    </node>
    <node id="1000288">
      <data key="d4">(&lt;operator&gt;.assignment,A = malloc(sizeof(struct Card) * n))</data>
    </node>
    <node id="1000290">
      <data key="d4">(malloc,malloc(sizeof(struct Card) * n))</data>
    </node>
    <node id="1000291">
      <data key="d4">(&lt;operator&gt;.multiplication,sizeof(struct Card) * n)</data>
    </node>
    <node id="1000292">
      <data key="d4">(&lt;operator&gt;.sizeOf,sizeof(struct Card))</data>
    </node>
    <node id="1000293">
      <data key="d4">(UNKNOWN,struct Card,struct Card)</data>
    </node>
    <node id="1000296">
      <data key="d4">(&lt;operator&gt;.assignment,i = 0)</data>
    </node>
    <node id="1000299">
      <data key="d4">(&lt;operator&gt;.lessThan,i &lt; n)</data>
    </node>
    <node id="1000302">
      <data key="d4">(&lt;operator&gt;.postIncrement,i++)</data>
    </node>
    <node id="1000307">
      <data key="d4">(scanf,scanf(&quot;%s %d&quot;, s, &amp;d))</data>
    </node>
    <node id="1000310">
      <data key="d4">(&lt;operator&gt;.addressOf,&amp;d)</data>
    </node>
    <node id="1000312">
      <data key="d4">(&lt;operator&gt;.assignment,A[i].suit   = s[0])</data>
    </node>
    <node id="1000313">
      <data key="d4">(&lt;operator&gt;.fieldAccess,A[i].suit)</data>
    </node>
    <node id="1000314">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,A[i])</data>
    </node>
    <node id="1000317">
      <data key="d4">(FIELD_IDENTIFIER,suit,suit)</data>
    </node>
    <node id="1000318">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,s[0])</data>
    </node>
    <node id="1000321">
      <data key="d4">(&lt;operator&gt;.assignment,A[i].number = d)</data>
    </node>
    <node id="1000322">
      <data key="d4">(&lt;operator&gt;.fieldAccess,A[i].number)</data>
    </node>
    <node id="1000323">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,A[i])</data>
    </node>
    <node id="1000326">
      <data key="d4">(FIELD_IDENTIFIER,number,number)</data>
    </node>
    <node id="1000328">
      <data key="d4">(&lt;operator&gt;.assignment,A[i].pos    = i)</data>
    </node>
    <node id="1000329">
      <data key="d4">(&lt;operator&gt;.fieldAccess,A[i].pos)</data>
    </node>
    <node id="1000330">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,A[i])</data>
    </node>
    <node id="1000333">
      <data key="d4">(FIELD_IDENTIFIER,pos,pos)</data>
    </node>
    <node id="1000335">
      <data key="d4">(&lt;operator&gt;.cast,(void)fgetc(stdin))</data>
    </node>
    <node id="1000336">
      <data key="d4">(UNKNOWN,void,void)</data>
    </node>
    <node id="1000337">
      <data key="d4">(fgetc,fgetc(stdin))</data>
    </node>
    <node id="1000339">
      <data key="d4">(QuickSort,QuickSort(A, 0, n - 1))</data>
    </node>
    <node id="1000342">
      <data key="d4">(&lt;operator&gt;.subtraction,n - 1)</data>
    </node>
    <node id="1000345">
      <data key="d4">(printf,printf(&quot;%s\n&quot;, IsStable(A, n) ? &quot;Stable&quot;: &quot;Not stable&quot;))</data>
    </node>
    <node id="1000347">
      <data key="d4">(&lt;operator&gt;.conditional,IsStable(A, n) ? &quot;Stable&quot;: &quot;Not stable&quot;)</data>
    </node>
    <node id="1000348">
      <data key="d4">(IsStable,IsStable(A, n))</data>
    </node>
    <node id="1000354">
      <data key="d4">(&lt;operator&gt;.assignment,i = 0)</data>
    </node>
    <node id="1000357">
      <data key="d4">(&lt;operator&gt;.lessThan,i &lt; n)</data>
    </node>
    <node id="1000360">
      <data key="d4">(&lt;operator&gt;.postIncrement,i++)</data>
    </node>
    <node id="1000363">
      <data key="d4">(printf,printf(&quot;%c %d\n&quot;, A[i].suit, A[i].number))</data>
    </node>
    <node id="1000365">
      <data key="d4">(&lt;operator&gt;.fieldAccess,A[i].suit)</data>
    </node>
    <node id="1000366">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,A[i])</data>
    </node>
    <node id="1000369">
      <data key="d4">(FIELD_IDENTIFIER,suit,suit)</data>
    </node>
    <node id="1000370">
      <data key="d4">(&lt;operator&gt;.fieldAccess,A[i].number)</data>
    </node>
    <node id="1000371">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,A[i])</data>
    </node>
    <node id="1000374">
      <data key="d4">(FIELD_IDENTIFIER,number,number)</data>
    </node>
    <node id="1000375">
      <data key="d4">(free,free(A))</data>
    </node>
    <node id="1000377">
      <data key="d4">(RETURN,return 0;,return 0;)</data>
    </node>
    <node id="1000379">
      <data key="d4">(METHOD_RETURN,int)</data>
    </node>

    <edge source="1000278" target="1000286">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000284" target="1000293">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000286" target="1000284">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000288" target="1000296">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000290" target="1000288">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000291" target="1000290">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000292" target="1000291">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000293" target="1000292">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000296" target="1000299">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000299" target="1000310">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000299" target="1000310">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000299" target="1000342">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000302" target="1000299">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000307" target="1000314">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000310" target="1000307">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000312" target="1000323">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000313" target="1000318">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000314" target="1000317">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000317" target="1000313">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000318" target="1000312">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000321" target="1000330">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000322" target="1000321">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000323" target="1000326">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000326" target="1000322">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000328" target="1000336">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000329" target="1000328">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000330" target="1000333">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000333" target="1000329">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000335" target="1000302">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000336" target="1000337">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000337" target="1000335">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000339" target="1000348">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000342" target="1000339">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000345" target="1000354">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000347" target="1000345">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000348" target="1000347">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000348" target="1000347">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000354" target="1000357">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000357" target="1000366">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000357" target="1000366">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000357" target="1000375">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000360" target="1000357">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000363" target="1000360">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000365" target="1000371">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000366" target="1000369">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000369" target="1000365">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000370" target="1000363">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000371" target="1000374">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000374" target="1000370">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000375" target="1000377">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000377" target="1000379">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
  </graph>
</graphml>
