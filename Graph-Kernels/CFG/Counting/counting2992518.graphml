<?xml version="1.0" encoding="UTF-8"?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns
     http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd">

  <!-- Created by Graph::Easy v0.76 at Tue Oct 27 09:28:39 2020 -->

  <key id="d0" for="edge" attr.name="arrowstyle" attr.type="string">
    <default>open</default>
  </key>
  <key id="d1" for="graph" attr.name="colorscheme" attr.type="string">
    <default>w3c</default>
  </key>
  <key id="d2" for="graph" attr.name="flow" attr.type="string">
    <default>east</default>
  </key>
  <key id="d3" for="graph" attr.name="title" attr.type="string">
    <default></default>
  </key>
  <key id="d4" for="node" attr.name="label" attr.type="string"/>
  <key id="d5" for="edge" attr.name="label" attr.type="string"/>
  <key id="d6" for="edge" attr.name="style" attr.type="string">
    <default>solid</default>
  </key>

  <graph id="G" edgedefault="directed">
    <data key="d1">x11</data>
    <data key="d2">south</data>
    <data key="d3">main</data>
    <node id="1000102">
      <data key="d4">(METHOD,main)</data>
    </node>
    <node id="1000109">
      <data key="d4">(scanf,scanf(&quot;%d&quot;,&amp;loop))</data>
    </node>
    <node id="1000111">
      <data key="d4">(&lt;operator&gt;.addressOf,&amp;loop)</data>
    </node>
    <node id="1000113">
      <data key="d4">(&lt;operator&gt;.assignment,Before=malloc(sizeof(int)*loop+1))</data>
    </node>
    <node id="1000115">
      <data key="d4">(malloc,malloc(sizeof(int)*loop+1))</data>
    </node>
    <node id="1000116">
      <data key="d4">(&lt;operator&gt;.addition,sizeof(int)*loop+1)</data>
    </node>
    <node id="1000117">
      <data key="d4">(&lt;operator&gt;.multiplication,sizeof(int)*loop)</data>
    </node>
    <node id="1000118">
      <data key="d4">(&lt;operator&gt;.sizeOf,sizeof(int))</data>
    </node>
    <node id="1000122">
      <data key="d4">(&lt;operator&gt;.assignment,After=malloc(sizeof(int)*loop+1))</data>
    </node>
    <node id="1000124">
      <data key="d4">(malloc,malloc(sizeof(int)*loop+1))</data>
    </node>
    <node id="1000125">
      <data key="d4">(&lt;operator&gt;.addition,sizeof(int)*loop+1)</data>
    </node>
    <node id="1000126">
      <data key="d4">(&lt;operator&gt;.multiplication,sizeof(int)*loop)</data>
    </node>
    <node id="1000127">
      <data key="d4">(&lt;operator&gt;.sizeOf,sizeof(int))</data>
    </node>
    <node id="1000132">
      <data key="d4">(&lt;operator&gt;.assignment,i=0)</data>
    </node>
    <node id="1000135">
      <data key="d4">(&lt;operator&gt;.lessThan,i&lt;N+1)</data>
    </node>
    <node id="1000137">
      <data key="d4">(&lt;operator&gt;.addition,N+1)</data>
    </node>
    <node id="1000140">
      <data key="d4">(&lt;operator&gt;.postIncrement,i++)</data>
    </node>
    <node id="1000143">
      <data key="d4">(&lt;operator&gt;.assignment,Counter[i]=0)</data>
    </node>
    <node id="1000144">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,Counter[i])</data>
    </node>
    <node id="1000149">
      <data key="d4">(&lt;operator&gt;.assignment,i=1)</data>
    </node>
    <node id="1000152">
      <data key="d4">(&lt;operator&gt;.lessThan,i&lt;loop+1)</data>
    </node>
    <node id="1000154">
      <data key="d4">(&lt;operator&gt;.addition,loop+1)</data>
    </node>
    <node id="1000157">
      <data key="d4">(&lt;operator&gt;.postIncrement,i++)</data>
    </node>
    <node id="1000160">
      <data key="d4">(scanf,scanf(&quot; %d&quot;,&amp;Before[i]))</data>
    </node>
    <node id="1000162">
      <data key="d4">(&lt;operator&gt;.addressOf,&amp;Before[i])</data>
    </node>
    <node id="1000163">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,Before[i])</data>
    </node>
    <node id="1000166">
      <data key="d4">(&lt;operator&gt;.postIncrement,Counter[Before[i]]++)</data>
    </node>
    <node id="1000167">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,Counter[Before[i]])</data>
    </node>
    <node id="1000169">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,Before[i])</data>
    </node>
    <node id="1000173">
      <data key="d4">(&lt;operator&gt;.assignment,i=1)</data>
    </node>
    <node id="1000176">
      <data key="d4">(&lt;operator&gt;.lessThan,i&lt;N+1)</data>
    </node>
    <node id="1000178">
      <data key="d4">(&lt;operator&gt;.addition,N+1)</data>
    </node>
    <node id="1000181">
      <data key="d4">(&lt;operator&gt;.postIncrement,i++)</data>
    </node>
    <node id="1000184">
      <data key="d4">(&lt;operator&gt;.assignment,Counter[i]=Counter[i]+Counter[i-1])</data>
    </node>
    <node id="1000185">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,Counter[i])</data>
    </node>
    <node id="1000188">
      <data key="d4">(&lt;operator&gt;.addition,Counter[i]+Counter[i-1])</data>
    </node>
    <node id="1000189">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,Counter[i])</data>
    </node>
    <node id="1000192">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,Counter[i-1])</data>
    </node>
    <node id="1000194">
      <data key="d4">(&lt;operator&gt;.subtraction,i-1)</data>
    </node>
    <node id="1000198">
      <data key="d4">(&lt;operator&gt;.assignment,i=loop)</data>
    </node>
    <node id="1000201">
      <data key="d4">(&lt;operator&gt;.greaterEqualsThan,i&gt;=1)</data>
    </node>
    <node id="1000204">
      <data key="d4">(&lt;operator&gt;.postDecrement,i--)</data>
    </node>
    <node id="1000207">
      <data key="d4">(&lt;operator&gt;.assignment,After[Counter[Before[i]]]=Before[i])</data>
    </node>
    <node id="1000208">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,After[Counter[Before[i]]])</data>
    </node>
    <node id="1000210">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,Counter[Before[i]])</data>
    </node>
    <node id="1000212">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,Before[i])</data>
    </node>
    <node id="1000215">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,Before[i])</data>
    </node>
    <node id="1000218">
      <data key="d4">(&lt;operator&gt;.postDecrement,Counter[Before[i]]--)</data>
    </node>
    <node id="1000219">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,Counter[Before[i]])</data>
    </node>
    <node id="1000221">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,Before[i])</data>
    </node>
    <node id="1000225">
      <data key="d4">(&lt;operator&gt;.assignment,i=1)</data>
    </node>
    <node id="1000228">
      <data key="d4">(&lt;operator&gt;.lessThan,i&lt;loop)</data>
    </node>
    <node id="1000231">
      <data key="d4">(&lt;operator&gt;.postIncrement,i++)</data>
    </node>
    <node id="1000234">
      <data key="d4">(printf,printf(&quot;%d &quot;,After[i]))</data>
    </node>
    <node id="1000236">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,After[i])</data>
    </node>
    <node id="1000239">
      <data key="d4">(printf,printf(&quot;%d\n&quot;,After[loop]))</data>
    </node>
    <node id="1000241">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,After[loop])</data>
    </node>
    <node id="1000244">
      <data key="d4">(RETURN,return 0;,return 0;)</data>
    </node>
    <node id="1000246">
      <data key="d4">(METHOD_RETURN,int)</data>
    </node>

    <edge source="1000102" target="1000111">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000109" target="1000118">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000111" target="1000109">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000113" target="1000127">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000115" target="1000113">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000116" target="1000115">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000117" target="1000116">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000118" target="1000117">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000122" target="1000132">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000124" target="1000122">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000125" target="1000124">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000126" target="1000125">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000127" target="1000126">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000132" target="1000137">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000135" target="1000144">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000135" target="1000144">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000135" target="1000149">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000137" target="1000135">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000140" target="1000137">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000143" target="1000140">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000144" target="1000143">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000149" target="1000154">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000152" target="1000163">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000152" target="1000163">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000152" target="1000173">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000154" target="1000152">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000157" target="1000154">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000160" target="1000169">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000162" target="1000160">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000163" target="1000162">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000166" target="1000157">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000167" target="1000166">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000169" target="1000167">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000173" target="1000178">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000176" target="1000185">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000176" target="1000185">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000176" target="1000198">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000178" target="1000176">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000181" target="1000178">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000184" target="1000181">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000185" target="1000189">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000188" target="1000184">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000189" target="1000194">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000192" target="1000188">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000194" target="1000192">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000198" target="1000201">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000201" target="1000212">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000201" target="1000212">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000201" target="1000225">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000204" target="1000201">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000207" target="1000221">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000208" target="1000215">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000210" target="1000208">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000212" target="1000210">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000215" target="1000207">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000218" target="1000204">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000219" target="1000218">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000221" target="1000219">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000225" target="1000228">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000228" target="1000236">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000228" target="1000236">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000228" target="1000241">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000231" target="1000228">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000234" target="1000231">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000236" target="1000234">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000239" target="1000244">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000241" target="1000239">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000244" target="1000246">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
  </graph>
</graphml>
