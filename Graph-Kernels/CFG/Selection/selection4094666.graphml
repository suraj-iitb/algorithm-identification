<?xml version="1.0" encoding="UTF-8"?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns
     http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd">

  <!-- Created by Graph::Easy v0.76 at Tue Oct 27 09:10:11 2020 -->

  <key id="d0" for="edge" attr.name="arrowstyle" attr.type="string">
    <default>open</default>
  </key>
  <key id="d1" for="graph" attr.name="colorscheme" attr.type="string">
    <default>w3c</default>
  </key>
  <key id="d2" for="graph" attr.name="flow" attr.type="string">
    <default>east</default>
  </key>
  <key id="d3" for="graph" attr.name="title" attr.type="string">
    <default></default>
  </key>
  <key id="d4" for="node" attr.name="label" attr.type="string"/>
  <key id="d5" for="edge" attr.name="label" attr.type="string"/>
  <key id="d6" for="edge" attr.name="style" attr.type="string">
    <default>solid</default>
  </key>

  <graph id="G" edgedefault="directed">
    <data key="d1">x11</data>
    <data key="d2">south</data>
    <data key="d3">main</data>
    <node id="1000102">
      <data key="d4">(METHOD,main)</data>
    </node>
    <node id="1000107">
      <data key="d4">(&lt;operator&gt;.assignment,count = 0)</data>
    </node>
    <node id="1000110">
      <data key="d4">(scanf,scanf(&quot;%d\n&quot;, &amp;n ))</data>
    </node>
    <node id="1000112">
      <data key="d4">(&lt;operator&gt;.addressOf,&amp;n)</data>
    </node>
    <node id="1000115">
      <data key="d4">(&lt;operator&gt;.assignment,*a = ( int * )malloc( n * sizeof( int ) ))</data>
    </node>
    <node id="1000117">
      <data key="d4">(&lt;operator&gt;.cast,( int * )malloc( n * sizeof( int ) ))</data>
    </node>
    <node id="1000118">
      <data key="d4">(UNKNOWN,int *,int *)</data>
    </node>
    <node id="1000119">
      <data key="d4">(malloc,malloc( n * sizeof( int ) ))</data>
    </node>
    <node id="1000120">
      <data key="d4">(&lt;operator&gt;.multiplication,n * sizeof( int ))</data>
    </node>
    <node id="1000122">
      <data key="d4">(&lt;operator&gt;.sizeOf,sizeof( int ))</data>
    </node>
    <node id="1000126">
      <data key="d4">(&lt;operator&gt;.assignment,i = 0)</data>
    </node>
    <node id="1000129">
      <data key="d4">(&lt;operator&gt;.lessThan,i &lt; n)</data>
    </node>
    <node id="1000132">
      <data key="d4">(&lt;operator&gt;.postIncrement,i ++)</data>
    </node>
    <node id="1000134">
      <data key="d4">(scanf,scanf(&quot;%d&quot;, a + i ))</data>
    </node>
    <node id="1000136">
      <data key="d4">(&lt;operator&gt;.addition,a + i)</data>
    </node>
    <node id="1000141">
      <data key="d4">(&lt;operator&gt;.assignment,i = 0)</data>
    </node>
    <node id="1000144">
      <data key="d4">(&lt;operator&gt;.lessThan,i &lt; n)</data>
    </node>
    <node id="1000147">
      <data key="d4">(&lt;operator&gt;.postIncrement,i ++)</data>
    </node>
    <node id="1000151">
      <data key="d4">(&lt;operator&gt;.assignment,mini = i)</data>
    </node>
    <node id="1000156">
      <data key="d4">(&lt;operator&gt;.assignment,j = i + 1)</data>
    </node>
    <node id="1000158">
      <data key="d4">(&lt;operator&gt;.addition,i + 1)</data>
    </node>
    <node id="1000161">
      <data key="d4">(&lt;operator&gt;.lessThan,j &lt; n)</data>
    </node>
    <node id="1000164">
      <data key="d4">(&lt;operator&gt;.postIncrement,j ++)</data>
    </node>
    <node id="1000168">
      <data key="d4">(&lt;operator&gt;.lessThan,a[ j ] &lt; a[ mini ])</data>
    </node>
    <node id="1000169">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,a[ j ])</data>
    </node>
    <node id="1000172">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,a[ mini ])</data>
    </node>
    <node id="1000175">
      <data key="d4">(&lt;operator&gt;.assignment,mini = j)</data>
    </node>
    <node id="1000179">
      <data key="d4">(&lt;operator&gt;.notEquals,i != mini)</data>
    </node>
    <node id="1000184">
      <data key="d4">(&lt;operator&gt;.assignment,tmp = a[ mini ])</data>
    </node>
    <node id="1000186">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,a[ mini ])</data>
    </node>
    <node id="1000189">
      <data key="d4">(&lt;operator&gt;.assignment,a[ mini ] = a[ i ])</data>
    </node>
    <node id="1000190">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,a[ mini ])</data>
    </node>
    <node id="1000193">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,a[ i ])</data>
    </node>
    <node id="1000196">
      <data key="d4">(&lt;operator&gt;.assignment,a[ i ] = tmp)</data>
    </node>
    <node id="1000197">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,a[ i ])</data>
    </node>
    <node id="1000201">
      <data key="d4">(&lt;operator&gt;.postIncrement,count ++)</data>
    </node>
    <node id="1000205">
      <data key="d4">(&lt;operator&gt;.assignment,i = 0)</data>
    </node>
    <node id="1000208">
      <data key="d4">(&lt;operator&gt;.lessThan,i &lt; n - 1)</data>
    </node>
    <node id="1000210">
      <data key="d4">(&lt;operator&gt;.subtraction,n - 1)</data>
    </node>
    <node id="1000213">
      <data key="d4">(&lt;operator&gt;.postIncrement,i ++)</data>
    </node>
    <node id="1000215">
      <data key="d4">(printf,printf(&quot;%d &quot;, a[ i ] ))</data>
    </node>
    <node id="1000217">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,a[ i ])</data>
    </node>
    <node id="1000220">
      <data key="d4">(printf,printf(&quot;%d\n%d\n&quot;, a[ n - 1 ], count ))</data>
    </node>
    <node id="1000222">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,a[ n - 1 ])</data>
    </node>
    <node id="1000224">
      <data key="d4">(&lt;operator&gt;.subtraction,n - 1)</data>
    </node>
    <node id="1000228">
      <data key="d4">(RETURN,return 0;,return 0;)</data>
    </node>
    <node id="1000230">
      <data key="d4">(METHOD_RETURN,int)</data>
    </node>

    <edge source="1000102" target="1000107">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000107" target="1000112">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000110" target="1000118">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000112" target="1000110">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000115" target="1000126">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000117" target="1000115">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000118" target="1000122">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000119" target="1000117">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000120" target="1000119">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000122" target="1000120">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000126" target="1000129">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000129" target="1000136">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000129" target="1000136">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000129" target="1000141">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000132" target="1000129">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000134" target="1000132">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000136" target="1000134">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000141" target="1000144">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000144" target="1000151">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000144" target="1000151">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000144" target="1000205">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000147" target="1000144">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000151" target="1000158">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000156" target="1000161">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000158" target="1000156">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000161" target="1000179">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000161" target="1000169">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000161" target="1000169">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000164" target="1000161">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000168" target="1000164">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000168" target="1000175">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000169" target="1000172">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000172" target="1000168">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000175" target="1000164">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000179" target="1000147">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000179" target="1000186">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000184" target="1000190">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000186" target="1000184">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000189" target="1000197">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000190" target="1000193">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000193" target="1000189">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000196" target="1000201">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000197" target="1000196">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000201" target="1000147">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000205" target="1000210">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000208" target="1000217">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000208" target="1000217">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000208" target="1000224">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000210" target="1000208">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000213" target="1000210">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000215" target="1000213">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000217" target="1000215">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000220" target="1000228">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000222" target="1000220">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000224" target="1000222">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000228" target="1000230">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
  </graph>
</graphml>
