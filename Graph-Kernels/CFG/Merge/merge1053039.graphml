<?xml version="1.0" encoding="UTF-8"?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns
     http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd">

  <!-- Created by Graph::Easy v0.76 at Tue Oct 27 09:57:16 2020 -->

  <key id="d0" for="edge" attr.name="arrowstyle" attr.type="string">
    <default>open</default>
  </key>
  <key id="d1" for="graph" attr.name="colorscheme" attr.type="string">
    <default>w3c</default>
  </key>
  <key id="d2" for="graph" attr.name="flow" attr.type="string">
    <default>east</default>
  </key>
  <key id="d3" for="graph" attr.name="title" attr.type="string">
    <default></default>
  </key>
  <key id="d4" for="node" attr.name="label" attr.type="string"/>
  <key id="d5" for="edge" attr.name="label" attr.type="string"/>
  <key id="d6" for="edge" attr.name="style" attr.type="string">
    <default>solid</default>
  </key>

  <graph id="G" edgedefault="directed">
    <data key="d1">x11</data>
    <data key="d2">south</data>
    <data key="d3">merge</data>
    <node id="1000219">
      <data key="d4">(METHOD,merge)</data>
    </node>
    <node id="1000228">
      <data key="d4">(&lt;operator&gt;.assignment,n_left = mid - begin)</data>
    </node>
    <node id="1000230">
      <data key="d4">(&lt;operator&gt;.subtraction,mid - begin)</data>
    </node>
    <node id="1000234">
      <data key="d4">(&lt;operator&gt;.assignment,n_right = end - mid)</data>
    </node>
    <node id="1000236">
      <data key="d4">(&lt;operator&gt;.subtraction,end - mid)</data>
    </node>
    <node id="1000241">
      <data key="d4">(&lt;operator&gt;.assignment,left = malloc(sizeof(int) * (n_left + 1)))</data>
    </node>
    <node id="1000243">
      <data key="d4">(malloc,malloc(sizeof(int) * (n_left + 1)))</data>
    </node>
    <node id="1000244">
      <data key="d4">(&lt;operator&gt;.multiplication,sizeof(int) * (n_left + 1))</data>
    </node>
    <node id="1000245">
      <data key="d4">(&lt;operator&gt;.sizeOf,sizeof(int))</data>
    </node>
    <node id="1000247">
      <data key="d4">(&lt;operator&gt;.addition,n_left + 1)</data>
    </node>
    <node id="1000250">
      <data key="d4">(&lt;operator&gt;.assignment,right = malloc(sizeof(int) * (n_right + 1)))</data>
    </node>
    <node id="1000252">
      <data key="d4">(malloc,malloc(sizeof(int) * (n_right + 1)))</data>
    </node>
    <node id="1000253">
      <data key="d4">(&lt;operator&gt;.multiplication,sizeof(int) * (n_right + 1))</data>
    </node>
    <node id="1000254">
      <data key="d4">(&lt;operator&gt;.sizeOf,sizeof(int))</data>
    </node>
    <node id="1000256">
      <data key="d4">(&lt;operator&gt;.addition,n_right + 1)</data>
    </node>
    <node id="1000260">
      <data key="d4">(&lt;operator&gt;.logicalOr,left == NULL || right == NULL)</data>
    </node>
    <node id="1000261">
      <data key="d4">(&lt;operator&gt;.equals,left == NULL)</data>
    </node>
    <node id="1000264">
      <data key="d4">(&lt;operator&gt;.equals,right == NULL)</data>
    </node>
    <node id="1000268">
      <data key="d4">(printf,printf(&quot;ERROR! Cannot allocate memory in merge().\n&quot;))</data>
    </node>
    <node id="1000270">
      <data key="d4">(exit,exit(1))</data>
    </node>
    <node id="1000273">
      <data key="d4">(&lt;operator&gt;.assignment,i = 0)</data>
    </node>
    <node id="1000276">
      <data key="d4">(&lt;operator&gt;.lessThan,i &lt; n_left)</data>
    </node>
    <node id="1000279">
      <data key="d4">(&lt;operator&gt;.postIncrement,i++)</data>
    </node>
    <node id="1000282">
      <data key="d4">(&lt;operator&gt;.assignment,left[i] = array[begin + i])</data>
    </node>
    <node id="1000283">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,left[i])</data>
    </node>
    <node id="1000286">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,array[begin + i])</data>
    </node>
    <node id="1000288">
      <data key="d4">(&lt;operator&gt;.addition,begin + i)</data>
    </node>
    <node id="1000291">
      <data key="d4">(&lt;operator&gt;.assignment,left[n_left] = SENTINEL)</data>
    </node>
    <node id="1000292">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,left[n_left])</data>
    </node>
    <node id="1000297">
      <data key="d4">(&lt;operator&gt;.assignment,i = 0)</data>
    </node>
    <node id="1000300">
      <data key="d4">(&lt;operator&gt;.lessThan,i &lt; n_right)</data>
    </node>
    <node id="1000303">
      <data key="d4">(&lt;operator&gt;.postIncrement,i++)</data>
    </node>
    <node id="1000306">
      <data key="d4">(&lt;operator&gt;.assignment,right[i] = array[mid + i])</data>
    </node>
    <node id="1000307">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,right[i])</data>
    </node>
    <node id="1000310">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,array[mid + i])</data>
    </node>
    <node id="1000312">
      <data key="d4">(&lt;operator&gt;.addition,mid + i)</data>
    </node>
    <node id="1000315">
      <data key="d4">(&lt;operator&gt;.assignment,right[n_right] = SENTINEL)</data>
    </node>
    <node id="1000316">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,right[n_right])</data>
    </node>
    <node id="1000320">
      <data key="d4">(&lt;operator&gt;.assignment,i = j = 0)</data>
    </node>
    <node id="1000322">
      <data key="d4">(&lt;operator&gt;.assignment,j = 0)</data>
    </node>
    <node id="1000326">
      <data key="d4">(&lt;operator&gt;.assignment,k = begin)</data>
    </node>
    <node id="1000329">
      <data key="d4">(&lt;operator&gt;.lessThan,k &lt; end)</data>
    </node>
    <node id="1000332">
      <data key="d4">(&lt;operator&gt;.postIncrement,k++)</data>
    </node>
    <node id="1000336">
      <data key="d4">(&lt;operator&gt;.lessEqualsThan,left[i] &lt;= right[j])</data>
    </node>
    <node id="1000337">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,left[i])</data>
    </node>
    <node id="1000340">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,right[j])</data>
    </node>
    <node id="1000344">
      <data key="d4">(&lt;operator&gt;.assignment,array[k] = left[i++])</data>
    </node>
    <node id="1000345">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,array[k])</data>
    </node>
    <node id="1000348">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,left[i++])</data>
    </node>
    <node id="1000350">
      <data key="d4">(&lt;operator&gt;.postIncrement,i++)</data>
    </node>
    <node id="1000354">
      <data key="d4">(&lt;operator&gt;.assignment,array[k] = right[j++])</data>
    </node>
    <node id="1000355">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,array[k])</data>
    </node>
    <node id="1000358">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,right[j++])</data>
    </node>
    <node id="1000360">
      <data key="d4">(&lt;operator&gt;.postIncrement,j++)</data>
    </node>
    <node id="1000362">
      <data key="d4">(&lt;operator&gt;.postIncrement,cnt++)</data>
    </node>
    <node id="1000364">
      <data key="d4">(free,free(left))</data>
    </node>
    <node id="1000366">
      <data key="d4">(free,free(right))</data>
    </node>
    <node id="1000368">
      <data key="d4">(METHOD_RETURN,void)</data>
    </node>

    <edge source="1000219" target="1000230">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000228" target="1000236">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000230" target="1000228">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000234" target="1000245">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000236" target="1000234">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000241" target="1000254">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000243" target="1000241">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000244" target="1000243">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000245" target="1000247">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000247" target="1000244">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000250" target="1000261">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000252" target="1000250">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000253" target="1000252">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000254" target="1000256">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000256" target="1000253">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000260" target="1000268">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000260" target="1000273">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000261" target="1000260">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000261" target="1000264">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000264" target="1000260">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000268" target="1000270">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000270" target="1000273">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000273" target="1000276">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000276" target="1000283">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000276" target="1000283">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000276" target="1000292">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000279" target="1000276">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000282" target="1000279">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000283" target="1000288">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000286" target="1000282">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000288" target="1000286">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000291" target="1000297">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000292" target="1000291">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000297" target="1000300">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000300" target="1000307">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000300" target="1000307">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000300" target="1000316">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000303" target="1000300">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000306" target="1000303">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000307" target="1000312">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000310" target="1000306">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000312" target="1000310">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000315" target="1000322">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000316" target="1000315">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000320" target="1000326">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000322" target="1000320">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000326" target="1000329">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000329" target="1000337">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000329" target="1000337">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000329" target="1000364">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000332" target="1000329">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000336" target="1000345">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000336" target="1000355">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000337" target="1000340">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000340" target="1000336">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000344" target="1000362">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000345" target="1000350">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000348" target="1000344">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000350" target="1000348">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000354" target="1000362">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000355" target="1000360">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000358" target="1000354">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000360" target="1000358">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000362" target="1000332">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000364" target="1000366">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000366" target="1000368">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
  </graph>
</graphml>
