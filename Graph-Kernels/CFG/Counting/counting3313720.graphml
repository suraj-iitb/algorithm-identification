<?xml version="1.0" encoding="UTF-8"?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns
     http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd">

  <!-- Created by Graph::Easy v0.76 at Tue Oct 27 09:48:16 2020 -->

  <key id="d0" for="edge" attr.name="arrowstyle" attr.type="string">
    <default>open</default>
  </key>
  <key id="d1" for="graph" attr.name="colorscheme" attr.type="string">
    <default>w3c</default>
  </key>
  <key id="d2" for="graph" attr.name="flow" attr.type="string">
    <default>east</default>
  </key>
  <key id="d3" for="graph" attr.name="title" attr.type="string">
    <default></default>
  </key>
  <key id="d4" for="node" attr.name="label" attr.type="string"/>
  <key id="d5" for="edge" attr.name="label" attr.type="string"/>
  <key id="d6" for="edge" attr.name="style" attr.type="string">
    <default>solid</default>
  </key>

  <graph id="G" edgedefault="directed">
    <data key="d1">x11</data>
    <data key="d2">south</data>
    <data key="d3">main</data>
    <node id="1000107">
      <data key="d4">(METHOD,main)</data>
    </node>
    <node id="1000118">
      <data key="d4">(&lt;operator&gt;.assignment,count=0)</data>
    </node>
    <node id="1000122">
      <data key="d4">(scanf,scanf(&quot;%d&quot;, &amp;n))</data>
    </node>
    <node id="1000124">
      <data key="d4">(&lt;operator&gt;.addressOf,&amp;n)</data>
    </node>
    <node id="1000127">
      <data key="d4">(&lt;operator&gt;.logicalOr,n&lt;1 || n&gt;=MAX)</data>
    </node>
    <node id="1000128">
      <data key="d4">(&lt;operator&gt;.lessThan,n&lt;1)</data>
    </node>
    <node id="1000131">
      <data key="d4">(&lt;operator&gt;.greaterEqualsThan,n&gt;=MAX)</data>
    </node>
    <node id="1000134">
      <data key="d4">(exit,exit(1))</data>
    </node>
    <node id="1000136">
      <data key="d4">(&lt;operator&gt;.assignment,A = malloc(sizeof(int)*n))</data>
    </node>
    <node id="1000138">
      <data key="d4">(malloc,malloc(sizeof(int)*n))</data>
    </node>
    <node id="1000139">
      <data key="d4">(&lt;operator&gt;.multiplication,sizeof(int)*n)</data>
    </node>
    <node id="1000140">
      <data key="d4">(&lt;operator&gt;.sizeOf,sizeof(int))</data>
    </node>
    <node id="1000143">
      <data key="d4">(&lt;operator&gt;.assignment,C = malloc(sizeof(int)*n))</data>
    </node>
    <node id="1000145">
      <data key="d4">(malloc,malloc(sizeof(int)*n))</data>
    </node>
    <node id="1000146">
      <data key="d4">(&lt;operator&gt;.multiplication,sizeof(int)*n)</data>
    </node>
    <node id="1000147">
      <data key="d4">(&lt;operator&gt;.sizeOf,sizeof(int))</data>
    </node>
    <node id="1000151">
      <data key="d4">(&lt;operator&gt;.assignment,i=0)</data>
    </node>
    <node id="1000154">
      <data key="d4">(&lt;operator&gt;.lessThan,i&lt;n)</data>
    </node>
    <node id="1000157">
      <data key="d4">(&lt;operator&gt;.postIncrement,i++)</data>
    </node>
    <node id="1000160">
      <data key="d4">(scanf,scanf(&quot;%d&quot;, &amp;A[i]))</data>
    </node>
    <node id="1000162">
      <data key="d4">(&lt;operator&gt;.addressOf,&amp;A[i])</data>
    </node>
    <node id="1000163">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,A[i])</data>
    </node>
    <node id="1000167">
      <data key="d4">(&lt;operator&gt;.logicalOr,A[i]&lt;0 || A[i]&gt;VMAX)</data>
    </node>
    <node id="1000168">
      <data key="d4">(&lt;operator&gt;.lessThan,A[i]&lt;0)</data>
    </node>
    <node id="1000169">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,A[i])</data>
    </node>
    <node id="1000173">
      <data key="d4">(&lt;operator&gt;.greaterThan,A[i]&gt;VMAX)</data>
    </node>
    <node id="1000174">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,A[i])</data>
    </node>
    <node id="1000178">
      <data key="d4">(exit,exit(2))</data>
    </node>
    <node id="1000180">
      <data key="d4">(&lt;operator&gt;.assignment,max = A[0])</data>
    </node>
    <node id="1000182">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,A[0])</data>
    </node>
    <node id="1000186">
      <data key="d4">(&lt;operator&gt;.assignment,i=1)</data>
    </node>
    <node id="1000189">
      <data key="d4">(&lt;operator&gt;.lessThan,i&lt;n)</data>
    </node>
    <node id="1000192">
      <data key="d4">(&lt;operator&gt;.postIncrement,i++)</data>
    </node>
    <node id="1000195">
      <data key="d4">(&lt;operator&gt;.lessThan,max &lt; A[i])</data>
    </node>
    <node id="1000197">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,A[i])</data>
    </node>
    <node id="1000200">
      <data key="d4">(&lt;operator&gt;.assignment,max = A[i])</data>
    </node>
    <node id="1000202">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,A[i])</data>
    </node>
    <node id="1000205">
      <data key="d4">(&lt;operator&gt;.assignment,B = malloc( (max+2)*sizeof(int) ))</data>
    </node>
    <node id="1000207">
      <data key="d4">(malloc,malloc( (max+2)*sizeof(int) ))</data>
    </node>
    <node id="1000208">
      <data key="d4">(&lt;operator&gt;.multiplication,(max+2)*sizeof(int))</data>
    </node>
    <node id="1000209">
      <data key="d4">(&lt;operator&gt;.addition,max+2)</data>
    </node>
    <node id="1000212">
      <data key="d4">(&lt;operator&gt;.sizeOf,sizeof(int))</data>
    </node>
    <node id="1000215">
      <data key="d4">(&lt;operator&gt;.assignment,i=0)</data>
    </node>
    <node id="1000218">
      <data key="d4">(&lt;operator&gt;.lessThan,i&lt;n)</data>
    </node>
    <node id="1000221">
      <data key="d4">(&lt;operator&gt;.postIncrement,i++)</data>
    </node>
    <node id="1000223">
      <data key="d4">(&lt;operator&gt;.postIncrement,B[A[i]]++)</data>
    </node>
    <node id="1000224">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,B[A[i]])</data>
    </node>
    <node id="1000226">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,A[i])</data>
    </node>
    <node id="1000230">
      <data key="d4">(&lt;operator&gt;.assignment,i=0)</data>
    </node>
    <node id="1000233">
      <data key="d4">(&lt;operator&gt;.lessEqualsThan,i&lt;=max+1)</data>
    </node>
    <node id="1000235">
      <data key="d4">(&lt;operator&gt;.addition,max+1)</data>
    </node>
    <node id="1000238">
      <data key="d4">(&lt;operator&gt;.postIncrement,i++)</data>
    </node>
    <node id="1000240">
      <data key="d4">(&lt;operator&gt;.assignment,B[i] = B[i] + B[i-1])</data>
    </node>
    <node id="1000241">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,B[i])</data>
    </node>
    <node id="1000244">
      <data key="d4">(&lt;operator&gt;.addition,B[i] + B[i-1])</data>
    </node>
    <node id="1000245">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,B[i])</data>
    </node>
    <node id="1000248">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,B[i-1])</data>
    </node>
    <node id="1000250">
      <data key="d4">(&lt;operator&gt;.subtraction,i-1)</data>
    </node>
    <node id="1000254">
      <data key="d4">(&lt;operator&gt;.assignment,i=n-1)</data>
    </node>
    <node id="1000256">
      <data key="d4">(&lt;operator&gt;.subtraction,n-1)</data>
    </node>
    <node id="1000259">
      <data key="d4">(&lt;operator&gt;.greaterEqualsThan,i&gt;=0)</data>
    </node>
    <node id="1000262">
      <data key="d4">(&lt;operator&gt;.postDecrement,i--)</data>
    </node>
    <node id="1000265">
      <data key="d4">(&lt;operator&gt;.assignment,C[B[A[i]]-1] = A[i])</data>
    </node>
    <node id="1000266">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,C[B[A[i]]-1])</data>
    </node>
    <node id="1000268">
      <data key="d4">(&lt;operator&gt;.subtraction,B[A[i]]-1)</data>
    </node>
    <node id="1000269">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,B[A[i]])</data>
    </node>
    <node id="1000271">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,A[i])</data>
    </node>
    <node id="1000275">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,A[i])</data>
    </node>
    <node id="1000278">
      <data key="d4">(&lt;operator&gt;.postDecrement,B[A[i]]--)</data>
    </node>
    <node id="1000279">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,B[A[i]])</data>
    </node>
    <node id="1000281">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,A[i])</data>
    </node>
    <node id="1000285">
      <data key="d4">(&lt;operator&gt;.assignment,i=0)</data>
    </node>
    <node id="1000288">
      <data key="d4">(&lt;operator&gt;.lessThan,i&lt;n)</data>
    </node>
    <node id="1000291">
      <data key="d4">(&lt;operator&gt;.postIncrement,i++)</data>
    </node>
    <node id="1000294">
      <data key="d4">(printf,printf(&quot;%d&quot;,C[i]))</data>
    </node>
    <node id="1000296">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,C[i])</data>
    </node>
    <node id="1000300">
      <data key="d4">(&lt;operator&gt;.lessThan,i&lt;n-1)</data>
    </node>
    <node id="1000302">
      <data key="d4">(&lt;operator&gt;.subtraction,n-1)</data>
    </node>
    <node id="1000305">
      <data key="d4">(printf,printf(&quot; &quot;))</data>
    </node>
    <node id="1000307">
      <data key="d4">(printf,printf(&quot;\n&quot;))</data>
    </node>
    <node id="1000309">
      <data key="d4">(RETURN,return 0;,return 0;)</data>
    </node>
    <node id="1000311">
      <data key="d4">(METHOD_RETURN,int)</data>
    </node>

    <edge source="1000107" target="1000118">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000118" target="1000124">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000122" target="1000128">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000124" target="1000122">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000127" target="1000134">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000127" target="1000140">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000128" target="1000127">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000128" target="1000131">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000131" target="1000127">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000134" target="1000140">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000136" target="1000147">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000138" target="1000136">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000139" target="1000138">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000140" target="1000139">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000143" target="1000151">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000145" target="1000143">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000146" target="1000145">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000147" target="1000146">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000151" target="1000154">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000154" target="1000163">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000154" target="1000163">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000154" target="1000182">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000157" target="1000154">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000160" target="1000169">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000162" target="1000160">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000163" target="1000162">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000167" target="1000157">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000167" target="1000178">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000168" target="1000167">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000168" target="1000174">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000169" target="1000168">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000173" target="1000167">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000174" target="1000173">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000178" target="1000157">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000180" target="1000186">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000182" target="1000180">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000186" target="1000189">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000189" target="1000197">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000189" target="1000197">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000189" target="1000209">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000192" target="1000189">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000195" target="1000192">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000195" target="1000202">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000197" target="1000195">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000200" target="1000192">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000202" target="1000200">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000205" target="1000215">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000207" target="1000205">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000208" target="1000207">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000209" target="1000212">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000212" target="1000208">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000215" target="1000218">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000218" target="1000226">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000218" target="1000226">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000218" target="1000230">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000221" target="1000218">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000223" target="1000221">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000224" target="1000223">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000226" target="1000224">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000230" target="1000235">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000233" target="1000241">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000233" target="1000241">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000233" target="1000256">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000235" target="1000233">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000238" target="1000235">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000240" target="1000238">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000241" target="1000245">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000244" target="1000240">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000245" target="1000250">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000248" target="1000244">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000250" target="1000248">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000254" target="1000259">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000256" target="1000254">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000259" target="1000271">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000259" target="1000271">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000259" target="1000285">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000262" target="1000259">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000265" target="1000281">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000266" target="1000275">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000268" target="1000266">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000269" target="1000268">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000271" target="1000269">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000275" target="1000265">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000278" target="1000262">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000279" target="1000278">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000281" target="1000279">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000285" target="1000288">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000288" target="1000296">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000288" target="1000296">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000288" target="1000307">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000291" target="1000288">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000294" target="1000302">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000296" target="1000294">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000300" target="1000291">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000300" target="1000305">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000302" target="1000300">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000305" target="1000291">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000307" target="1000309">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000309" target="1000311">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
  </graph>
</graphml>
