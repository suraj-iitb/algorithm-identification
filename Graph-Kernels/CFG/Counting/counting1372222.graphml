<?xml version="1.0" encoding="UTF-8"?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns
     http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd">

  <!-- Created by Graph::Easy v0.76 at Tue Oct 27 12:10:21 2020 -->

  <key id="d0" for="edge" attr.name="arrowstyle" attr.type="string">
    <default>open</default>
  </key>
  <key id="d1" for="graph" attr.name="colorscheme" attr.type="string">
    <default>w3c</default>
  </key>
  <key id="d2" for="graph" attr.name="flow" attr.type="string">
    <default>east</default>
  </key>
  <key id="d3" for="graph" attr.name="title" attr.type="string">
    <default></default>
  </key>
  <key id="d4" for="node" attr.name="label" attr.type="string"/>
  <key id="d5" for="edge" attr.name="label" attr.type="string"/>
  <key id="d6" for="edge" attr.name="style" attr.type="string">
    <default>solid</default>
  </key>

  <graph id="G" edgedefault="directed">
    <data key="d1">x11</data>
    <data key="d2">south</data>
    <data key="d3">main</data>
    <node id="1000102">
      <data key="d4">(METHOD,main)</data>
    </node>
    <node id="1000109">
      <data key="d4">(scanf,scanf(&quot;%d&quot;, &amp;n))</data>
    </node>
    <node id="1000111">
      <data key="d4">(&lt;operator&gt;.addressOf,&amp;n)</data>
    </node>
    <node id="1000113">
      <data key="d4">(&lt;operator&gt;.assignment,a = (int *)malloc(sizeof(int) * n))</data>
    </node>
    <node id="1000115">
      <data key="d4">(&lt;operator&gt;.cast,(int *)malloc(sizeof(int) * n))</data>
    </node>
    <node id="1000116">
      <data key="d4">(UNKNOWN,int *,int *)</data>
    </node>
    <node id="1000117">
      <data key="d4">(malloc,malloc(sizeof(int) * n))</data>
    </node>
    <node id="1000118">
      <data key="d4">(&lt;operator&gt;.multiplication,sizeof(int) * n)</data>
    </node>
    <node id="1000119">
      <data key="d4">(&lt;operator&gt;.sizeOf,sizeof(int))</data>
    </node>
    <node id="1000123">
      <data key="d4">(&lt;operator&gt;.equals,a == NULL)</data>
    </node>
    <node id="1000127">
      <data key="d4">(printf,printf(&quot;An error has occurred.\n&quot;))</data>
    </node>
    <node id="1000129">
      <data key="d4">(RETURN,return -1;,return -1;)</data>
    </node>
    <node id="1000130">
      <data key="d4">(&lt;operator&gt;.minus,-1)</data>
    </node>
    <node id="1000132">
      <data key="d4">(&lt;operator&gt;.assignment,b = (int *)malloc(sizeof(int) * n))</data>
    </node>
    <node id="1000134">
      <data key="d4">(&lt;operator&gt;.cast,(int *)malloc(sizeof(int) * n))</data>
    </node>
    <node id="1000135">
      <data key="d4">(UNKNOWN,int *,int *)</data>
    </node>
    <node id="1000136">
      <data key="d4">(malloc,malloc(sizeof(int) * n))</data>
    </node>
    <node id="1000137">
      <data key="d4">(&lt;operator&gt;.multiplication,sizeof(int) * n)</data>
    </node>
    <node id="1000138">
      <data key="d4">(&lt;operator&gt;.sizeOf,sizeof(int))</data>
    </node>
    <node id="1000142">
      <data key="d4">(&lt;operator&gt;.equals,a == NULL)</data>
    </node>
    <node id="1000146">
      <data key="d4">(printf,printf(&quot;An error has occurred.\n&quot;))</data>
    </node>
    <node id="1000148">
      <data key="d4">(RETURN,return -1;,return -1;)</data>
    </node>
    <node id="1000149">
      <data key="d4">(&lt;operator&gt;.minus,-1)</data>
    </node>
    <node id="1000152">
      <data key="d4">(&lt;operator&gt;.assignment,i = 0)</data>
    </node>
    <node id="1000155">
      <data key="d4">(&lt;operator&gt;.lessThan,i &lt; n)</data>
    </node>
    <node id="1000158">
      <data key="d4">(&lt;operator&gt;.postIncrement,i++)</data>
    </node>
    <node id="1000160">
      <data key="d4">(scanf,scanf(&quot;%d&quot;, &amp;a[i]))</data>
    </node>
    <node id="1000162">
      <data key="d4">(&lt;operator&gt;.addressOf,&amp;a[i])</data>
    </node>
    <node id="1000163">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,a[i])</data>
    </node>
    <node id="1000167">
      <data key="d4">(&lt;operator&gt;.assignment,i = 0)</data>
    </node>
    <node id="1000170">
      <data key="d4">(&lt;operator&gt;.lessThan,i &lt; K)</data>
    </node>
    <node id="1000173">
      <data key="d4">(&lt;operator&gt;.postIncrement,i++)</data>
    </node>
    <node id="1000175">
      <data key="d4">(&lt;operator&gt;.assignment,c[i] = 0)</data>
    </node>
    <node id="1000176">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,c[i])</data>
    </node>
    <node id="1000181">
      <data key="d4">(&lt;operator&gt;.assignment,i = 0)</data>
    </node>
    <node id="1000184">
      <data key="d4">(&lt;operator&gt;.lessThan,i &lt; n)</data>
    </node>
    <node id="1000187">
      <data key="d4">(&lt;operator&gt;.postIncrement,i++)</data>
    </node>
    <node id="1000189">
      <data key="d4">(&lt;operator&gt;.postIncrement,c[ a[i] ]++)</data>
    </node>
    <node id="1000190">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,c[ a[i] ])</data>
    </node>
    <node id="1000192">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,a[i])</data>
    </node>
    <node id="1000196">
      <data key="d4">(&lt;operator&gt;.assignment,i = 1)</data>
    </node>
    <node id="1000199">
      <data key="d4">(&lt;operator&gt;.lessThan,i &lt; K)</data>
    </node>
    <node id="1000202">
      <data key="d4">(&lt;operator&gt;.postIncrement,i++)</data>
    </node>
    <node id="1000204">
      <data key="d4">(&lt;operator&gt;.assignment,c[i] = c[i] + c[i - 1])</data>
    </node>
    <node id="1000205">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,c[i])</data>
    </node>
    <node id="1000208">
      <data key="d4">(&lt;operator&gt;.addition,c[i] + c[i - 1])</data>
    </node>
    <node id="1000209">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,c[i])</data>
    </node>
    <node id="1000212">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,c[i - 1])</data>
    </node>
    <node id="1000214">
      <data key="d4">(&lt;operator&gt;.subtraction,i - 1)</data>
    </node>
    <node id="1000218">
      <data key="d4">(&lt;operator&gt;.assignment,i = n - 1)</data>
    </node>
    <node id="1000220">
      <data key="d4">(&lt;operator&gt;.subtraction,n - 1)</data>
    </node>
    <node id="1000223">
      <data key="d4">(&lt;operator&gt;.greaterThan,i &gt; -1)</data>
    </node>
    <node id="1000225">
      <data key="d4">(&lt;operator&gt;.minus,-1)</data>
    </node>
    <node id="1000227">
      <data key="d4">(&lt;operator&gt;.postDecrement,i--)</data>
    </node>
    <node id="1000230">
      <data key="d4">(&lt;operator&gt;.assignment,b[ c[ a[i] ] - 1] = a[i])</data>
    </node>
    <node id="1000231">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,b[ c[ a[i] ] - 1])</data>
    </node>
    <node id="1000233">
      <data key="d4">(&lt;operator&gt;.subtraction,c[ a[i] ] - 1)</data>
    </node>
    <node id="1000234">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,c[ a[i] ])</data>
    </node>
    <node id="1000236">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,a[i])</data>
    </node>
    <node id="1000240">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,a[i])</data>
    </node>
    <node id="1000243">
      <data key="d4">(&lt;operator&gt;.postDecrement,c[ a[i] ]--)</data>
    </node>
    <node id="1000244">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,c[ a[i] ])</data>
    </node>
    <node id="1000246">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,a[i])</data>
    </node>
    <node id="1000250">
      <data key="d4">(&lt;operator&gt;.assignment,i = 0)</data>
    </node>
    <node id="1000253">
      <data key="d4">(&lt;operator&gt;.lessThan,i &lt; n - 1)</data>
    </node>
    <node id="1000255">
      <data key="d4">(&lt;operator&gt;.subtraction,n - 1)</data>
    </node>
    <node id="1000258">
      <data key="d4">(&lt;operator&gt;.postIncrement,i++)</data>
    </node>
    <node id="1000260">
      <data key="d4">(printf,printf(&quot;%d &quot;, b[i]))</data>
    </node>
    <node id="1000262">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,b[i])</data>
    </node>
    <node id="1000265">
      <data key="d4">(printf,printf(&quot;%d\n&quot;, b[n - 1]))</data>
    </node>
    <node id="1000267">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,b[n - 1])</data>
    </node>
    <node id="1000269">
      <data key="d4">(&lt;operator&gt;.subtraction,n - 1)</data>
    </node>
    <node id="1000272">
      <data key="d4">(free,free(a))</data>
    </node>
    <node id="1000274">
      <data key="d4">(free,free(b))</data>
    </node>
    <node id="1000276">
      <data key="d4">(RETURN,return 0;,return 0;)</data>
    </node>
    <node id="1000278">
      <data key="d4">(METHOD_RETURN,int)</data>
    </node>

    <edge source="1000102" target="1000111">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000109" target="1000116">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000111" target="1000109">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000113" target="1000123">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000115" target="1000113">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000116" target="1000119">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000117" target="1000115">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000118" target="1000117">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000119" target="1000118">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000123" target="1000127">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000123" target="1000135">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000127" target="1000130">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000129" target="1000278">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000130" target="1000129">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000132" target="1000142">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000134" target="1000132">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000135" target="1000138">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000136" target="1000134">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000137" target="1000136">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000138" target="1000137">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000142" target="1000146">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000142" target="1000152">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000146" target="1000149">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000148" target="1000278">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000149" target="1000148">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000152" target="1000155">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000155" target="1000163">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000155" target="1000163">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000155" target="1000167">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000158" target="1000155">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000160" target="1000158">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000162" target="1000160">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000163" target="1000162">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000167" target="1000170">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000170" target="1000176">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000170" target="1000176">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000170" target="1000181">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000173" target="1000170">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000175" target="1000173">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000176" target="1000175">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000181" target="1000184">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000184" target="1000192">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000184" target="1000192">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000184" target="1000196">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000187" target="1000184">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000189" target="1000187">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000190" target="1000189">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000192" target="1000190">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000196" target="1000199">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000199" target="1000205">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000199" target="1000205">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000199" target="1000220">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000202" target="1000199">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000204" target="1000202">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000205" target="1000209">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000208" target="1000204">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000209" target="1000214">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000212" target="1000208">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000214" target="1000212">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000218" target="1000225">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000220" target="1000218">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000223" target="1000236">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000223" target="1000236">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000223" target="1000250">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000225" target="1000223">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000227" target="1000225">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000230" target="1000246">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000231" target="1000240">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000233" target="1000231">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000234" target="1000233">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000236" target="1000234">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000240" target="1000230">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000243" target="1000227">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000244" target="1000243">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000246" target="1000244">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000250" target="1000255">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000253" target="1000262">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000253" target="1000262">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000253" target="1000269">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000255" target="1000253">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000258" target="1000255">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000260" target="1000258">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000262" target="1000260">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000265" target="1000272">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000267" target="1000265">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000269" target="1000267">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000272" target="1000274">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000274" target="1000276">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000276" target="1000278">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
  </graph>
</graphml>
