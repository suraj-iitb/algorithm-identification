<?xml version="1.0" encoding="UTF-8"?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns
     http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd">

  <!-- Created by Graph::Easy v0.76 at Tue Jun  8 22:04:44 2021 -->

  <key id="d0" for="edge" attr.name="arrowstyle" attr.type="string">
    <default>open</default>
  </key>
  <key id="d1" for="graph" attr.name="colorscheme" attr.type="string">
    <default>w3c</default>
  </key>
  <key id="d2" for="graph" attr.name="flow" attr.type="string">
    <default>east</default>
  </key>
  <key id="d3" for="graph" attr.name="title" attr.type="string">
    <default></default>
  </key>
  <key id="d4" for="node" attr.name="label" attr.type="string"/>
  <key id="d5" for="edge" attr.name="label" attr.type="string"/>
  <key id="d6" for="edge" attr.name="style" attr.type="string">
    <default>solid</default>
  </key>

  <graph id="G" edgedefault="directed">
    <data key="d1">x11</data>
    <data key="d2">south</data>
    <data key="d3">BFS</data>
    <node id="1000198">
      <data key="d4">(METHOD,BFS)</data>
    </node>
    <node id="1000204">
      <data key="d4">(&lt;operator&gt;.assignment,u = 0)</data>
    </node>
    <node id="1000207">
      <data key="d4">(&lt;operator&gt;.lessThan,u &lt; n)</data>
    </node>
    <node id="1000210">
      <data key="d4">(&lt;operator&gt;.postIncrement,u++)</data>
    </node>
    <node id="1000213">
      <data key="d4">(&lt;operator&gt;.assignment,color[u] = WHITE)</data>
    </node>
    <node id="1000214">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,color[u])</data>
    </node>
    <node id="1000218">
      <data key="d4">(&lt;operator&gt;.assignment,d[u] = -1)</data>
    </node>
    <node id="1000219">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,d[u])</data>
    </node>
    <node id="1000222">
      <data key="d4">(&lt;operator&gt;.minus,-1)</data>
    </node>
    <node id="1000224">
      <data key="d4">(&lt;operator&gt;.assignment,color[x] = GRAY)</data>
    </node>
    <node id="1000225">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,color[x])</data>
    </node>
    <node id="1000229">
      <data key="d4">(&lt;operator&gt;.assignment,d[x] = 0)</data>
    </node>
    <node id="1000230">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,d[x])</data>
    </node>
    <node id="1000234">
      <data key="d4">(enqueue,enqueue(x))</data>
    </node>
    <node id="1000237">
      <data key="d4">(&lt;operator&gt;.notEquals,head != tail)</data>
    </node>
    <node id="1000241">
      <data key="d4">(&lt;operator&gt;.assignment,u = dequeue())</data>
    </node>
    <node id="1000243">
      <data key="d4">(dequeue,dequeue())</data>
    </node>
    <node id="1000245">
      <data key="d4">(&lt;operator&gt;.assignment,v = 0)</data>
    </node>
    <node id="1000248">
      <data key="d4">(&lt;operator&gt;.lessThan,v &lt; n)</data>
    </node>
    <node id="1000251">
      <data key="d4">(&lt;operator&gt;.postIncrement,v++)</data>
    </node>
    <node id="1000255">
      <data key="d4">(&lt;operator&gt;.logicalAnd,A[u][v] == 1 &amp;&amp; color[v] == WHITE)</data>
    </node>
    <node id="1000256">
      <data key="d4">(&lt;operator&gt;.equals,A[u][v] == 1)</data>
    </node>
    <node id="1000257">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,A[u][v])</data>
    </node>
    <node id="1000258">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,A[u])</data>
    </node>
    <node id="1000263">
      <data key="d4">(&lt;operator&gt;.equals,color[v] == WHITE)</data>
    </node>
    <node id="1000264">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,color[v])</data>
    </node>
    <node id="1000269">
      <data key="d4">(&lt;operator&gt;.assignment,color[v] = GRAY)</data>
    </node>
    <node id="1000270">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,color[v])</data>
    </node>
    <node id="1000274">
      <data key="d4">(&lt;operator&gt;.assignment,d[v] = d[u]+1)</data>
    </node>
    <node id="1000275">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,d[v])</data>
    </node>
    <node id="1000278">
      <data key="d4">(&lt;operator&gt;.addition,d[u]+1)</data>
    </node>
    <node id="1000279">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,d[u])</data>
    </node>
    <node id="1000283">
      <data key="d4">(enqueue,enqueue(v))</data>
    </node>
    <node id="1000285">
      <data key="d4">(&lt;operator&gt;.assignment,color[u] = BLACK)</data>
    </node>
    <node id="1000286">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,color[u])</data>
    </node>
    <node id="1000291">
      <data key="d4">(&lt;operator&gt;.assignment,u = 0)</data>
    </node>
    <node id="1000294">
      <data key="d4">(&lt;operator&gt;.lessThan,u &lt; n)</data>
    </node>
    <node id="1000297">
      <data key="d4">(&lt;operator&gt;.postIncrement,u++)</data>
    </node>
    <node id="1000300">
      <data key="d4">(printf,printf(&quot;%d %d\n&quot;,u+1,d[u]))</data>
    </node>
    <node id="1000302">
      <data key="d4">(&lt;operator&gt;.addition,u+1)</data>
    </node>
    <node id="1000305">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,d[u])</data>
    </node>
    <node id="1000308">
      <data key="d4">(METHOD_RETURN,void)</data>
    </node>

    <edge source="1000198" target="1000204">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000204" target="1000207">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000207" target="1000214">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000207" target="1000214">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000207" target="1000225">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000210" target="1000207">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000213" target="1000219">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000214" target="1000213">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000218" target="1000210">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000219" target="1000222">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000222" target="1000218">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000224" target="1000230">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000225" target="1000224">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000229" target="1000234">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000230" target="1000229">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000234" target="1000237">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000237" target="1000243">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000237" target="1000291">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000241" target="1000245">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000243" target="1000241">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000245" target="1000248">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000248" target="1000258">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000248" target="1000258">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000248" target="1000286">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000251" target="1000248">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000255" target="1000251">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000255" target="1000270">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000256" target="1000255">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000256" target="1000264">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000257" target="1000256">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000258" target="1000257">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000263" target="1000255">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000264" target="1000263">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000269" target="1000275">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000270" target="1000269">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000274" target="1000283">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000275" target="1000279">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000278" target="1000274">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000279" target="1000278">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000283" target="1000251">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000285" target="1000237">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000286" target="1000285">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000291" target="1000294">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000294" target="1000302">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000294" target="1000302">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000294" target="1000308">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000297" target="1000294">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000300" target="1000297">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000302" target="1000305">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000305" target="1000300">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
  </graph>
</graphml>
