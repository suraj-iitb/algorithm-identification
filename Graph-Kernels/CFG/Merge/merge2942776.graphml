<?xml version="1.0" encoding="UTF-8"?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns
     http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd">

  <!-- Created by Graph::Easy v0.76 at Tue Oct 27 10:14:48 2020 -->

  <key id="d0" for="edge" attr.name="arrowstyle" attr.type="string">
    <default>open</default>
  </key>
  <key id="d1" for="graph" attr.name="colorscheme" attr.type="string">
    <default>w3c</default>
  </key>
  <key id="d2" for="graph" attr.name="flow" attr.type="string">
    <default>east</default>
  </key>
  <key id="d3" for="graph" attr.name="title" attr.type="string">
    <default></default>
  </key>
  <key id="d4" for="node" attr.name="label" attr.type="string"/>
  <key id="d5" for="edge" attr.name="label" attr.type="string"/>
  <key id="d6" for="edge" attr.name="style" attr.type="string">
    <default>solid</default>
  </key>

  <graph id="G" edgedefault="directed">
    <data key="d1">x11</data>
    <data key="d2">south</data>
    <data key="d3">put_uint</data>
    <node id="1000102">
      <data key="d4">(METHOD,put_uint)</data>
    </node>
    <node id="1000106">
      <data key="d4">(&lt;operator&gt;.logicalNot,!n)</data>
    </node>
    <node id="1000109">
      <data key="d4">(putchar_unlocked,putchar_unlocked(&apos;0&apos;))</data>
    </node>
    <node id="1000111">
      <data key="d4">(RETURN,return;,return;)</data>
    </node>
    <node id="1000114">
      <data key="d4">(&lt;operator&gt;.assignment,i = 0)</data>
    </node>
    <node id="1000120">
      <data key="d4">(&lt;operator&gt;.assignment,buf[i++] = (char)(n 0 + &apos;0&apos;))</data>
    </node>
    <node id="1000121">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,buf[i++])</data>
    </node>
    <node id="1000123">
      <data key="d4">(&lt;operator&gt;.postIncrement,i++)</data>
    </node>
    <node id="1000125">
      <data key="d4">(&lt;operator&gt;.cast,(char)(n 0 + &apos;0&apos;))</data>
    </node>
    <node id="1000126">
      <data key="d4">(UNKNOWN,char,char)</data>
    </node>
    <node id="1000127">
      <data key="d4">(&lt;operator&gt;.addition,n 0 + &apos;0&apos;)</data>
    </node>
    <node id="1000128">
      <data key="d4">(&lt;operator&gt;.modulo,n 0)</data>
    </node>
    <node id="1000132">
      <data key="d4">(&lt;operator&gt;.assignmentDivision,n /= 10)</data>
    </node>
    <node id="1000136">
      <data key="d4">(&lt;operator&gt;.postDecrement,i--)</data>
    </node>
    <node id="1000138">
      <data key="d4">(putchar_unlocked,putchar_unlocked(buf[i]))</data>
    </node>
    <node id="1000139">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,buf[i])</data>
    </node>
    <node id="1000142">
      <data key="d4">(METHOD_RETURN,void)</data>
    </node>

    <edge source="1000102" target="1000106">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000106" target="1000114">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000106" target="1000109">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000109" target="1000111">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000111" target="1000142">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000114" target="1000136">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000114" target="1000123">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000120" target="1000132">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000121" target="1000126">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000123" target="1000121">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000125" target="1000120">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000126" target="1000128">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000127" target="1000125">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000128" target="1000127">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000132" target="1000136">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000132" target="1000123">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000136" target="1000139">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000136" target="1000142">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000138" target="1000136">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000139" target="1000138">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
  </graph>
</graphml>
