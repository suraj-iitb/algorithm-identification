<?xml version="1.0" encoding="UTF-8"?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns
     http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd">

  <!-- Created by Graph::Easy v0.76 at Tue Oct 27 09:52:18 2020 -->

  <key id="d0" for="edge" attr.name="arrowstyle" attr.type="string">
    <default>open</default>
  </key>
  <key id="d1" for="graph" attr.name="colorscheme" attr.type="string">
    <default>w3c</default>
  </key>
  <key id="d2" for="graph" attr.name="flow" attr.type="string">
    <default>east</default>
  </key>
  <key id="d3" for="graph" attr.name="title" attr.type="string">
    <default></default>
  </key>
  <key id="d4" for="node" attr.name="label" attr.type="string"/>
  <key id="d5" for="edge" attr.name="label" attr.type="string"/>
  <key id="d6" for="edge" attr.name="style" attr.type="string">
    <default>solid</default>
  </key>

  <graph id="G" edgedefault="directed">
    <data key="d1">x11</data>
    <data key="d2">south</data>
    <data key="d3">main</data>
    <node id="1000197">
      <data key="d4">(METHOD,main)</data>
    </node>
    <node id="1000205">
      <data key="d4">(&lt;operator&gt;.assignment,max_n=0)</data>
    </node>
    <node id="1000208">
      <data key="d4">(scanf,scanf(&quot;%d&quot;,&amp;n))</data>
    </node>
    <node id="1000210">
      <data key="d4">(&lt;operator&gt;.addressOf,&amp;n)</data>
    </node>
    <node id="1000212">
      <data key="d4">(&lt;operator&gt;.assignment,x=calloc(n,sizeof(int)))</data>
    </node>
    <node id="1000214">
      <data key="d4">(calloc,calloc(n,sizeof(int)))</data>
    </node>
    <node id="1000216">
      <data key="d4">(&lt;operator&gt;.sizeOf,sizeof(int))</data>
    </node>
    <node id="1000218">
      <data key="d4">(&lt;operator&gt;.assignment,y=calloc(n+1, sizeof(int)))</data>
    </node>
    <node id="1000220">
      <data key="d4">(calloc,calloc(n+1, sizeof(int)))</data>
    </node>
    <node id="1000221">
      <data key="d4">(&lt;operator&gt;.addition,n+1)</data>
    </node>
    <node id="1000224">
      <data key="d4">(&lt;operator&gt;.sizeOf,sizeof(int))</data>
    </node>
    <node id="1000227">
      <data key="d4">(&lt;operator&gt;.assignment,i=0)</data>
    </node>
    <node id="1000230">
      <data key="d4">(&lt;operator&gt;.lessThan,i&lt;n)</data>
    </node>
    <node id="1000233">
      <data key="d4">(&lt;operator&gt;.postIncrement,i++)</data>
    </node>
    <node id="1000236">
      <data key="d4">(scanf,scanf(&quot;%d&quot;,&amp;x[i]))</data>
    </node>
    <node id="1000238">
      <data key="d4">(&lt;operator&gt;.addressOf,&amp;x[i])</data>
    </node>
    <node id="1000239">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,x[i])</data>
    </node>
    <node id="1000242">
      <data key="d4">(&lt;operator&gt;.assignment,max_n=max(max_n,x[i]))</data>
    </node>
    <node id="1000244">
      <data key="d4">(max,max(max_n,x[i]))</data>
    </node>
    <node id="1000246">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,x[i])</data>
    </node>
    <node id="1000249">
      <data key="d4">(CountingSort,CountingSort(x,y,max_n, n))</data>
    </node>
    <node id="1000255">
      <data key="d4">(&lt;operator&gt;.assignment,i=1)</data>
    </node>
    <node id="1000258">
      <data key="d4">(&lt;operator&gt;.lessThan,i&lt;n)</data>
    </node>
    <node id="1000261">
      <data key="d4">(&lt;operator&gt;.postIncrement,i++)</data>
    </node>
    <node id="1000263">
      <data key="d4">(printf,printf(&quot;%d &quot;, y[i]))</data>
    </node>
    <node id="1000265">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,y[i])</data>
    </node>
    <node id="1000268">
      <data key="d4">(printf,printf(&quot;%d&quot;, y[i]))</data>
    </node>
    <node id="1000270">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,y[i])</data>
    </node>
    <node id="1000273">
      <data key="d4">(printf,printf(&quot;\n&quot;))</data>
    </node>
    <node id="1000275">
      <data key="d4">(METHOD_RETURN,int)</data>
    </node>

    <edge source="1000197" target="1000205">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000205" target="1000210">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000208" target="1000216">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000210" target="1000208">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000212" target="1000221">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000214" target="1000212">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000216" target="1000214">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000218" target="1000227">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000220" target="1000218">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000221" target="1000224">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000224" target="1000220">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000227" target="1000230">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000230" target="1000239">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000230" target="1000239">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000230" target="1000249">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000233" target="1000230">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000236" target="1000246">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000238" target="1000236">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000239" target="1000238">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000242" target="1000233">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000244" target="1000242">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000246" target="1000244">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000249" target="1000255">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000255" target="1000258">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000258" target="1000265">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000258" target="1000265">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000258" target="1000270">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000261" target="1000258">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000263" target="1000261">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000265" target="1000263">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000268" target="1000273">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000270" target="1000268">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000273" target="1000275">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
  </graph>
</graphml>
