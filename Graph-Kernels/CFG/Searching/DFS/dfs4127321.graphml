<?xml version="1.0" encoding="UTF-8"?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns
     http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd">

  <!-- Created by Graph::Easy v0.76 at Tue Jun  8 22:31:59 2021 -->

  <key id="d0" for="edge" attr.name="arrowstyle" attr.type="string">
    <default>open</default>
  </key>
  <key id="d1" for="graph" attr.name="colorscheme" attr.type="string">
    <default>w3c</default>
  </key>
  <key id="d2" for="graph" attr.name="flow" attr.type="string">
    <default>east</default>
  </key>
  <key id="d3" for="graph" attr.name="title" attr.type="string">
    <default></default>
  </key>
  <key id="d4" for="node" attr.name="label" attr.type="string"/>
  <key id="d5" for="edge" attr.name="label" attr.type="string"/>
  <key id="d6" for="edge" attr.name="style" attr.type="string">
    <default>solid</default>
  </key>

  <graph id="G" edgedefault="directed">
    <data key="d1">x11</data>
    <data key="d2">south</data>
    <data key="d3">main</data>
    <node id="1000121">
      <data key="d4">(METHOD,main)</data>
    </node>
    <node id="1000127">
      <data key="d4">(scanf,scanf(&quot;%d&quot;, &amp;n))</data>
    </node>
    <node id="1000129">
      <data key="d4">(&lt;operator&gt;.addressOf,&amp;n)</data>
    </node>
    <node id="1000132">
      <data key="d4">(&lt;operator&gt;.assignment,i = 1)</data>
    </node>
    <node id="1000135">
      <data key="d4">(&lt;operator&gt;.lessEqualsThan,i&lt;=n)</data>
    </node>
    <node id="1000138">
      <data key="d4">(&lt;operator&gt;.postIncrement,i++)</data>
    </node>
    <node id="1000141">
      <data key="d4">(scanf,scanf(&quot;%d&quot;, &amp;u))</data>
    </node>
    <node id="1000143">
      <data key="d4">(&lt;operator&gt;.addressOf,&amp;u)</data>
    </node>
    <node id="1000145">
      <data key="d4">(scanf,scanf(&quot;%d&quot;, &amp;k[u]))</data>
    </node>
    <node id="1000147">
      <data key="d4">(&lt;operator&gt;.addressOf,&amp;k[u])</data>
    </node>
    <node id="1000148">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,k[u])</data>
    </node>
    <node id="1000151">
      <data key="d4">(&lt;operator&gt;.assignment,Adj[u] = (int *)malloc( sizeof(int) * k[u] ))</data>
    </node>
    <node id="1000152">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,Adj[u])</data>
    </node>
    <node id="1000155">
      <data key="d4">(&lt;operator&gt;.cast,(int *)malloc( sizeof(int) * k[u] ))</data>
    </node>
    <node id="1000156">
      <data key="d4">(UNKNOWN,int *,int *)</data>
    </node>
    <node id="1000157">
      <data key="d4">(malloc,malloc( sizeof(int) * k[u] ))</data>
    </node>
    <node id="1000158">
      <data key="d4">(&lt;operator&gt;.multiplication,sizeof(int) * k[u])</data>
    </node>
    <node id="1000159">
      <data key="d4">(&lt;operator&gt;.sizeOf,sizeof(int))</data>
    </node>
    <node id="1000161">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,k[u])</data>
    </node>
    <node id="1000165">
      <data key="d4">(&lt;operator&gt;.assignment,j = 0)</data>
    </node>
    <node id="1000168">
      <data key="d4">(&lt;operator&gt;.lessThan,j&lt;k[u])</data>
    </node>
    <node id="1000170">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,k[u])</data>
    </node>
    <node id="1000173">
      <data key="d4">(&lt;operator&gt;.postIncrement,j++)</data>
    </node>
    <node id="1000175">
      <data key="d4">(scanf,scanf(&quot;%d&quot;, Adj[u]+j))</data>
    </node>
    <node id="1000177">
      <data key="d4">(&lt;operator&gt;.addition,Adj[u]+j)</data>
    </node>
    <node id="1000178">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,Adj[u])</data>
    </node>
    <node id="1000182">
      <data key="d4">(dfs,dfs(n))</data>
    </node>
    <node id="1000185">
      <data key="d4">(&lt;operator&gt;.assignment,i = 1)</data>
    </node>
    <node id="1000188">
      <data key="d4">(&lt;operator&gt;.lessEqualsThan,i&lt;=n)</data>
    </node>
    <node id="1000191">
      <data key="d4">(&lt;operator&gt;.postIncrement,i++)</data>
    </node>
    <node id="1000193">
      <data key="d4">(printf,printf(&quot;%d %d %d\n&quot;, i, d[i], f[i]))</data>
    </node>
    <node id="1000196">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,d[i])</data>
    </node>
    <node id="1000199">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,f[i])</data>
    </node>
    <node id="1000203">
      <data key="d4">(&lt;operator&gt;.assignment,i = 0)</data>
    </node>
    <node id="1000206">
      <data key="d4">(&lt;operator&gt;.lessEqualsThan,i&lt;=100)</data>
    </node>
    <node id="1000209">
      <data key="d4">(&lt;operator&gt;.postIncrement,i++)</data>
    </node>
    <node id="1000211">
      <data key="d4">(free,free(Adj[i]))</data>
    </node>
    <node id="1000212">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,Adj[i])</data>
    </node>
    <node id="1000215">
      <data key="d4">(RETURN,return 0;,return 0;)</data>
    </node>
    <node id="1000217">
      <data key="d4">(METHOD_RETURN,int)</data>
    </node>

    <edge source="1000121" target="1000129">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000127" target="1000132">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000129" target="1000127">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000132" target="1000135">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000135" target="1000143">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000135" target="1000143">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000135" target="1000182">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000138" target="1000135">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000141" target="1000148">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000143" target="1000141">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000145" target="1000152">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000147" target="1000145">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000148" target="1000147">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000151" target="1000165">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000152" target="1000156">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000155" target="1000151">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000156" target="1000159">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000157" target="1000155">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000158" target="1000157">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000159" target="1000161">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000161" target="1000158">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000165" target="1000170">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000168" target="1000138">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000168" target="1000178">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000168" target="1000178">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000170" target="1000168">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000173" target="1000170">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000175" target="1000173">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000177" target="1000175">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000178" target="1000177">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000182" target="1000185">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000185" target="1000188">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000188" target="1000196">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000188" target="1000196">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000188" target="1000203">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000191" target="1000188">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000193" target="1000191">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000196" target="1000199">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000199" target="1000193">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000203" target="1000206">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000206" target="1000212">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000206" target="1000212">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000206" target="1000215">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000209" target="1000206">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000211" target="1000209">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000212" target="1000211">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000215" target="1000217">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
  </graph>
</graphml>
