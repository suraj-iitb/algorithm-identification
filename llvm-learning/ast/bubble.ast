TranslationUnitDecl 0x6fb2ef8 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x6fb37d0 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x6fb3490 '__int128'
|-TypedefDecl 0x6fb3840 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x6fb34b0 'unsigned __int128'
|-TypedefDecl 0x6fb3bb8 <<invalid sloc>> <invalid sloc> implicit __NSConstantString '__NSConstantString_tag'
| `-RecordType 0x6fb3930 '__NSConstantString_tag'
|   `-CXXRecord 0x6fb3898 '__NSConstantString_tag'
|-TypedefDecl 0x6fb3c50 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x6fb3c10 'char *'
|   `-BuiltinType 0x6fb2f90 'char'
|-TypedefDecl 0x6ff0f48 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list '__va_list_tag [1]'
| `-ConstantArrayType 0x6ff0ef0 '__va_list_tag [1]' 1 
|   `-RecordType 0x6fb3d40 '__va_list_tag'
|     `-CXXRecord 0x6fb3ca8 '__va_list_tag'
|-UsingDirectiveDecl 0x6ff1010 <bubble0.1.cpp:3:1, col:17> col:17 Namespace 0x6ff0fa0 'std'
`-FunctionDecl 0x6ff10c0 <line:5:1, line:25:1> line:5:5 main 'int ()'
  `-CompoundStmt 0x7017350 <col:11, line:25:1>
    |-DeclStmt 0x6ff12c8 <line:6:5, col:21>
    | `-VarDecl 0x6ff11e8 <col:5, col:19> col:15 referenced n 'const int' cinit
    |   `-IntegerLiteral 0x6ff1250 <col:19> 'int' 10
    |-DeclStmt 0x6ff1428 <line:7:5, col:15>
    | `-VarDecl 0x6ff13c0 <col:5, col:14> col:9 used arr 'int [10]'
    `-ForStmt 0x7017078 <line:12:5, line:20:5>
      |-DeclStmt 0x6ff17d8 <line:12:9, col:16>
      | `-VarDecl 0x6ff1750 <col:9, col:15> col:13 used i 'int' cinit
      |   `-IntegerLiteral 0x6ff17b8 <col:15> 'int' 0
      |-<<<NULL>>>
      |-BinaryOperator 0x6ff18c0 <col:17, col:21> 'bool' '<'
      | |-ImplicitCastExpr 0x6ff18a8 <col:17> 'int' <LValueToRValue>
      | | `-DeclRefExpr 0x6ff17f0 <col:17> 'int' lvalue Var 0x6ff1750 'i' 'int'
      | `-BinaryOperator 0x6ff1888 <col:19, col:21> 'int' '-'
      |   |-ImplicitCastExpr 0x6ff1870 <col:19> 'int' <LValueToRValue>
      |   | `-DeclRefExpr 0x6ff1850 <col:19> 'const int' lvalue Var 0x6ff11e8 'n' 'const int' non_odr_use_constant
      |   `-IntegerLiteral 0x6ff1830 <col:21> 'int' 1
      |-UnaryOperator 0x6ff1900 <col:23, col:24> 'int' postfix '++'
      | `-DeclRefExpr 0x6ff18e0 <col:23> 'int' lvalue Var 0x6ff1750 'i' 'int'
      `-CompoundStmt 0x7017060 <col:27, line:20:5>
        `-ForStmt 0x7017028 <line:13:9, line:19:9>
          |-DeclStmt 0x6ff1a10 <line:13:13, col:22>
          | `-VarDecl 0x6ff1930 <col:13, col:21> col:17 used j 'int' cinit
          |   `-BinaryOperator 0x6ff19f0 <col:19, col:21> 'int' '+'
          |     |-ImplicitCastExpr 0x6ff19d8 <col:19> 'int' <LValueToRValue>
          |     | `-DeclRefExpr 0x6ff1998 <col:19> 'int' lvalue Var 0x6ff1750 'i' 'int'
          |     `-IntegerLiteral 0x6ff19b8 <col:21> 'int' 1
          |-<<<NULL>>>
          |-BinaryOperator 0x6ff1ab8 <col:23, col:25> 'bool' '<'
          | |-ImplicitCastExpr 0x6ff1a68 <col:23> 'int' <LValueToRValue>
          | | `-DeclRefExpr 0x6ff1a28 <col:23> 'int' lvalue Var 0x6ff1930 'j' 'int'
          | `-ImplicitCastExpr 0x6ff1aa0 <col:25> 'int' <LValueToRValue>
          |   `-DeclRefExpr 0x6ff1a80 <col:25> 'const int' lvalue Var 0x6ff11e8 'n' 'const int' non_odr_use_constant
          |-UnaryOperator 0x6ff1af8 <col:27, col:28> 'int' postfix '++'
          | `-DeclRefExpr 0x6ff1ad8 <col:27> 'int' lvalue Var 0x6ff1930 'j' 'int'
          `-CompoundStmt 0x7017010 <col:31, line:19:9>
            `-IfStmt 0x7016ff8 <line:14:13, line:18:13>
              |-BinaryOperator 0x6ff1c60 <line:14:16, col:28> 'bool' '>'
              | |-ImplicitCastExpr 0x6ff1c30 <col:16, col:21> 'int' <LValueToRValue>
              | | `-ArraySubscriptExpr 0x6ff1b80 <col:16, col:21> 'int' lvalue
              | |   |-ImplicitCastExpr 0x6ff1b50 <col:16> 'int *' <ArrayToPointerDecay>
              | |   | `-DeclRefExpr 0x6ff1b10 <col:16> 'int [10]' lvalue Var 0x6ff13c0 'arr' 'int [10]'
              | |   `-ImplicitCastExpr 0x6ff1b68 <col:20> 'int' <LValueToRValue>
              | |     `-DeclRefExpr 0x6ff1b30 <col:20> 'int' lvalue Var 0x6ff1750 'i' 'int'
              | `-ImplicitCastExpr 0x6ff1c48 <col:23, col:28> 'int' <LValueToRValue>
              |   `-ArraySubscriptExpr 0x6ff1c10 <col:23, col:28> 'int' lvalue
              |     |-ImplicitCastExpr 0x6ff1be0 <col:23> 'int *' <ArrayToPointerDecay>
              |     | `-DeclRefExpr 0x6ff1ba0 <col:23> 'int [10]' lvalue Var 0x6ff13c0 'arr' 'int [10]'
              |     `-ImplicitCastExpr 0x6ff1bf8 <col:27> 'int' <LValueToRValue>
              |       `-DeclRefExpr 0x6ff1bc0 <col:27> 'int' lvalue Var 0x6ff1930 'j' 'int'
              `-CompoundStmt 0x7016fd0 <col:30, line:18:13>
                |-DeclStmt 0x6ff1da8 <line:15:17, col:34>
                | `-VarDecl 0x6ff1c98 <col:17, col:33> col:21 used temp 'int' cinit
                |   `-ImplicitCastExpr 0x6ff1d90 <col:28, col:33> 'int' <LValueToRValue>
                |     `-ArraySubscriptExpr 0x6ff1d70 <col:28, col:33> 'int' lvalue
                |       |-ImplicitCastExpr 0x6ff1d40 <col:28> 'int *' <ArrayToPointerDecay>
                |       | `-DeclRefExpr 0x6ff1d00 <col:28> 'int [10]' lvalue Var 0x6ff13c0 'arr' 'int [10]'
                |       `-ImplicitCastExpr 0x6ff1d58 <col:32> 'int' <LValueToRValue>
                |         `-DeclRefExpr 0x6ff1d20 <col:32> 'int' lvalue Var 0x6ff1750 'i' 'int'
                |-BinaryOperator 0x7016ec8 <line:16:17, col:31> 'int' lvalue '='
                | |-ArraySubscriptExpr 0x6ff1e30 <col:17, col:22> 'int' lvalue
                | | |-ImplicitCastExpr 0x6ff1e00 <col:17> 'int *' <ArrayToPointerDecay>
                | | | `-DeclRefExpr 0x6ff1dc0 <col:17> 'int [10]' lvalue Var 0x6ff13c0 'arr' 'int [10]'
                | | `-ImplicitCastExpr 0x6ff1e18 <col:21> 'int' <LValueToRValue>
                | |   `-DeclRefExpr 0x6ff1de0 <col:21> 'int' lvalue Var 0x6ff1750 'i' 'int'
                | `-ImplicitCastExpr 0x7016eb0 <col:26, col:31> 'int' <LValueToRValue>
                |   `-ArraySubscriptExpr 0x7016e90 <col:26, col:31> 'int' lvalue
                |     |-ImplicitCastExpr 0x7016e60 <col:26> 'int *' <ArrayToPointerDecay>
                |     | `-DeclRefExpr 0x7016e20 <col:26> 'int [10]' lvalue Var 0x6ff13c0 'arr' 'int [10]'
                |     `-ImplicitCastExpr 0x7016e78 <col:30> 'int' <LValueToRValue>
                |       `-DeclRefExpr 0x7016e40 <col:30> 'int' lvalue Var 0x6ff1930 'j' 'int'
                `-BinaryOperator 0x7016fb0 <line:17:17, col:26> 'int' lvalue '='
                  |-ArraySubscriptExpr 0x7016f58 <col:17, col:22> 'int' lvalue
                  | |-ImplicitCastExpr 0x7016f28 <col:17> 'int *' <ArrayToPointerDecay>
                  | | `-DeclRefExpr 0x7016ee8 <col:17> 'int [10]' lvalue Var 0x6ff13c0 'arr' 'int [10]'
                  | `-ImplicitCastExpr 0x7016f40 <col:21> 'int' <LValueToRValue>
                  |   `-DeclRefExpr 0x7016f08 <col:21> 'int' lvalue Var 0x6ff1930 'j' 'int'
                  `-ImplicitCastExpr 0x7016f98 <col:26> 'int' <LValueToRValue>
                    `-DeclRefExpr 0x7016f78 <col:26> 'int' lvalue Var 0x6ff1c98 'temp' 'int'
