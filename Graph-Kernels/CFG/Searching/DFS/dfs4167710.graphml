<?xml version="1.0" encoding="UTF-8"?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns
     http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd">

  <!-- Created by Graph::Easy v0.76 at Tue Jun  8 23:23:24 2021 -->

  <key id="d0" for="edge" attr.name="arrowstyle" attr.type="string">
    <default>open</default>
  </key>
  <key id="d1" for="graph" attr.name="colorscheme" attr.type="string">
    <default>w3c</default>
  </key>
  <key id="d2" for="graph" attr.name="flow" attr.type="string">
    <default>east</default>
  </key>
  <key id="d3" for="graph" attr.name="title" attr.type="string">
    <default></default>
  </key>
  <key id="d4" for="node" attr.name="label" attr.type="string"/>
  <key id="d5" for="edge" attr.name="label" attr.type="string"/>
  <key id="d6" for="edge" attr.name="style" attr.type="string">
    <default>solid</default>
  </key>

  <graph id="G" edgedefault="directed">
    <data key="d1">x11</data>
    <data key="d2">south</data>
    <data key="d3">visit</data>
    <node id="1000248">
      <data key="d4">(METHOD,visit)</data>
    </node>
    <node id="1000252">
      <data key="d4">(&lt;operator&gt;.assignment,color[u]=&apos;g&apos;)</data>
    </node>
    <node id="1000253">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,color[u])</data>
    </node>
    <node id="1000257">
      <data key="d4">(&lt;operator&gt;.assignment,d[u]=++time)</data>
    </node>
    <node id="1000258">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,d[u])</data>
    </node>
    <node id="1000261">
      <data key="d4">(&lt;operator&gt;.preIncrement,++time)</data>
    </node>
    <node id="1000264">
      <data key="d4">(&lt;operator&gt;.assignment,i=0)</data>
    </node>
    <node id="1000267">
      <data key="d4">(&lt;operator&gt;.lessThan,i&lt;A[u].k)</data>
    </node>
    <node id="1000269">
      <data key="d4">(&lt;operator&gt;.fieldAccess,A[u].k)</data>
    </node>
    <node id="1000270">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,A[u])</data>
    </node>
    <node id="1000273">
      <data key="d4">(FIELD_IDENTIFIER,k,k)</data>
    </node>
    <node id="1000274">
      <data key="d4">(&lt;operator&gt;.postIncrement,i++)</data>
    </node>
    <node id="1000278">
      <data key="d4">(&lt;operator&gt;.equals,color[A[u].v[i]]==&apos;w&apos;)</data>
    </node>
    <node id="1000279">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,color[A[u].v[i]])</data>
    </node>
    <node id="1000281">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,A[u].v[i])</data>
    </node>
    <node id="1000282">
      <data key="d4">(&lt;operator&gt;.fieldAccess,A[u].v)</data>
    </node>
    <node id="1000283">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,A[u])</data>
    </node>
    <node id="1000286">
      <data key="d4">(FIELD_IDENTIFIER,v,v)</data>
    </node>
    <node id="1000289">
      <data key="d4">(visit,visit(A[u].v[i]))</data>
    </node>
    <node id="1000290">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,A[u].v[i])</data>
    </node>
    <node id="1000291">
      <data key="d4">(&lt;operator&gt;.fieldAccess,A[u].v)</data>
    </node>
    <node id="1000292">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,A[u])</data>
    </node>
    <node id="1000295">
      <data key="d4">(FIELD_IDENTIFIER,v,v)</data>
    </node>
    <node id="1000297">
      <data key="d4">(&lt;operator&gt;.assignment,color[u]=&apos;b&apos;)</data>
    </node>
    <node id="1000298">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,color[u])</data>
    </node>
    <node id="1000302">
      <data key="d4">(&lt;operator&gt;.assignment,f[u]=++time)</data>
    </node>
    <node id="1000303">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,f[u])</data>
    </node>
    <node id="1000306">
      <data key="d4">(&lt;operator&gt;.preIncrement,++time)</data>
    </node>
    <node id="1000308">
      <data key="d4">(METHOD_RETURN,void)</data>
    </node>

    <edge source="1000248" target="1000253">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000252" target="1000258">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000253" target="1000252">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000257" target="1000264">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000258" target="1000261">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000261" target="1000257">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000264" target="1000270">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000267" target="1000283">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000267" target="1000283">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000267" target="1000298">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000269" target="1000267">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000270" target="1000273">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000273" target="1000269">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000274" target="1000270">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000278" target="1000274">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000278" target="1000292">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000279" target="1000278">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000281" target="1000279">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000282" target="1000281">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000283" target="1000286">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000286" target="1000282">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000289" target="1000274">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000290" target="1000289">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000291" target="1000290">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000292" target="1000295">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000295" target="1000291">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000297" target="1000303">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000298" target="1000297">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000302" target="1000308">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000303" target="1000306">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000306" target="1000302">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
  </graph>
</graphml>
