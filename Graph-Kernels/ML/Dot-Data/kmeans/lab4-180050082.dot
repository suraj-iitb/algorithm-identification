strict digraph "" {
	node [label="\N"];
	0	 [label="0: start"];
	1	 [label="5: np.random.seed(5927)"];
	0 -> 1;
	2	 [label="58: if: (__name__ == '__main__')"];
	1 -> 2;
	3	 [label="59: parser = argparse.ArgumentParser()"];
	2 -> 3;
	29	 [label="0: stop"];
	2 -> 29;
	4	 [label="60: parser.add_argument('--image', default='1', choices=['1', '2', '3'])"];
	3 -> 4;
	5	 [label="61: parser.add_argument('--k', default=5, type=int)"];
	4 -> 5;
	6	 [label="63: args = parser.parse_args()"];
	5 -> 6;
	7	 [label="65: image = plt.imread(f'data/{args.image}.png')"];
	6 -> 7;
	8	 [label="66: x = image.reshape((- 1), 3)"];
	7 -> 8;
	9	 [label="67: kmeans = KMeans(D=3, n_clusters=args.k)"];
	8 -> 9;
	10	 [label="68: kmeans.init_clusters(x)"];
	9 -> 10;
	11	 [label="69: kmeans.train(x)"];
	10 -> 11;
	12	 [label="70: out = kmeans.replace_by_center(x)"];
	11 -> 12;
	13	 [label="71: plt.imshow(out.reshape(image.shape))"];
	12 -> 13;
	14	 [label="72: plt.show()"];
	13 -> 14;
	15	 [label="74: for: (True if ['1', '2', '3'] else False)"];
	14 -> 15;
	15 -> 29;
	16	 [label="74: imgs = ['1', '2', '3'].shift()"];
	15 -> 16;
	17	 [label="75: img = plt.imread(f'data/{imgs}.png')"];
	16 -> 17;
	19	 [label="77: for: (True if [2, 5, 10] else False)"];
	19 -> 15;
	20	 [label="77: k = [2, 5, 10].shift()"];
	19 -> 20;
	21	 [label="78: kmeans = KMeans(D=3, n_clusters=k)"];
	20 -> 21;
	18	 [label="76: x = img.reshape((- 1), 3)"];
	17 -> 18;
	18 -> 19;
	28	 [label="85: plt.savefig('{}_{}.png'.format(imgs, k))"];
	28 -> 19;
	22	 [label="79: kmeans.init_clusters(x)"];
	21 -> 22;
	23	 [label="80: kmeans.train(x)"];
	22 -> 23;
	24	 [label="81: out = kmeans.replace_by_center(x)"];
	23 -> 24;
	25	 [label="82: plt.figure()"];
	24 -> 25;
	26	 [label="83: plt.title('clusters = {}'.format(k))"];
	25 -> 26;
	27	 [label="84: plt.imshow(out.reshape(img.shape))"];
	26 -> 27;
	27 -> 28;
}

