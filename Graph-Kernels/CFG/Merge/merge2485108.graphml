<?xml version="1.0" encoding="UTF-8"?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns
     http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd">

  <!-- Created by Graph::Easy v0.76 at Tue Oct 27 08:55:15 2020 -->

  <key id="d0" for="edge" attr.name="arrowstyle" attr.type="string">
    <default>open</default>
  </key>
  <key id="d1" for="graph" attr.name="colorscheme" attr.type="string">
    <default>w3c</default>
  </key>
  <key id="d2" for="graph" attr.name="flow" attr.type="string">
    <default>east</default>
  </key>
  <key id="d3" for="graph" attr.name="title" attr.type="string">
    <default></default>
  </key>
  <key id="d4" for="node" attr.name="label" attr.type="string"/>
  <key id="d5" for="edge" attr.name="label" attr.type="string"/>
  <key id="d6" for="edge" attr.name="style" attr.type="string">
    <default>solid</default>
  </key>

  <graph id="G" edgedefault="directed">
    <data key="d1">x11</data>
    <data key="d2">south</data>
    <data key="d3">getNum</data>
    <node id="1000102">
      <data key="d4">(METHOD,getNum)</data>
    </node>
    <node id="1000106">
      <data key="d4">(&lt;operator&gt;.assignment,n = 0)</data>
    </node>
    <node id="1000110">
      <data key="d4">(&lt;operator&gt;.logicalAnd,(*p &gt;= &apos;0&apos;) &amp;&amp; (*p &lt;= &apos;9&apos;))</data>
    </node>
    <node id="1000111">
      <data key="d4">(&lt;operator&gt;.greaterEqualsThan,*p &gt;= &apos;0&apos;)</data>
    </node>
    <node id="1000112">
      <data key="d4">(&lt;operator&gt;.indirection,*p)</data>
    </node>
    <node id="1000115">
      <data key="d4">(&lt;operator&gt;.lessEqualsThan,*p &lt;= &apos;9&apos;)</data>
    </node>
    <node id="1000116">
      <data key="d4">(&lt;operator&gt;.indirection,*p)</data>
    </node>
    <node id="1000120">
      <data key="d4">(&lt;operator&gt;.assignment,n = n * 10 + (int)(*p - &apos;0&apos;))</data>
    </node>
    <node id="1000122">
      <data key="d4">(&lt;operator&gt;.addition,n * 10 + (int)(*p - &apos;0&apos;))</data>
    </node>
    <node id="1000123">
      <data key="d4">(&lt;operator&gt;.multiplication,n * 10)</data>
    </node>
    <node id="1000126">
      <data key="d4">(&lt;operator&gt;.cast,(int)(*p - &apos;0&apos;))</data>
    </node>
    <node id="1000127">
      <data key="d4">(UNKNOWN,int,int)</data>
    </node>
    <node id="1000128">
      <data key="d4">(&lt;operator&gt;.subtraction,*p - &apos;0&apos;)</data>
    </node>
    <node id="1000129">
      <data key="d4">(&lt;operator&gt;.indirection,*p)</data>
    </node>
    <node id="1000132">
      <data key="d4">(&lt;operator&gt;.preIncrement,++p)</data>
    </node>
    <node id="1000134">
      <data key="d4">(&lt;operator&gt;.preIncrement,++p)</data>
    </node>
    <node id="1000136">
      <data key="d4">(RETURN,return n;,return n;)</data>
    </node>
    <node id="1000138">
      <data key="d4">(METHOD_RETURN,int)</data>
    </node>

    <edge source="1000102" target="1000106">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000106" target="1000112">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000110" target="1000123">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000110" target="1000134">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000111" target="1000110">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000111" target="1000116">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000112" target="1000111">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000115" target="1000110">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000116" target="1000115">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000120" target="1000132">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000122" target="1000120">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000123" target="1000127">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000126" target="1000122">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000127" target="1000129">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000128" target="1000126">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000129" target="1000128">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000132" target="1000112">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000134" target="1000136">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000136" target="1000138">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
  </graph>
</graphml>
