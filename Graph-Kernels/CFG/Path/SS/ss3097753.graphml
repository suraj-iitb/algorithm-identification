<?xml version="1.0" encoding="UTF-8"?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns
     http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd">

  <!-- Created by Graph::Easy v0.76 at Fri Jun 11 01:01:22 2021 -->

  <key id="d0" for="edge" attr.name="arrowstyle" attr.type="string">
    <default>open</default>
  </key>
  <key id="d1" for="graph" attr.name="colorscheme" attr.type="string">
    <default>w3c</default>
  </key>
  <key id="d2" for="graph" attr.name="flow" attr.type="string">
    <default>east</default>
  </key>
  <key id="d3" for="graph" attr.name="title" attr.type="string">
    <default></default>
  </key>
  <key id="d4" for="node" attr.name="label" attr.type="string"/>
  <key id="d5" for="edge" attr.name="label" attr.type="string"/>
  <key id="d6" for="edge" attr.name="style" attr.type="string">
    <default>solid</default>
  </key>

  <graph id="G" edgedefault="directed">
    <data key="d1">x11</data>
    <data key="d2">south</data>
    <data key="d3">read</data>
    <node id="1000108">
      <data key="d4">(METHOD,read)</data>
    </node>
    <node id="1000112">
      <data key="d4">(&lt;operator&gt;.assignment,ch = getchar())</data>
    </node>
    <node id="1000114">
      <data key="d4">(getchar,getchar())</data>
    </node>
    <node id="1000115">
      <data key="d4">(&lt;operator&gt;.assignment,x = 0)</data>
    </node>
    <node id="1000119">
      <data key="d4">(&lt;operator&gt;.logicalOr,ch &lt; &apos;0&apos; || ch &gt; &apos;9&apos;)</data>
    </node>
    <node id="1000120">
      <data key="d4">(&lt;operator&gt;.lessThan,ch &lt; &apos;0&apos;)</data>
    </node>
    <node id="1000123">
      <data key="d4">(&lt;operator&gt;.greaterThan,ch &gt; &apos;9&apos;)</data>
    </node>
    <node id="1000126">
      <data key="d4">(&lt;operator&gt;.assignment,ch = getchar())</data>
    </node>
    <node id="1000128">
      <data key="d4">(getchar,getchar())</data>
    </node>
    <node id="1000130">
      <data key="d4">(&lt;operator&gt;.logicalAnd,ch &gt;=&apos;0&apos; &amp;&amp; ch &lt;= &apos;9&apos;)</data>
    </node>
    <node id="1000131">
      <data key="d4">(&lt;operator&gt;.greaterEqualsThan,ch &gt;=&apos;0&apos;)</data>
    </node>
    <node id="1000134">
      <data key="d4">(&lt;operator&gt;.lessEqualsThan,ch &lt;= &apos;9&apos;)</data>
    </node>
    <node id="1000137">
      <data key="d4">(&lt;operator&gt;.assignment,ch = getchar())</data>
    </node>
    <node id="1000139">
      <data key="d4">(getchar,getchar())</data>
    </node>
    <node id="1000140">
      <data key="d4">(&lt;operator&gt;.assignment,x = x * 10 + ch - &apos;0&apos;)</data>
    </node>
    <node id="1000142">
      <data key="d4">(&lt;operator&gt;.addition,x * 10 + ch - &apos;0&apos;)</data>
    </node>
    <node id="1000143">
      <data key="d4">(&lt;operator&gt;.multiplication,x * 10)</data>
    </node>
    <node id="1000146">
      <data key="d4">(&lt;operator&gt;.subtraction,ch - &apos;0&apos;)</data>
    </node>
    <node id="1000149">
      <data key="d4">(METHOD_RETURN,void)</data>
    </node>

    <edge source="1000108" target="1000114">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000112" target="1000115">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000114" target="1000112">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000115" target="1000120">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000119" target="1000131">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000119" target="1000128">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000120" target="1000119">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000120" target="1000123">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000123" target="1000119">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000126" target="1000120">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000128" target="1000126">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000130" target="1000143">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000130" target="1000143">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000130" target="1000149">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000131" target="1000130">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000131" target="1000134">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000134" target="1000130">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000137" target="1000131">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000139" target="1000137">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000140" target="1000139">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000142" target="1000140">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000143" target="1000146">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000146" target="1000142">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
  </graph>
</graphml>
