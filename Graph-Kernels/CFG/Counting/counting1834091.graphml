<?xml version="1.0" encoding="UTF-8"?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns
     http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd">

  <!-- Created by Graph::Easy v0.76 at Tue Oct 27 09:13:30 2020 -->

  <key id="d0" for="edge" attr.name="arrowstyle" attr.type="string">
    <default>open</default>
  </key>
  <key id="d1" for="graph" attr.name="colorscheme" attr.type="string">
    <default>w3c</default>
  </key>
  <key id="d2" for="graph" attr.name="flow" attr.type="string">
    <default>east</default>
  </key>
  <key id="d3" for="graph" attr.name="title" attr.type="string">
    <default></default>
  </key>
  <key id="d4" for="node" attr.name="label" attr.type="string"/>
  <key id="d5" for="edge" attr.name="label" attr.type="string"/>
  <key id="d6" for="edge" attr.name="style" attr.type="string">
    <default>solid</default>
  </key>

  <graph id="G" edgedefault="directed">
    <data key="d1">x11</data>
    <data key="d2">south</data>
    <data key="d3">main</data>
    <node id="1000102">
      <data key="d4">(METHOD,main)</data>
    </node>
    <node id="1000110">
      <data key="d4">(scanf,scanf(&quot;%d&quot;,&amp;num))</data>
    </node>
    <node id="1000112">
      <data key="d4">(&lt;operator&gt;.addressOf,&amp;num)</data>
    </node>
    <node id="1000114">
      <data key="d4">(&lt;operator&gt;.assignment,A = (int *)malloc(sizeof(int)*num+1))</data>
    </node>
    <node id="1000116">
      <data key="d4">(&lt;operator&gt;.cast,(int *)malloc(sizeof(int)*num+1))</data>
    </node>
    <node id="1000117">
      <data key="d4">(UNKNOWN,int *,int *)</data>
    </node>
    <node id="1000118">
      <data key="d4">(malloc,malloc(sizeof(int)*num+1))</data>
    </node>
    <node id="1000119">
      <data key="d4">(&lt;operator&gt;.addition,sizeof(int)*num+1)</data>
    </node>
    <node id="1000120">
      <data key="d4">(&lt;operator&gt;.multiplication,sizeof(int)*num)</data>
    </node>
    <node id="1000121">
      <data key="d4">(&lt;operator&gt;.sizeOf,sizeof(int))</data>
    </node>
    <node id="1000125">
      <data key="d4">(&lt;operator&gt;.assignment,B = (int *)malloc(sizeof(int)*num+1))</data>
    </node>
    <node id="1000127">
      <data key="d4">(&lt;operator&gt;.cast,(int *)malloc(sizeof(int)*num+1))</data>
    </node>
    <node id="1000128">
      <data key="d4">(UNKNOWN,int *,int *)</data>
    </node>
    <node id="1000129">
      <data key="d4">(malloc,malloc(sizeof(int)*num+1))</data>
    </node>
    <node id="1000130">
      <data key="d4">(&lt;operator&gt;.addition,sizeof(int)*num+1)</data>
    </node>
    <node id="1000131">
      <data key="d4">(&lt;operator&gt;.multiplication,sizeof(int)*num)</data>
    </node>
    <node id="1000132">
      <data key="d4">(&lt;operator&gt;.sizeOf,sizeof(int))</data>
    </node>
    <node id="1000137">
      <data key="d4">(&lt;operator&gt;.assignment,i=0)</data>
    </node>
    <node id="1000140">
      <data key="d4">(&lt;operator&gt;.lessThan,i&lt;AMAX)</data>
    </node>
    <node id="1000143">
      <data key="d4">(&lt;operator&gt;.postIncrement,i++)</data>
    </node>
    <node id="1000145">
      <data key="d4">(&lt;operator&gt;.assignment,C[i] = 0)</data>
    </node>
    <node id="1000146">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,C[i])</data>
    </node>
    <node id="1000151">
      <data key="d4">(&lt;operator&gt;.assignment,j=1)</data>
    </node>
    <node id="1000154">
      <data key="d4">(&lt;operator&gt;.lessEqualsThan,j&lt;=num)</data>
    </node>
    <node id="1000157">
      <data key="d4">(&lt;operator&gt;.postIncrement,j++)</data>
    </node>
    <node id="1000160">
      <data key="d4">(scanf,scanf(&quot;%d&quot;,&amp;A[j]))</data>
    </node>
    <node id="1000162">
      <data key="d4">(&lt;operator&gt;.addressOf,&amp;A[j])</data>
    </node>
    <node id="1000163">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,A[j])</data>
    </node>
    <node id="1000166">
      <data key="d4">(&lt;operator&gt;.postIncrement,C[A[j]]++)</data>
    </node>
    <node id="1000167">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,C[A[j]])</data>
    </node>
    <node id="1000169">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,A[j])</data>
    </node>
    <node id="1000173">
      <data key="d4">(&lt;operator&gt;.assignment,i=0)</data>
    </node>
    <node id="1000176">
      <data key="d4">(&lt;operator&gt;.lessThan,i&lt;AMAX)</data>
    </node>
    <node id="1000179">
      <data key="d4">(&lt;operator&gt;.postIncrement,i++)</data>
    </node>
    <node id="1000181">
      <data key="d4">(&lt;operator&gt;.assignment,C[i] = C[i] + C[i-1])</data>
    </node>
    <node id="1000182">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,C[i])</data>
    </node>
    <node id="1000185">
      <data key="d4">(&lt;operator&gt;.addition,C[i] + C[i-1])</data>
    </node>
    <node id="1000186">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,C[i])</data>
    </node>
    <node id="1000189">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,C[i-1])</data>
    </node>
    <node id="1000191">
      <data key="d4">(&lt;operator&gt;.subtraction,i-1)</data>
    </node>
    <node id="1000195">
      <data key="d4">(&lt;operator&gt;.assignment,j=num)</data>
    </node>
    <node id="1000198">
      <data key="d4">(&lt;operator&gt;.greaterThan,j&gt;0)</data>
    </node>
    <node id="1000201">
      <data key="d4">(&lt;operator&gt;.postDecrement,j--)</data>
    </node>
    <node id="1000204">
      <data key="d4">(&lt;operator&gt;.assignment,B[C[A[j]]] = A[j])</data>
    </node>
    <node id="1000205">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,B[C[A[j]]])</data>
    </node>
    <node id="1000207">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,C[A[j]])</data>
    </node>
    <node id="1000209">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,A[j])</data>
    </node>
    <node id="1000212">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,A[j])</data>
    </node>
    <node id="1000215">
      <data key="d4">(&lt;operator&gt;.postDecrement,C[A[j]]--)</data>
    </node>
    <node id="1000216">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,C[A[j]])</data>
    </node>
    <node id="1000218">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,A[j])</data>
    </node>
    <node id="1000222">
      <data key="d4">(&lt;operator&gt;.assignment,i=1)</data>
    </node>
    <node id="1000225">
      <data key="d4">(&lt;operator&gt;.lessEqualsThan,i&lt;=num)</data>
    </node>
    <node id="1000228">
      <data key="d4">(&lt;operator&gt;.postIncrement,i++)</data>
    </node>
    <node id="1000231">
      <data key="d4">(printf,printf(&quot;%d&quot;,B[i]))</data>
    </node>
    <node id="1000233">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,B[i])</data>
    </node>
    <node id="1000237">
      <data key="d4">(&lt;operator&gt;.notEquals,i!=num)</data>
    </node>
    <node id="1000240">
      <data key="d4">(printf,printf(&quot; &quot;))</data>
    </node>
    <node id="1000242">
      <data key="d4">(printf,printf(&quot;\n&quot;))</data>
    </node>
    <node id="1000244">
      <data key="d4">(RETURN,return 0;,return 0;)</data>
    </node>
    <node id="1000246">
      <data key="d4">(METHOD_RETURN,int)</data>
    </node>

    <edge source="1000102" target="1000112">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000110" target="1000117">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000112" target="1000110">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000114" target="1000128">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000116" target="1000114">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000117" target="1000121">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000118" target="1000116">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000119" target="1000118">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000120" target="1000119">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000121" target="1000120">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000125" target="1000137">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000127" target="1000125">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000128" target="1000132">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000129" target="1000127">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000130" target="1000129">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000131" target="1000130">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000132" target="1000131">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000137" target="1000140">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000140" target="1000146">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000140" target="1000146">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000140" target="1000151">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000143" target="1000140">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000145" target="1000143">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000146" target="1000145">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000151" target="1000154">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000154" target="1000163">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000154" target="1000163">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000154" target="1000173">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000157" target="1000154">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000160" target="1000169">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000162" target="1000160">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000163" target="1000162">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000166" target="1000157">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000167" target="1000166">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000169" target="1000167">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000173" target="1000176">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000176" target="1000182">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000176" target="1000182">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000176" target="1000195">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000179" target="1000176">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000181" target="1000179">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000182" target="1000186">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000185" target="1000181">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000186" target="1000191">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000189" target="1000185">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000191" target="1000189">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000195" target="1000198">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000198" target="1000209">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000198" target="1000209">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000198" target="1000222">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000201" target="1000198">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000204" target="1000218">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000205" target="1000212">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000207" target="1000205">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000209" target="1000207">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000212" target="1000204">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000215" target="1000201">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000216" target="1000215">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000218" target="1000216">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000222" target="1000225">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000225" target="1000233">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000225" target="1000233">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000225" target="1000242">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000228" target="1000225">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000231" target="1000237">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000233" target="1000231">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000237" target="1000228">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000237" target="1000240">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000240" target="1000228">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000242" target="1000244">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000244" target="1000246">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
  </graph>
</graphml>
