<?xml version="1.0" encoding="UTF-8"?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns
     http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd">

  <!-- Created by Graph::Easy v0.76 at Tue Jun  8 22:30:35 2021 -->

  <key id="d0" for="edge" attr.name="arrowstyle" attr.type="string">
    <default>open</default>
  </key>
  <key id="d1" for="graph" attr.name="colorscheme" attr.type="string">
    <default>w3c</default>
  </key>
  <key id="d2" for="graph" attr.name="flow" attr.type="string">
    <default>east</default>
  </key>
  <key id="d3" for="graph" attr.name="title" attr.type="string">
    <default></default>
  </key>
  <key id="d4" for="node" attr.name="label" attr.type="string"/>
  <key id="d5" for="edge" attr.name="label" attr.type="string"/>
  <key id="d6" for="edge" attr.name="style" attr.type="string">
    <default>solid</default>
  </key>

  <graph id="G" edgedefault="directed">
    <data key="d1">x11</data>
    <data key="d2">south</data>
    <data key="d3">main</data>
    <node id="1000119">
      <data key="d4">(METHOD,main)</data>
    </node>
    <node id="1000125">
      <data key="d4">(scanf,scanf(&quot;%d&quot;, &amp;n))</data>
    </node>
    <node id="1000127">
      <data key="d4">(&lt;operator&gt;.addressOf,&amp;n)</data>
    </node>
    <node id="1000130">
      <data key="d4">(&lt;operator&gt;.assignment,i = 0)</data>
    </node>
    <node id="1000133">
      <data key="d4">(&lt;operator&gt;.lessEqualsThan,i &lt;= n)</data>
    </node>
    <node id="1000136">
      <data key="d4">(&lt;operator&gt;.postIncrement,i++)</data>
    </node>
    <node id="1000138">
      <data key="d4">(&lt;operator&gt;.assignment,t[i].d = t[i].f = 0)</data>
    </node>
    <node id="1000139">
      <data key="d4">(&lt;operator&gt;.fieldAccess,t[i].d)</data>
    </node>
    <node id="1000140">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,t[i])</data>
    </node>
    <node id="1000143">
      <data key="d4">(FIELD_IDENTIFIER,d,d)</data>
    </node>
    <node id="1000144">
      <data key="d4">(&lt;operator&gt;.assignment,t[i].f = 0)</data>
    </node>
    <node id="1000145">
      <data key="d4">(&lt;operator&gt;.fieldAccess,t[i].f)</data>
    </node>
    <node id="1000146">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,t[i])</data>
    </node>
    <node id="1000149">
      <data key="d4">(FIELD_IDENTIFIER,f,f)</data>
    </node>
    <node id="1000152">
      <data key="d4">(&lt;operator&gt;.assignment,i = 1)</data>
    </node>
    <node id="1000155">
      <data key="d4">(&lt;operator&gt;.lessEqualsThan,i &lt;= n)</data>
    </node>
    <node id="1000158">
      <data key="d4">(&lt;operator&gt;.postIncrement,i++)</data>
    </node>
    <node id="1000161">
      <data key="d4">(scanf,scanf(&quot;%d%d&quot;, &amp;g[i].u, &amp;g[i].k))</data>
    </node>
    <node id="1000163">
      <data key="d4">(&lt;operator&gt;.addressOf,&amp;g[i].u)</data>
    </node>
    <node id="1000164">
      <data key="d4">(&lt;operator&gt;.fieldAccess,g[i].u)</data>
    </node>
    <node id="1000165">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,g[i])</data>
    </node>
    <node id="1000168">
      <data key="d4">(FIELD_IDENTIFIER,u,u)</data>
    </node>
    <node id="1000169">
      <data key="d4">(&lt;operator&gt;.addressOf,&amp;g[i].k)</data>
    </node>
    <node id="1000170">
      <data key="d4">(&lt;operator&gt;.fieldAccess,g[i].k)</data>
    </node>
    <node id="1000171">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,g[i])</data>
    </node>
    <node id="1000174">
      <data key="d4">(FIELD_IDENTIFIER,k,k)</data>
    </node>
    <node id="1000175">
      <data key="d4">(&lt;operator&gt;.assignment,g[i].v = (int *)malloc(sizeof(int) * (g[i].k+1)))</data>
    </node>
    <node id="1000176">
      <data key="d4">(&lt;operator&gt;.fieldAccess,g[i].v)</data>
    </node>
    <node id="1000177">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,g[i])</data>
    </node>
    <node id="1000180">
      <data key="d4">(FIELD_IDENTIFIER,v,v)</data>
    </node>
    <node id="1000181">
      <data key="d4">(&lt;operator&gt;.cast,(int *)malloc(sizeof(int) * (g[i].k+1)))</data>
    </node>
    <node id="1000182">
      <data key="d4">(UNKNOWN,int *,int *)</data>
    </node>
    <node id="1000183">
      <data key="d4">(malloc,malloc(sizeof(int) * (g[i].k+1)))</data>
    </node>
    <node id="1000184">
      <data key="d4">(&lt;operator&gt;.multiplication,sizeof(int) * (g[i].k+1))</data>
    </node>
    <node id="1000185">
      <data key="d4">(&lt;operator&gt;.sizeOf,sizeof(int))</data>
    </node>
    <node id="1000187">
      <data key="d4">(&lt;operator&gt;.addition,g[i].k+1)</data>
    </node>
    <node id="1000188">
      <data key="d4">(&lt;operator&gt;.fieldAccess,g[i].k)</data>
    </node>
    <node id="1000189">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,g[i])</data>
    </node>
    <node id="1000192">
      <data key="d4">(FIELD_IDENTIFIER,k,k)</data>
    </node>
    <node id="1000195">
      <data key="d4">(&lt;operator&gt;.assignment,j = 1)</data>
    </node>
    <node id="1000198">
      <data key="d4">(&lt;operator&gt;.lessEqualsThan,j &lt;= g[i].k)</data>
    </node>
    <node id="1000200">
      <data key="d4">(&lt;operator&gt;.fieldAccess,g[i].k)</data>
    </node>
    <node id="1000201">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,g[i])</data>
    </node>
    <node id="1000204">
      <data key="d4">(FIELD_IDENTIFIER,k,k)</data>
    </node>
    <node id="1000205">
      <data key="d4">(&lt;operator&gt;.postIncrement,j++)</data>
    </node>
    <node id="1000208">
      <data key="d4">(scanf,scanf(&quot;%d&quot;, &amp;g[i].v[j]))</data>
    </node>
    <node id="1000210">
      <data key="d4">(&lt;operator&gt;.addressOf,&amp;g[i].v[j])</data>
    </node>
    <node id="1000211">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,g[i].v[j])</data>
    </node>
    <node id="1000212">
      <data key="d4">(&lt;operator&gt;.fieldAccess,g[i].v)</data>
    </node>
    <node id="1000213">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,g[i])</data>
    </node>
    <node id="1000216">
      <data key="d4">(FIELD_IDENTIFIER,v,v)</data>
    </node>
    <node id="1000218">
      <data key="d4">(dfs,dfs(n))</data>
    </node>
    <node id="1000221">
      <data key="d4">(&lt;operator&gt;.assignment,i = 1)</data>
    </node>
    <node id="1000224">
      <data key="d4">(&lt;operator&gt;.lessEqualsThan,i &lt;= n)</data>
    </node>
    <node id="1000227">
      <data key="d4">(&lt;operator&gt;.postIncrement,i++)</data>
    </node>
    <node id="1000229">
      <data key="d4">(printf,printf(&quot;%d %d %d\n&quot;, i, t[i].d, t[i].f))</data>
    </node>
    <node id="1000232">
      <data key="d4">(&lt;operator&gt;.fieldAccess,t[i].d)</data>
    </node>
    <node id="1000233">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,t[i])</data>
    </node>
    <node id="1000236">
      <data key="d4">(FIELD_IDENTIFIER,d,d)</data>
    </node>
    <node id="1000237">
      <data key="d4">(&lt;operator&gt;.fieldAccess,t[i].f)</data>
    </node>
    <node id="1000238">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,t[i])</data>
    </node>
    <node id="1000241">
      <data key="d4">(FIELD_IDENTIFIER,f,f)</data>
    </node>
    <node id="1000242">
      <data key="d4">(RETURN,return 0;,return 0;)</data>
    </node>
    <node id="1000244">
      <data key="d4">(METHOD_RETURN,int)</data>
    </node>

    <edge source="1000119" target="1000127">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000125" target="1000130">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000127" target="1000125">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000130" target="1000133">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000133" target="1000140">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000133" target="1000140">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000133" target="1000152">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000136" target="1000133">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000138" target="1000136">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000139" target="1000146">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000140" target="1000143">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000143" target="1000139">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000144" target="1000138">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000145" target="1000144">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000146" target="1000149">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000149" target="1000145">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000152" target="1000155">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000155" target="1000165">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000155" target="1000165">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000155" target="1000218">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000158" target="1000155">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000161" target="1000177">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000163" target="1000171">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000164" target="1000163">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000165" target="1000168">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000168" target="1000164">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000169" target="1000161">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000170" target="1000169">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000171" target="1000174">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000174" target="1000170">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000175" target="1000195">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000176" target="1000182">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000177" target="1000180">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000180" target="1000176">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000181" target="1000175">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000182" target="1000185">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000183" target="1000181">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000184" target="1000183">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000185" target="1000189">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000187" target="1000184">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000188" target="1000187">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000189" target="1000192">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000192" target="1000188">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000195" target="1000201">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000198" target="1000158">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000198" target="1000213">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000198" target="1000213">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000200" target="1000198">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000201" target="1000204">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000204" target="1000200">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000205" target="1000201">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000208" target="1000205">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000210" target="1000208">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000211" target="1000210">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000212" target="1000211">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000213" target="1000216">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000216" target="1000212">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000218" target="1000221">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000221" target="1000224">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000224" target="1000233">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000224" target="1000233">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000224" target="1000242">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000227" target="1000224">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000229" target="1000227">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000232" target="1000238">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000233" target="1000236">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000236" target="1000232">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000237" target="1000229">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000238" target="1000241">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000241" target="1000237">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000242" target="1000244">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
  </graph>
</graphml>
