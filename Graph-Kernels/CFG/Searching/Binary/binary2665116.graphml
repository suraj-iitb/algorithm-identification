<?xml version="1.0" encoding="UTF-8"?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns
     http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd">

  <!-- Created by Graph::Easy v0.76 at Wed Jun  9 00:48:59 2021 -->

  <key id="d0" for="edge" attr.name="arrowstyle" attr.type="string">
    <default>open</default>
  </key>
  <key id="d1" for="graph" attr.name="colorscheme" attr.type="string">
    <default>w3c</default>
  </key>
  <key id="d2" for="graph" attr.name="flow" attr.type="string">
    <default>east</default>
  </key>
  <key id="d3" for="graph" attr.name="title" attr.type="string">
    <default></default>
  </key>
  <key id="d4" for="node" attr.name="label" attr.type="string"/>
  <key id="d5" for="edge" attr.name="label" attr.type="string"/>
  <key id="d6" for="edge" attr.name="style" attr.type="string">
    <default>solid</default>
  </key>

  <graph id="G" edgedefault="directed">
    <data key="d1">x11</data>
    <data key="d2">south</data>
    <data key="d3">main</data>
    <node id="1000102">
      <data key="d4">(METHOD,main)</data>
    </node>
    <node id="1000106">
      <data key="d4">(&lt;operator&gt;.assignment,n_max = 100000)</data>
    </node>
    <node id="1000115">
      <data key="d4">(&lt;operator&gt;.assignment,ans = 0)</data>
    </node>
    <node id="1000121">
      <data key="d4">(scanf,scanf(&quot;%d&quot;, &amp;n))</data>
    </node>
    <node id="1000123">
      <data key="d4">(&lt;operator&gt;.addressOf,&amp;n)</data>
    </node>
    <node id="1000126">
      <data key="d4">(&lt;operator&gt;.assignment,i=0)</data>
    </node>
    <node id="1000129">
      <data key="d4">(&lt;operator&gt;.lessThan,i&lt;n)</data>
    </node>
    <node id="1000132">
      <data key="d4">(&lt;operator&gt;.preIncrement,++i)</data>
    </node>
    <node id="1000134">
      <data key="d4">(scanf,scanf(&quot;%d&quot;, S+i))</data>
    </node>
    <node id="1000136">
      <data key="d4">(&lt;operator&gt;.addition,S+i)</data>
    </node>
    <node id="1000139">
      <data key="d4">(scanf,scanf(&quot;%d&quot;, &amp;q))</data>
    </node>
    <node id="1000141">
      <data key="d4">(&lt;operator&gt;.addressOf,&amp;q)</data>
    </node>
    <node id="1000144">
      <data key="d4">(&lt;operator&gt;.assignment,i=0)</data>
    </node>
    <node id="1000147">
      <data key="d4">(&lt;operator&gt;.lessThan,i&lt;q)</data>
    </node>
    <node id="1000150">
      <data key="d4">(&lt;operator&gt;.preIncrement,++i)</data>
    </node>
    <node id="1000153">
      <data key="d4">(scanf,scanf(&quot;%d&quot;, &amp;T))</data>
    </node>
    <node id="1000155">
      <data key="d4">(&lt;operator&gt;.addressOf,&amp;T)</data>
    </node>
    <node id="1000157">
      <data key="d4">(&lt;operator&gt;.assignment,left = 0)</data>
    </node>
    <node id="1000160">
      <data key="d4">(&lt;operator&gt;.assignment,right = n)</data>
    </node>
    <node id="1000164">
      <data key="d4">(&lt;operator&gt;.logicalOr,T &lt; S[0] || S[n-1] &lt; T)</data>
    </node>
    <node id="1000165">
      <data key="d4">(&lt;operator&gt;.lessThan,T &lt; S[0])</data>
    </node>
    <node id="1000167">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,S[0])</data>
    </node>
    <node id="1000170">
      <data key="d4">(&lt;operator&gt;.lessThan,S[n-1] &lt; T)</data>
    </node>
    <node id="1000171">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,S[n-1])</data>
    </node>
    <node id="1000173">
      <data key="d4">(&lt;operator&gt;.subtraction,n-1)</data>
    </node>
    <node id="1000179">
      <data key="d4">(&lt;operator&gt;.lessThan,left &lt; right)</data>
    </node>
    <node id="1000183">
      <data key="d4">(&lt;operator&gt;.assignment,mid = (left+right)/2)</data>
    </node>
    <node id="1000185">
      <data key="d4">(&lt;operator&gt;.division,(left+right)/2)</data>
    </node>
    <node id="1000186">
      <data key="d4">(&lt;operator&gt;.addition,left+right)</data>
    </node>
    <node id="1000191">
      <data key="d4">(&lt;operator&gt;.equals,T == S[mid])</data>
    </node>
    <node id="1000193">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,S[mid])</data>
    </node>
    <node id="1000197">
      <data key="d4">(&lt;operator&gt;.preIncrement,++ans)</data>
    </node>
    <node id="1000201">
      <data key="d4">(&lt;operator&gt;.greaterThan,T &gt; S[mid])</data>
    </node>
    <node id="1000203">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,S[mid])</data>
    </node>
    <node id="1000207">
      <data key="d4">(&lt;operator&gt;.assignment,left = mid +1)</data>
    </node>
    <node id="1000209">
      <data key="d4">(&lt;operator&gt;.addition,mid +1)</data>
    </node>
    <node id="1000214">
      <data key="d4">(&lt;operator&gt;.lessThan,T &lt; S[mid])</data>
    </node>
    <node id="1000216">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,S[mid])</data>
    </node>
    <node id="1000220">
      <data key="d4">(&lt;operator&gt;.assignment,right = mid)</data>
    </node>
    <node id="1000223">
      <data key="d4">(printf,printf(&quot;%d\n&quot;, ans))</data>
    </node>
    <node id="1000226">
      <data key="d4">(RETURN,return 0;,return 0;)</data>
    </node>
    <node id="1000228">
      <data key="d4">(METHOD_RETURN,int)</data>
    </node>

    <edge source="1000102" target="1000106">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000106" target="1000115">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000115" target="1000123">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000121" target="1000126">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000123" target="1000121">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000126" target="1000129">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000129" target="1000136">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000129" target="1000136">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000129" target="1000141">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000132" target="1000129">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000134" target="1000132">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000136" target="1000134">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000139" target="1000144">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000141" target="1000139">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000144" target="1000147">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000147" target="1000155">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000147" target="1000155">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000147" target="1000223">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000150" target="1000147">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000153" target="1000157">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000155" target="1000153">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000157" target="1000160">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000160" target="1000167">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000164" target="1000179">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000164" target="1000150">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000165" target="1000164">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000165" target="1000173">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000167" target="1000165">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000170" target="1000164">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000171" target="1000170">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000173" target="1000171">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000179" target="1000150">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000179" target="1000186">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000183" target="1000193">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000185" target="1000183">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000186" target="1000185">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000191" target="1000197">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000191" target="1000203">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000193" target="1000191">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000197" target="1000150">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000197" target="1000223">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000201" target="1000209">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000201" target="1000216">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000203" target="1000201">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000207" target="1000179">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000209" target="1000207">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000214" target="1000179">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000214" target="1000220">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000216" target="1000214">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000220" target="1000179">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000223" target="1000226">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000226" target="1000228">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
  </graph>
</graphml>
