<?xml version="1.0" encoding="UTF-8"?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns
     http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd">

  <!-- Created by Graph::Easy v0.76 at Tue Jun  8 23:55:01 2021 -->

  <key id="d0" for="edge" attr.name="arrowstyle" attr.type="string">
    <default>open</default>
  </key>
  <key id="d1" for="graph" attr.name="colorscheme" attr.type="string">
    <default>w3c</default>
  </key>
  <key id="d2" for="graph" attr.name="flow" attr.type="string">
    <default>east</default>
  </key>
  <key id="d3" for="graph" attr.name="title" attr.type="string">
    <default></default>
  </key>
  <key id="d4" for="node" attr.name="label" attr.type="string"/>
  <key id="d5" for="edge" attr.name="label" attr.type="string"/>
  <key id="d6" for="edge" attr.name="style" attr.type="string">
    <default>solid</default>
  </key>

  <graph id="G" edgedefault="directed">
    <data key="d1">x11</data>
    <data key="d2">south</data>
    <data key="d3">main</data>
    <node id="1000118">
      <data key="d4">(METHOD,main)</data>
    </node>
    <node id="1000122">
      <data key="d4">(scanf,scanf(&quot;%d&quot;, &amp;n))</data>
    </node>
    <node id="1000124">
      <data key="d4">(&lt;operator&gt;.addressOf,&amp;n)</data>
    </node>
    <node id="1000129">
      <data key="d4">(&lt;operator&gt;.assignment,i = 0)</data>
    </node>
    <node id="1000132">
      <data key="d4">(&lt;operator&gt;.lessThan,i &lt; n)</data>
    </node>
    <node id="1000135">
      <data key="d4">(&lt;operator&gt;.postIncrement,i++)</data>
    </node>
    <node id="1000139">
      <data key="d4">(scanf,scanf(&quot;%d&quot;, &amp;integer))</data>
    </node>
    <node id="1000141">
      <data key="d4">(&lt;operator&gt;.addressOf,&amp;integer)</data>
    </node>
    <node id="1000143">
      <data key="d4">(&lt;operator&gt;.assignment,S[i] = integer)</data>
    </node>
    <node id="1000144">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,S[i])</data>
    </node>
    <node id="1000149">
      <data key="d4">(scanf,scanf(&quot;%d&quot;, &amp;q))</data>
    </node>
    <node id="1000151">
      <data key="d4">(&lt;operator&gt;.addressOf,&amp;q)</data>
    </node>
    <node id="1000156">
      <data key="d4">(&lt;operator&gt;.assignment,j = 0)</data>
    </node>
    <node id="1000159">
      <data key="d4">(&lt;operator&gt;.lessThan,j &lt; q)</data>
    </node>
    <node id="1000162">
      <data key="d4">(&lt;operator&gt;.postIncrement,j++)</data>
    </node>
    <node id="1000166">
      <data key="d4">(scanf,scanf(&quot;%d&quot;, &amp;integer))</data>
    </node>
    <node id="1000168">
      <data key="d4">(&lt;operator&gt;.addressOf,&amp;integer)</data>
    </node>
    <node id="1000170">
      <data key="d4">(&lt;operator&gt;.assignment,T[j] = integer)</data>
    </node>
    <node id="1000171">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,T[j])</data>
    </node>
    <node id="1000178">
      <data key="d4">(&lt;operator&gt;.assignment,t = 0)</data>
    </node>
    <node id="1000181">
      <data key="d4">(&lt;operator&gt;.lessThan,t &lt; q)</data>
    </node>
    <node id="1000184">
      <data key="d4">(&lt;operator&gt;.postIncrement,t++)</data>
    </node>
    <node id="1000187">
      <data key="d4">(&lt;operator&gt;.assignment,bools[t] = 1)</data>
    </node>
    <node id="1000188">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,bools[t])</data>
    </node>
    <node id="1000193">
      <data key="d4">(&lt;operator&gt;.assignment,c = 0)</data>
    </node>
    <node id="1000198">
      <data key="d4">(&lt;operator&gt;.assignment,p = 0)</data>
    </node>
    <node id="1000201">
      <data key="d4">(&lt;operator&gt;.lessThan,p &lt; q)</data>
    </node>
    <node id="1000204">
      <data key="d4">(&lt;operator&gt;.postIncrement,p++)</data>
    </node>
    <node id="1000208">
      <data key="d4">(&lt;operator&gt;.assignment,current = T[p])</data>
    </node>
    <node id="1000210">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,T[p])</data>
    </node>
    <node id="1000214">
      <data key="d4">(&lt;operator&gt;.assignment,isTrue = bSearch(S, 0, n-1, current))</data>
    </node>
    <node id="1000216">
      <data key="d4">(bSearch,bSearch(S, 0, n-1, current))</data>
    </node>
    <node id="1000219">
      <data key="d4">(&lt;operator&gt;.subtraction,n-1)</data>
    </node>
    <node id="1000224">
      <data key="d4">(&lt;operator&gt;.logicalAnd,isTrue == 0 &amp;&amp; bools[p] == 1)</data>
    </node>
    <node id="1000225">
      <data key="d4">(&lt;operator&gt;.equals,isTrue == 0)</data>
    </node>
    <node id="1000228">
      <data key="d4">(&lt;operator&gt;.equals,bools[p] == 1)</data>
    </node>
    <node id="1000229">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,bools[p])</data>
    </node>
    <node id="1000234">
      <data key="d4">(&lt;operator&gt;.assignment,c = c + 1)</data>
    </node>
    <node id="1000236">
      <data key="d4">(&lt;operator&gt;.addition,c + 1)</data>
    </node>
    <node id="1000239">
      <data key="d4">(&lt;operator&gt;.assignment,bools[p] = 0)</data>
    </node>
    <node id="1000240">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,bools[p])</data>
    </node>
    <node id="1000244">
      <data key="d4">(printf,printf(&quot;%d\n&quot;, c))</data>
    </node>
    <node id="1000247">
      <data key="d4">(METHOD_RETURN,int)</data>
    </node>

    <edge source="1000118" target="1000124">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000122" target="1000129">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000124" target="1000122">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000129" target="1000132">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000132" target="1000141">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000132" target="1000141">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000132" target="1000151">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000135" target="1000132">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000139" target="1000144">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000141" target="1000139">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000143" target="1000135">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000144" target="1000143">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000149" target="1000156">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000151" target="1000149">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000156" target="1000159">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000159" target="1000168">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000159" target="1000168">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000159" target="1000178">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000162" target="1000159">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000166" target="1000171">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000168" target="1000166">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000170" target="1000162">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000171" target="1000170">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000178" target="1000181">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000181" target="1000188">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000181" target="1000188">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000181" target="1000193">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000184" target="1000181">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000187" target="1000184">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000188" target="1000187">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000193" target="1000198">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000198" target="1000201">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000201" target="1000210">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000201" target="1000210">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000201" target="1000244">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000204" target="1000201">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000208" target="1000219">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000210" target="1000208">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000214" target="1000225">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000216" target="1000214">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000219" target="1000216">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000224" target="1000204">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000224" target="1000236">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000225" target="1000224">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000225" target="1000229">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000228" target="1000224">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000229" target="1000228">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000234" target="1000240">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000236" target="1000234">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000239" target="1000204">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000240" target="1000239">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000244" target="1000247">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
  </graph>
</graphml>
