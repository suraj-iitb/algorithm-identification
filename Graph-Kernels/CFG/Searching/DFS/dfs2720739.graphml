<?xml version="1.0" encoding="UTF-8"?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns
     http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd">

  <!-- Created by Graph::Easy v0.76 at Tue Jun  8 22:06:12 2021 -->

  <key id="d0" for="edge" attr.name="arrowstyle" attr.type="string">
    <default>open</default>
  </key>
  <key id="d1" for="graph" attr.name="colorscheme" attr.type="string">
    <default>w3c</default>
  </key>
  <key id="d2" for="graph" attr.name="flow" attr.type="string">
    <default>east</default>
  </key>
  <key id="d3" for="graph" attr.name="title" attr.type="string">
    <default></default>
  </key>
  <key id="d4" for="node" attr.name="label" attr.type="string"/>
  <key id="d5" for="edge" attr.name="label" attr.type="string"/>
  <key id="d6" for="edge" attr.name="style" attr.type="string">
    <default>solid</default>
  </key>

  <graph id="G" edgedefault="directed">
    <data key="d1">x11</data>
    <data key="d2">south</data>
    <data key="d3">main</data>
    <node id="1000237">
      <data key="d4">(METHOD,main)</data>
    </node>
    <node id="1000247">
      <data key="d4">(scanf,scanf(&quot;%d&quot;, &amp;n))</data>
    </node>
    <node id="1000249">
      <data key="d4">(&lt;operator&gt;.addressOf,&amp;n)</data>
    </node>
    <node id="1000251">
      <data key="d4">(&lt;operator&gt;.assignment,top = (node **)malloc(sizeof(node *) * n))</data>
    </node>
    <node id="1000253">
      <data key="d4">(&lt;operator&gt;.cast,(node **)malloc(sizeof(node *) * n))</data>
    </node>
    <node id="1000254">
      <data key="d4">(UNKNOWN,node **,node **)</data>
    </node>
    <node id="1000255">
      <data key="d4">(malloc,malloc(sizeof(node *) * n))</data>
    </node>
    <node id="1000256">
      <data key="d4">(&lt;operator&gt;.multiplication,sizeof(node *) * n)</data>
    </node>
    <node id="1000257">
      <data key="d4">(&lt;operator&gt;.sizeOf,sizeof(node *))</data>
    </node>
    <node id="1000258">
      <data key="d4">(UNKNOWN,node *,node *)</data>
    </node>
    <node id="1000261">
      <data key="d4">(&lt;operator&gt;.assignment,i = 0)</data>
    </node>
    <node id="1000264">
      <data key="d4">(&lt;operator&gt;.lessThan,i &lt; n)</data>
    </node>
    <node id="1000267">
      <data key="d4">(&lt;operator&gt;.postIncrement,i++)</data>
    </node>
    <node id="1000270">
      <data key="d4">(scanf,scanf(&quot;%d %d&quot;, &amp;u, &amp;k))</data>
    </node>
    <node id="1000272">
      <data key="d4">(&lt;operator&gt;.addressOf,&amp;u)</data>
    </node>
    <node id="1000274">
      <data key="d4">(&lt;operator&gt;.addressOf,&amp;k)</data>
    </node>
    <node id="1000276">
      <data key="d4">(&lt;operator&gt;.assignment,top[i] = allocNode(u, k))</data>
    </node>
    <node id="1000277">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,top[i])</data>
    </node>
    <node id="1000280">
      <data key="d4">(allocNode,allocNode(u, k))</data>
    </node>
    <node id="1000284">
      <data key="d4">(&lt;operator&gt;.assignment,j = 0)</data>
    </node>
    <node id="1000287">
      <data key="d4">(&lt;operator&gt;.lessThan,j &lt; k)</data>
    </node>
    <node id="1000290">
      <data key="d4">(&lt;operator&gt;.postIncrement,j++)</data>
    </node>
    <node id="1000293">
      <data key="d4">(scanf,scanf(&quot;%d&quot;, &amp;v))</data>
    </node>
    <node id="1000295">
      <data key="d4">(&lt;operator&gt;.addressOf,&amp;v)</data>
    </node>
    <node id="1000297">
      <data key="d4">(&lt;operator&gt;.assignment,top[i]-&gt;chldHead[j] = v - 1)</data>
    </node>
    <node id="1000298">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,top[i]-&gt;chldHead[j])</data>
    </node>
    <node id="1000299">
      <data key="d4">(&lt;operator&gt;.indirectFieldAccess,top[i]-&gt;chldHead)</data>
    </node>
    <node id="1000300">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,top[i])</data>
    </node>
    <node id="1000303">
      <data key="d4">(FIELD_IDENTIFIER,chldHead,chldHead)</data>
    </node>
    <node id="1000305">
      <data key="d4">(&lt;operator&gt;.subtraction,v - 1)</data>
    </node>
    <node id="1000308">
      <data key="d4">(&lt;operator&gt;.assignment,time = 0)</data>
    </node>
    <node id="1000312">
      <data key="d4">(&lt;operator&gt;.assignment,i = 0)</data>
    </node>
    <node id="1000315">
      <data key="d4">(&lt;operator&gt;.lessThan,i &lt; n)</data>
    </node>
    <node id="1000318">
      <data key="d4">(&lt;operator&gt;.postIncrement,i++)</data>
    </node>
    <node id="1000321">
      <data key="d4">(&lt;operator&gt;.equals,top[i]-&gt;forward == 0)</data>
    </node>
    <node id="1000322">
      <data key="d4">(&lt;operator&gt;.indirectFieldAccess,top[i]-&gt;forward)</data>
    </node>
    <node id="1000323">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,top[i])</data>
    </node>
    <node id="1000326">
      <data key="d4">(FIELD_IDENTIFIER,forward,forward)</data>
    </node>
    <node id="1000328">
      <data key="d4">(dfs,dfs(top, i, &amp;time))</data>
    </node>
    <node id="1000331">
      <data key="d4">(&lt;operator&gt;.addressOf,&amp;time)</data>
    </node>
    <node id="1000334">
      <data key="d4">(&lt;operator&gt;.assignment,i = 0)</data>
    </node>
    <node id="1000337">
      <data key="d4">(&lt;operator&gt;.lessThan,i &lt; n)</data>
    </node>
    <node id="1000340">
      <data key="d4">(&lt;operator&gt;.postIncrement,i++)</data>
    </node>
    <node id="1000342">
      <data key="d4">(printf,printf(&quot;%d %d %d\n&quot;, top[i]-&gt;value, top[i]-&gt;forward, top[i]-&gt;backward))</data>
    </node>
    <node id="1000344">
      <data key="d4">(&lt;operator&gt;.indirectFieldAccess,top[i]-&gt;value)</data>
    </node>
    <node id="1000345">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,top[i])</data>
    </node>
    <node id="1000348">
      <data key="d4">(FIELD_IDENTIFIER,value,value)</data>
    </node>
    <node id="1000349">
      <data key="d4">(&lt;operator&gt;.indirectFieldAccess,top[i]-&gt;forward)</data>
    </node>
    <node id="1000350">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,top[i])</data>
    </node>
    <node id="1000353">
      <data key="d4">(FIELD_IDENTIFIER,forward,forward)</data>
    </node>
    <node id="1000354">
      <data key="d4">(&lt;operator&gt;.indirectFieldAccess,top[i]-&gt;backward)</data>
    </node>
    <node id="1000355">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,top[i])</data>
    </node>
    <node id="1000358">
      <data key="d4">(FIELD_IDENTIFIER,backward,backward)</data>
    </node>
    <node id="1000359">
      <data key="d4">(terminate,terminate(top, n))</data>
    </node>
    <node id="1000362">
      <data key="d4">(RETURN,return 0;,return 0;)</data>
    </node>
    <node id="1000364">
      <data key="d4">(METHOD_RETURN,int)</data>
    </node>

    <edge source="1000237" target="1000249">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000247" target="1000254">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000249" target="1000247">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000251" target="1000261">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000253" target="1000251">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000254" target="1000258">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000255" target="1000253">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000256" target="1000255">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000257" target="1000256">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000258" target="1000257">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000261" target="1000264">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000264" target="1000272">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000264" target="1000272">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000264" target="1000308">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000267" target="1000264">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000270" target="1000277">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000272" target="1000274">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000274" target="1000270">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000276" target="1000284">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000277" target="1000280">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000280" target="1000276">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000284" target="1000287">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000287" target="1000267">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000287" target="1000295">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000287" target="1000295">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000290" target="1000287">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000293" target="1000300">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000295" target="1000293">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000297" target="1000290">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000298" target="1000305">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000299" target="1000298">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000300" target="1000303">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000303" target="1000299">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000305" target="1000297">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000308" target="1000312">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000312" target="1000315">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000315" target="1000323">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000315" target="1000323">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000315" target="1000334">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000318" target="1000315">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000321" target="1000318">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000321" target="1000331">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000322" target="1000321">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000323" target="1000326">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000326" target="1000322">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000328" target="1000318">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000331" target="1000328">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000334" target="1000337">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000337" target="1000345">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000337" target="1000345">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000337" target="1000359">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000340" target="1000337">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000342" target="1000340">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000344" target="1000350">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000345" target="1000348">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000348" target="1000344">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000349" target="1000355">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000350" target="1000353">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000353" target="1000349">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000354" target="1000342">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000355" target="1000358">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000358" target="1000354">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000359" target="1000362">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000362" target="1000364">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
  </graph>
</graphml>
