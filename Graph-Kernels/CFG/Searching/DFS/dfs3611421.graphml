<?xml version="1.0" encoding="UTF-8"?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns
     http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd">

  <!-- Created by Graph::Easy v0.76 at Tue Jun  8 22:25:51 2021 -->

  <key id="d0" for="edge" attr.name="arrowstyle" attr.type="string">
    <default>open</default>
  </key>
  <key id="d1" for="graph" attr.name="colorscheme" attr.type="string">
    <default>w3c</default>
  </key>
  <key id="d2" for="graph" attr.name="flow" attr.type="string">
    <default>east</default>
  </key>
  <key id="d3" for="graph" attr.name="title" attr.type="string">
    <default></default>
  </key>
  <key id="d4" for="node" attr.name="label" attr.type="string"/>
  <key id="d5" for="edge" attr.name="label" attr.type="string"/>
  <key id="d6" for="edge" attr.name="style" attr.type="string">
    <default>solid</default>
  </key>

  <graph id="G" edgedefault="directed">
    <data key="d1">x11</data>
    <data key="d2">south</data>
    <data key="d3">main</data>
    <node id="1000228">
      <data key="d4">(METHOD,main)</data>
    </node>
    <node id="1000233">
      <data key="d4">(scanf,scanf(&quot;%d&quot;, &amp;n))</data>
    </node>
    <node id="1000235">
      <data key="d4">(&lt;operator&gt;.addressOf,&amp;n)</data>
    </node>
    <node id="1000239">
      <data key="d4">(&lt;operator&gt;.assignment,i = 1)</data>
    </node>
    <node id="1000242">
      <data key="d4">(&lt;operator&gt;.lessEqualsThan,i &lt;= n)</data>
    </node>
    <node id="1000245">
      <data key="d4">(&lt;operator&gt;.postIncrement,i++)</data>
    </node>
    <node id="1000248">
      <data key="d4">(scanf,scanf(&quot;%d&quot;, &amp;u[i]))</data>
    </node>
    <node id="1000250">
      <data key="d4">(&lt;operator&gt;.addressOf,&amp;u[i])</data>
    </node>
    <node id="1000251">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,u[i])</data>
    </node>
    <node id="1000254">
      <data key="d4">(scanf,scanf(&quot;%d&quot;, &amp;k))</data>
    </node>
    <node id="1000256">
      <data key="d4">(&lt;operator&gt;.addressOf,&amp;k)</data>
    </node>
    <node id="1000260">
      <data key="d4">(&lt;operator&gt;.assignment,j = 0)</data>
    </node>
    <node id="1000263">
      <data key="d4">(&lt;operator&gt;.lessThan,j &lt; k)</data>
    </node>
    <node id="1000266">
      <data key="d4">(&lt;operator&gt;.postIncrement,j++)</data>
    </node>
    <node id="1000269">
      <data key="d4">(scanf,scanf(&quot;%d&quot;, &amp;next[u[i]][j]))</data>
    </node>
    <node id="1000271">
      <data key="d4">(&lt;operator&gt;.addressOf,&amp;next[u[i]][j])</data>
    </node>
    <node id="1000272">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,next[u[i]][j])</data>
    </node>
    <node id="1000273">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,next[u[i]])</data>
    </node>
    <node id="1000275">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,u[i])</data>
    </node>
    <node id="1000281">
      <data key="d4">(&lt;operator&gt;.assignment,i = 1)</data>
    </node>
    <node id="1000284">
      <data key="d4">(&lt;operator&gt;.lessEqualsThan,i &lt;= n)</data>
    </node>
    <node id="1000287">
      <data key="d4">(&lt;operator&gt;.postIncrement,i++)</data>
    </node>
    <node id="1000291">
      <data key="d4">(&lt;operator&gt;.equals,f[i] == 0)</data>
    </node>
    <node id="1000292">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,f[i])</data>
    </node>
    <node id="1000296">
      <data key="d4">(depth_first_search,depth_first_search(i))</data>
    </node>
    <node id="1000300">
      <data key="d4">(&lt;operator&gt;.assignment,i = 1)</data>
    </node>
    <node id="1000303">
      <data key="d4">(&lt;operator&gt;.lessEqualsThan,i &lt;= n)</data>
    </node>
    <node id="1000306">
      <data key="d4">(&lt;operator&gt;.postIncrement,i++)</data>
    </node>
    <node id="1000309">
      <data key="d4">(printf,printf(&quot;%d %d %d\n&quot;, u[i], d[i], f[i]))</data>
    </node>
    <node id="1000311">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,u[i])</data>
    </node>
    <node id="1000314">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,d[i])</data>
    </node>
    <node id="1000317">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,f[i])</data>
    </node>
    <node id="1000320">
      <data key="d4">(RETURN,return 0;,return 0;)</data>
    </node>
    <node id="1000322">
      <data key="d4">(METHOD_RETURN,int)</data>
    </node>

    <edge source="1000228" target="1000235">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000233" target="1000239">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000235" target="1000233">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000239" target="1000242">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000242" target="1000251">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000242" target="1000251">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000242" target="1000281">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000245" target="1000242">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000248" target="1000256">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000250" target="1000248">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000251" target="1000250">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000254" target="1000260">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000256" target="1000254">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000260" target="1000263">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000263" target="1000245">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000263" target="1000275">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000263" target="1000275">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000266" target="1000263">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000269" target="1000266">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000271" target="1000269">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000272" target="1000271">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000273" target="1000272">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000275" target="1000273">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000281" target="1000284">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000284" target="1000292">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000284" target="1000292">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000284" target="1000300">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000287" target="1000284">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000291" target="1000287">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000291" target="1000296">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000292" target="1000291">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000296" target="1000287">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000300" target="1000303">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000303" target="1000311">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000303" target="1000311">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000303" target="1000320">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000306" target="1000303">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000309" target="1000306">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000311" target="1000314">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000314" target="1000317">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000317" target="1000309">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000320" target="1000322">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
  </graph>
</graphml>
