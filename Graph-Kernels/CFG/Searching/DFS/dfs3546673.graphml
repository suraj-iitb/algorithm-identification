<?xml version="1.0" encoding="UTF-8"?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns
     http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd">

  <!-- Created by Graph::Easy v0.76 at Tue Jun  8 22:12:52 2021 -->

  <key id="d0" for="edge" attr.name="arrowstyle" attr.type="string">
    <default>open</default>
  </key>
  <key id="d1" for="graph" attr.name="colorscheme" attr.type="string">
    <default>w3c</default>
  </key>
  <key id="d2" for="graph" attr.name="flow" attr.type="string">
    <default>east</default>
  </key>
  <key id="d3" for="graph" attr.name="title" attr.type="string">
    <default></default>
  </key>
  <key id="d4" for="node" attr.name="label" attr.type="string"/>
  <key id="d5" for="edge" attr.name="label" attr.type="string"/>
  <key id="d6" for="edge" attr.name="style" attr.type="string">
    <default>solid</default>
  </key>

  <graph id="G" edgedefault="directed">
    <data key="d1">x11</data>
    <data key="d2">south</data>
    <data key="d3">DFS</data>
    <node id="1000189">
      <data key="d4">(METHOD,DFS)</data>
    </node>
    <node id="1000195">
      <data key="d4">(&lt;operator&gt;.assignment,node = Pop(s) - 1)</data>
    </node>
    <node id="1000197">
      <data key="d4">(&lt;operator&gt;.subtraction,Pop(s) - 1)</data>
    </node>
    <node id="1000198">
      <data key="d4">(Pop,Pop(s))</data>
    </node>
    <node id="1000202">
      <data key="d4">(&lt;operator&gt;.assignment,ref = 1)</data>
    </node>
    <node id="1000206">
      <data key="d4">(&lt;operator&gt;.logicalOr,ts[node].start &gt; 0 || ts[node].end &gt; 0)</data>
    </node>
    <node id="1000207">
      <data key="d4">(&lt;operator&gt;.greaterThan,ts[node].start &gt; 0)</data>
    </node>
    <node id="1000208">
      <data key="d4">(&lt;operator&gt;.fieldAccess,ts[node].start)</data>
    </node>
    <node id="1000209">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,ts[node])</data>
    </node>
    <node id="1000212">
      <data key="d4">(FIELD_IDENTIFIER,start,start)</data>
    </node>
    <node id="1000214">
      <data key="d4">(&lt;operator&gt;.greaterThan,ts[node].end &gt; 0)</data>
    </node>
    <node id="1000215">
      <data key="d4">(&lt;operator&gt;.fieldAccess,ts[node].end)</data>
    </node>
    <node id="1000216">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,ts[node])</data>
    </node>
    <node id="1000219">
      <data key="d4">(FIELD_IDENTIFIER,end,end)</data>
    </node>
    <node id="1000222">
      <data key="d4">(RETURN,return;,return;)</data>
    </node>
    <node id="1000223">
      <data key="d4">(&lt;operator&gt;.assignment,ts[node].start = cnt++)</data>
    </node>
    <node id="1000224">
      <data key="d4">(&lt;operator&gt;.fieldAccess,ts[node].start)</data>
    </node>
    <node id="1000225">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,ts[node])</data>
    </node>
    <node id="1000228">
      <data key="d4">(FIELD_IDENTIFIER,start,start)</data>
    </node>
    <node id="1000229">
      <data key="d4">(&lt;operator&gt;.postIncrement,cnt++)</data>
    </node>
    <node id="1000235">
      <data key="d4">(&lt;operator&gt;.greaterThan,ref &gt; data[node].k)</data>
    </node>
    <node id="1000237">
      <data key="d4">(&lt;operator&gt;.fieldAccess,data[node].k)</data>
    </node>
    <node id="1000238">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,data[node])</data>
    </node>
    <node id="1000241">
      <data key="d4">(FIELD_IDENTIFIER,k,k)</data>
    </node>
    <node id="1000244">
      <data key="d4">(Push,Push(s, data[node].v[ref - 1]))</data>
    </node>
    <node id="1000246">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,data[node].v[ref - 1])</data>
    </node>
    <node id="1000247">
      <data key="d4">(&lt;operator&gt;.fieldAccess,data[node].v)</data>
    </node>
    <node id="1000248">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,data[node])</data>
    </node>
    <node id="1000251">
      <data key="d4">(FIELD_IDENTIFIER,v,v)</data>
    </node>
    <node id="1000252">
      <data key="d4">(&lt;operator&gt;.subtraction,ref - 1)</data>
    </node>
    <node id="1000255">
      <data key="d4">(DFS,DFS(s, ts, data))</data>
    </node>
    <node id="1000259">
      <data key="d4">(&lt;operator&gt;.postIncrement,ref++)</data>
    </node>
    <node id="1000261">
      <data key="d4">(&lt;operator&gt;.assignment,ts[node].end = cnt++)</data>
    </node>
    <node id="1000262">
      <data key="d4">(&lt;operator&gt;.fieldAccess,ts[node].end)</data>
    </node>
    <node id="1000263">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,ts[node])</data>
    </node>
    <node id="1000266">
      <data key="d4">(FIELD_IDENTIFIER,end,end)</data>
    </node>
    <node id="1000267">
      <data key="d4">(&lt;operator&gt;.postIncrement,cnt++)</data>
    </node>
    <node id="1000269">
      <data key="d4">(METHOD_RETURN,void)</data>
    </node>

    <edge source="1000189" target="1000198">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000195" target="1000202">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000197" target="1000195">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000198" target="1000197">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000202" target="1000209">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000206" target="1000222">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000206" target="1000225">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000207" target="1000206">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000207" target="1000216">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000208" target="1000207">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000209" target="1000212">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000212" target="1000208">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000214" target="1000206">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000215" target="1000214">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000216" target="1000219">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000219" target="1000215">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000222" target="1000269">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000223" target="1000238">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000223" target="1000263">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000224" target="1000229">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000225" target="1000228">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000228" target="1000224">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000229" target="1000223">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000235" target="1000248">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000235" target="1000263">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000237" target="1000235">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000238" target="1000241">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000241" target="1000237">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000244" target="1000255">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000246" target="1000244">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000247" target="1000252">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000248" target="1000251">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000251" target="1000247">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000252" target="1000246">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000255" target="1000259">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000259" target="1000238">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000259" target="1000263">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000261" target="1000269">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000262" target="1000267">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000263" target="1000266">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000266" target="1000262">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000267" target="1000261">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
  </graph>
</graphml>
