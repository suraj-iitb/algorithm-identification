<?xml version="1.0" encoding="UTF-8"?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns
     http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd">

  <!-- Created by Graph::Easy v0.76 at Tue Oct 27 10:56:31 2020 -->

  <key id="d0" for="edge" attr.name="arrowstyle" attr.type="string">
    <default>open</default>
  </key>
  <key id="d1" for="graph" attr.name="colorscheme" attr.type="string">
    <default>w3c</default>
  </key>
  <key id="d2" for="graph" attr.name="flow" attr.type="string">
    <default>east</default>
  </key>
  <key id="d3" for="graph" attr.name="title" attr.type="string">
    <default></default>
  </key>
  <key id="d4" for="node" attr.name="label" attr.type="string"/>
  <key id="d5" for="edge" attr.name="label" attr.type="string"/>
  <key id="d6" for="edge" attr.name="style" attr.type="string">
    <default>solid</default>
  </key>

  <graph id="G" edgedefault="directed">
    <data key="d1">x11</data>
    <data key="d2">south</data>
    <data key="d3">main</data>
    <node id="1000102">
      <data key="d4">(METHOD,main)</data>
    </node>
    <node id="1000110">
      <data key="d4">(scanf,scanf(&quot;%d&quot;,&amp;i))</data>
    </node>
    <node id="1000112">
      <data key="d4">(&lt;operator&gt;.addressOf,&amp;i)</data>
    </node>
    <node id="1000114">
      <data key="d4">(&lt;operator&gt;.assignment,R=malloc(sizeof(short)*i+1))</data>
    </node>
    <node id="1000116">
      <data key="d4">(malloc,malloc(sizeof(short)*i+1))</data>
    </node>
    <node id="1000117">
      <data key="d4">(&lt;operator&gt;.addition,sizeof(short)*i+1)</data>
    </node>
    <node id="1000118">
      <data key="d4">(&lt;operator&gt;.multiplication,sizeof(short)*i)</data>
    </node>
    <node id="1000119">
      <data key="d4">(&lt;operator&gt;.sizeOf,sizeof(short))</data>
    </node>
    <node id="1000123">
      <data key="d4">(&lt;operator&gt;.assignment,L=malloc(sizeof(short)*i+1))</data>
    </node>
    <node id="1000125">
      <data key="d4">(malloc,malloc(sizeof(short)*i+1))</data>
    </node>
    <node id="1000126">
      <data key="d4">(&lt;operator&gt;.addition,sizeof(short)*i+1)</data>
    </node>
    <node id="1000127">
      <data key="d4">(&lt;operator&gt;.multiplication,sizeof(short)*i)</data>
    </node>
    <node id="1000128">
      <data key="d4">(&lt;operator&gt;.sizeOf,sizeof(short))</data>
    </node>
    <node id="1000133">
      <data key="d4">(&lt;operator&gt;.assignment,j=0)</data>
    </node>
    <node id="1000136">
      <data key="d4">(&lt;operator&gt;.lessEqualsThan,j&lt;=MIN)</data>
    </node>
    <node id="1000139">
      <data key="d4">(&lt;operator&gt;.postIncrement,j++)</data>
    </node>
    <node id="1000142">
      <data key="d4">(&lt;operator&gt;.assignment,num[j]=0)</data>
    </node>
    <node id="1000143">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,num[j])</data>
    </node>
    <node id="1000148">
      <data key="d4">(&lt;operator&gt;.assignment,j=0)</data>
    </node>
    <node id="1000151">
      <data key="d4">(&lt;operator&gt;.lessThan,j&lt;i)</data>
    </node>
    <node id="1000154">
      <data key="d4">(&lt;operator&gt;.postIncrement,j++)</data>
    </node>
    <node id="1000157">
      <data key="d4">(scanf,scanf(&quot;%hu&quot;,&amp;R[j+1]))</data>
    </node>
    <node id="1000159">
      <data key="d4">(&lt;operator&gt;.addressOf,&amp;R[j+1])</data>
    </node>
    <node id="1000160">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,R[j+1])</data>
    </node>
    <node id="1000162">
      <data key="d4">(&lt;operator&gt;.addition,j+1)</data>
    </node>
    <node id="1000165">
      <data key="d4">(&lt;operator&gt;.postIncrement,num[R[j+1]]++)</data>
    </node>
    <node id="1000166">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,num[R[j+1]])</data>
    </node>
    <node id="1000168">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,R[j+1])</data>
    </node>
    <node id="1000170">
      <data key="d4">(&lt;operator&gt;.addition,j+1)</data>
    </node>
    <node id="1000174">
      <data key="d4">(&lt;operator&gt;.assignment,j=1)</data>
    </node>
    <node id="1000177">
      <data key="d4">(&lt;operator&gt;.lessEqualsThan,j&lt;=MIN)</data>
    </node>
    <node id="1000180">
      <data key="d4">(&lt;operator&gt;.postIncrement,j++)</data>
    </node>
    <node id="1000183">
      <data key="d4">(&lt;operator&gt;.assignmentPlus,num[j]+=num[j-1])</data>
    </node>
    <node id="1000184">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,num[j])</data>
    </node>
    <node id="1000187">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,num[j-1])</data>
    </node>
    <node id="1000189">
      <data key="d4">(&lt;operator&gt;.subtraction,j-1)</data>
    </node>
    <node id="1000193">
      <data key="d4">(&lt;operator&gt;.assignment,k=1)</data>
    </node>
    <node id="1000196">
      <data key="d4">(&lt;operator&gt;.lessEqualsThan,k&lt;=i)</data>
    </node>
    <node id="1000199">
      <data key="d4">(&lt;operator&gt;.postIncrement,k++)</data>
    </node>
    <node id="1000202">
      <data key="d4">(&lt;operator&gt;.assignment,L[num[R[k]]]=R[k])</data>
    </node>
    <node id="1000203">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,L[num[R[k]]])</data>
    </node>
    <node id="1000205">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,num[R[k]])</data>
    </node>
    <node id="1000207">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,R[k])</data>
    </node>
    <node id="1000210">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,R[k])</data>
    </node>
    <node id="1000213">
      <data key="d4">(&lt;operator&gt;.postDecrement,num[R[k]]--)</data>
    </node>
    <node id="1000214">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,num[R[k]])</data>
    </node>
    <node id="1000216">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,R[k])</data>
    </node>
    <node id="1000220">
      <data key="d4">(&lt;operator&gt;.assignment,j=1)</data>
    </node>
    <node id="1000223">
      <data key="d4">(&lt;operator&gt;.lessEqualsThan,j&lt;=i)</data>
    </node>
    <node id="1000226">
      <data key="d4">(&lt;operator&gt;.postIncrement,j++)</data>
    </node>
    <node id="1000230">
      <data key="d4">(&lt;operator&gt;.greaterThan,j&gt;1)</data>
    </node>
    <node id="1000233">
      <data key="d4">(printf,printf(&quot; &quot;))</data>
    </node>
    <node id="1000235">
      <data key="d4">(printf,printf(&quot;%d&quot;,L[j]))</data>
    </node>
    <node id="1000237">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,L[j])</data>
    </node>
    <node id="1000240">
      <data key="d4">(printf,printf(&quot;\n&quot;))</data>
    </node>
    <node id="1000242">
      <data key="d4">(RETURN,return 0;,return 0;)</data>
    </node>
    <node id="1000244">
      <data key="d4">(METHOD_RETURN,int)</data>
    </node>

    <edge source="1000102" target="1000112">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000110" target="1000119">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000112" target="1000110">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000114" target="1000128">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000116" target="1000114">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000117" target="1000116">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000118" target="1000117">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000119" target="1000118">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000123" target="1000133">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000125" target="1000123">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000126" target="1000125">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000127" target="1000126">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000128" target="1000127">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000133" target="1000136">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000136" target="1000143">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000136" target="1000143">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000136" target="1000148">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000139" target="1000136">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000142" target="1000139">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000143" target="1000142">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000148" target="1000151">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000151" target="1000162">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000151" target="1000162">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000151" target="1000174">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000154" target="1000151">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000157" target="1000170">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000159" target="1000157">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000160" target="1000159">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000162" target="1000160">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000165" target="1000154">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000166" target="1000165">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000168" target="1000166">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000170" target="1000168">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000174" target="1000177">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000177" target="1000184">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000177" target="1000184">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000177" target="1000193">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000180" target="1000177">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000183" target="1000180">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000184" target="1000189">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000187" target="1000183">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000189" target="1000187">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000193" target="1000196">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000196" target="1000207">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000196" target="1000207">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000196" target="1000220">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000199" target="1000196">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000202" target="1000216">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000203" target="1000210">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000205" target="1000203">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000207" target="1000205">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000210" target="1000202">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000213" target="1000199">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000214" target="1000213">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000216" target="1000214">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000220" target="1000223">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000223" target="1000230">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000223" target="1000230">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000223" target="1000240">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000226" target="1000223">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000230" target="1000233">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000230" target="1000237">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000233" target="1000237">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000235" target="1000226">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000237" target="1000235">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000240" target="1000242">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000242" target="1000244">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
  </graph>
</graphml>
