<?xml version="1.0" encoding="UTF-8"?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns
     http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd">

  <!-- Created by Graph::Easy v0.76 at Tue Oct 27 11:25:32 2020 -->

  <key id="d0" for="edge" attr.name="arrowstyle" attr.type="string">
    <default>open</default>
  </key>
  <key id="d1" for="graph" attr.name="colorscheme" attr.type="string">
    <default>w3c</default>
  </key>
  <key id="d2" for="graph" attr.name="flow" attr.type="string">
    <default>east</default>
  </key>
  <key id="d3" for="graph" attr.name="title" attr.type="string">
    <default></default>
  </key>
  <key id="d4" for="node" attr.name="label" attr.type="string"/>
  <key id="d5" for="edge" attr.name="label" attr.type="string"/>
  <key id="d6" for="edge" attr.name="style" attr.type="string">
    <default>solid</default>
  </key>

  <graph id="G" edgedefault="directed">
    <data key="d1">x11</data>
    <data key="d2">south</data>
    <data key="d3">main</data>
    <node id="1000107">
      <data key="d4">(METHOD,main)</data>
    </node>
    <node id="1000112">
      <data key="d4">(scanf,scanf(&quot;%d&quot;,&amp;a))</data>
    </node>
    <node id="1000114">
      <data key="d4">(&lt;operator&gt;.addressOf,&amp;a)</data>
    </node>
    <node id="1000116">
      <data key="d4">(&lt;operator&gt;.assignment,num = (int*)malloc(a*sizeof(int)))</data>
    </node>
    <node id="1000118">
      <data key="d4">(&lt;operator&gt;.cast,(int*)malloc(a*sizeof(int)))</data>
    </node>
    <node id="1000119">
      <data key="d4">(UNKNOWN,int*,int*)</data>
    </node>
    <node id="1000120">
      <data key="d4">(malloc,malloc(a*sizeof(int)))</data>
    </node>
    <node id="1000121">
      <data key="d4">(&lt;operator&gt;.multiplication,a*sizeof(int))</data>
    </node>
    <node id="1000123">
      <data key="d4">(&lt;operator&gt;.sizeOf,sizeof(int))</data>
    </node>
    <node id="1000126">
      <data key="d4">(&lt;operator&gt;.assignment,i = 0)</data>
    </node>
    <node id="1000129">
      <data key="d4">(&lt;operator&gt;.lessThan,i &lt; a)</data>
    </node>
    <node id="1000132">
      <data key="d4">(&lt;operator&gt;.postIncrement,i++)</data>
    </node>
    <node id="1000135">
      <data key="d4">(scanf,scanf(&quot;%d&quot;,&amp;num[i]))</data>
    </node>
    <node id="1000137">
      <data key="d4">(&lt;operator&gt;.addressOf,&amp;num[i])</data>
    </node>
    <node id="1000138">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,num[i])</data>
    </node>
    <node id="1000141">
      <data key="d4">(SelectionSort,SelectionSort(a,num))</data>
    </node>
    <node id="1000144">
      <data key="d4">(free,free(num))</data>
    </node>
    <node id="1000146">
      <data key="d4">(RETURN,return 0;,return 0;)</data>
    </node>
    <node id="1000148">
      <data key="d4">(METHOD_RETURN,int)</data>
    </node>

    <edge source="1000107" target="1000114">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000112" target="1000119">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000114" target="1000112">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000116" target="1000126">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000118" target="1000116">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000119" target="1000123">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000120" target="1000118">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000121" target="1000120">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000123" target="1000121">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000126" target="1000129">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000129" target="1000138">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000129" target="1000138">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000129" target="1000141">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000132" target="1000129">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000135" target="1000132">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000137" target="1000135">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000138" target="1000137">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000141" target="1000144">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000144" target="1000146">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000146" target="1000148">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
  </graph>
</graphml>
