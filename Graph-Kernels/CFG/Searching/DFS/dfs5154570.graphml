<?xml version="1.0" encoding="UTF-8"?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns
     http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd">

  <!-- Created by Graph::Easy v0.76 at Wed Jun  9 00:10:34 2021 -->

  <key id="d0" for="edge" attr.name="arrowstyle" attr.type="string">
    <default>open</default>
  </key>
  <key id="d1" for="graph" attr.name="colorscheme" attr.type="string">
    <default>w3c</default>
  </key>
  <key id="d2" for="graph" attr.name="flow" attr.type="string">
    <default>east</default>
  </key>
  <key id="d3" for="graph" attr.name="title" attr.type="string">
    <default></default>
  </key>
  <key id="d4" for="node" attr.name="label" attr.type="string"/>
  <key id="d5" for="edge" attr.name="label" attr.type="string"/>
  <key id="d6" for="edge" attr.name="style" attr.type="string">
    <default>solid</default>
  </key>

  <graph id="G" edgedefault="directed">
    <data key="d1">x11</data>
    <data key="d2">south</data>
    <data key="d3">main</data>
    <node id="1000106">
      <data key="d4">(METHOD,main)</data>
    </node>
    <node id="1000113">
      <data key="d4">(scanf,scanf(&quot;%d&quot;,&amp;n))</data>
    </node>
    <node id="1000115">
      <data key="d4">(&lt;operator&gt;.addressOf,&amp;n)</data>
    </node>
    <node id="1000117">
      <data key="d4">(&lt;operator&gt;.assignment,A=(int**)malloc(sizeof(int*)*(n+1)))</data>
    </node>
    <node id="1000119">
      <data key="d4">(&lt;operator&gt;.cast,(int**)malloc(sizeof(int*)*(n+1)))</data>
    </node>
    <node id="1000120">
      <data key="d4">(UNKNOWN,int**,int**)</data>
    </node>
    <node id="1000121">
      <data key="d4">(malloc,malloc(sizeof(int*)*(n+1)))</data>
    </node>
    <node id="1000122">
      <data key="d4">(&lt;operator&gt;.multiplication,sizeof(int*)*(n+1))</data>
    </node>
    <node id="1000123">
      <data key="d4">(&lt;operator&gt;.sizeOf,sizeof(int*))</data>
    </node>
    <node id="1000124">
      <data key="d4">(UNKNOWN,int*,int*)</data>
    </node>
    <node id="1000125">
      <data key="d4">(&lt;operator&gt;.addition,n+1)</data>
    </node>
    <node id="1000128">
      <data key="d4">(&lt;operator&gt;.assignment,d=(int*)malloc(sizeof(int)*(n+1)))</data>
    </node>
    <node id="1000130">
      <data key="d4">(&lt;operator&gt;.cast,(int*)malloc(sizeof(int)*(n+1)))</data>
    </node>
    <node id="1000131">
      <data key="d4">(UNKNOWN,int*,int*)</data>
    </node>
    <node id="1000132">
      <data key="d4">(malloc,malloc(sizeof(int)*(n+1)))</data>
    </node>
    <node id="1000133">
      <data key="d4">(&lt;operator&gt;.multiplication,sizeof(int)*(n+1))</data>
    </node>
    <node id="1000134">
      <data key="d4">(&lt;operator&gt;.sizeOf,sizeof(int))</data>
    </node>
    <node id="1000136">
      <data key="d4">(&lt;operator&gt;.addition,n+1)</data>
    </node>
    <node id="1000139">
      <data key="d4">(&lt;operator&gt;.assignment,f=(int*)malloc(sizeof(int)*(n+1)))</data>
    </node>
    <node id="1000141">
      <data key="d4">(&lt;operator&gt;.cast,(int*)malloc(sizeof(int)*(n+1)))</data>
    </node>
    <node id="1000142">
      <data key="d4">(UNKNOWN,int*,int*)</data>
    </node>
    <node id="1000143">
      <data key="d4">(malloc,malloc(sizeof(int)*(n+1)))</data>
    </node>
    <node id="1000144">
      <data key="d4">(&lt;operator&gt;.multiplication,sizeof(int)*(n+1))</data>
    </node>
    <node id="1000145">
      <data key="d4">(&lt;operator&gt;.sizeOf,sizeof(int))</data>
    </node>
    <node id="1000147">
      <data key="d4">(&lt;operator&gt;.addition,n+1)</data>
    </node>
    <node id="1000150">
      <data key="d4">(&lt;operator&gt;.assignment,color=(int*)malloc(sizeof(int)*(n+1)))</data>
    </node>
    <node id="1000152">
      <data key="d4">(&lt;operator&gt;.cast,(int*)malloc(sizeof(int)*(n+1)))</data>
    </node>
    <node id="1000153">
      <data key="d4">(UNKNOWN,int*,int*)</data>
    </node>
    <node id="1000154">
      <data key="d4">(malloc,malloc(sizeof(int)*(n+1)))</data>
    </node>
    <node id="1000155">
      <data key="d4">(&lt;operator&gt;.multiplication,sizeof(int)*(n+1))</data>
    </node>
    <node id="1000156">
      <data key="d4">(&lt;operator&gt;.sizeOf,sizeof(int))</data>
    </node>
    <node id="1000158">
      <data key="d4">(&lt;operator&gt;.addition,n+1)</data>
    </node>
    <node id="1000162">
      <data key="d4">(&lt;operator&gt;.assignment,i=0)</data>
    </node>
    <node id="1000165">
      <data key="d4">(&lt;operator&gt;.lessEqualsThan,i&lt;=n)</data>
    </node>
    <node id="1000168">
      <data key="d4">(&lt;operator&gt;.postIncrement,i++)</data>
    </node>
    <node id="1000170">
      <data key="d4">(&lt;operator&gt;.assignment,A[i]=(int*)malloc(sizeof(int)*(n+1)))</data>
    </node>
    <node id="1000171">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,A[i])</data>
    </node>
    <node id="1000174">
      <data key="d4">(&lt;operator&gt;.cast,(int*)malloc(sizeof(int)*(n+1)))</data>
    </node>
    <node id="1000175">
      <data key="d4">(UNKNOWN,int*,int*)</data>
    </node>
    <node id="1000176">
      <data key="d4">(malloc,malloc(sizeof(int)*(n+1)))</data>
    </node>
    <node id="1000177">
      <data key="d4">(&lt;operator&gt;.multiplication,sizeof(int)*(n+1))</data>
    </node>
    <node id="1000178">
      <data key="d4">(&lt;operator&gt;.sizeOf,sizeof(int))</data>
    </node>
    <node id="1000180">
      <data key="d4">(&lt;operator&gt;.addition,n+1)</data>
    </node>
    <node id="1000184">
      <data key="d4">(&lt;operator&gt;.assignment,i=1)</data>
    </node>
    <node id="1000187">
      <data key="d4">(&lt;operator&gt;.lessEqualsThan,i&lt;=n)</data>
    </node>
    <node id="1000190">
      <data key="d4">(&lt;operator&gt;.postIncrement,i++)</data>
    </node>
    <node id="1000193">
      <data key="d4">(&lt;operator&gt;.assignment,color[i]=0)</data>
    </node>
    <node id="1000194">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,color[i])</data>
    </node>
    <node id="1000199">
      <data key="d4">(&lt;operator&gt;.assignment,j=1)</data>
    </node>
    <node id="1000202">
      <data key="d4">(&lt;operator&gt;.lessEqualsThan,j&lt;=n)</data>
    </node>
    <node id="1000205">
      <data key="d4">(&lt;operator&gt;.postIncrement,j++)</data>
    </node>
    <node id="1000208">
      <data key="d4">(&lt;operator&gt;.assignment,A[i][j]=0)</data>
    </node>
    <node id="1000209">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,A[i][j])</data>
    </node>
    <node id="1000210">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,A[i])</data>
    </node>
    <node id="1000216">
      <data key="d4">(&lt;operator&gt;.assignment,i=1)</data>
    </node>
    <node id="1000219">
      <data key="d4">(&lt;operator&gt;.lessEqualsThan,i&lt;=n)</data>
    </node>
    <node id="1000222">
      <data key="d4">(&lt;operator&gt;.postIncrement,i++)</data>
    </node>
    <node id="1000225">
      <data key="d4">(scanf,scanf(&quot;%d&quot;,&amp;u))</data>
    </node>
    <node id="1000227">
      <data key="d4">(&lt;operator&gt;.addressOf,&amp;u)</data>
    </node>
    <node id="1000229">
      <data key="d4">(scanf,scanf(&quot;%d&quot;,&amp;k))</data>
    </node>
    <node id="1000231">
      <data key="d4">(&lt;operator&gt;.addressOf,&amp;k)</data>
    </node>
    <node id="1000234">
      <data key="d4">(&lt;operator&gt;.equals,k==0)</data>
    </node>
    <node id="1000239">
      <data key="d4">(&lt;operator&gt;.assignment,j=0)</data>
    </node>
    <node id="1000242">
      <data key="d4">(&lt;operator&gt;.lessThan,j&lt;k)</data>
    </node>
    <node id="1000245">
      <data key="d4">(&lt;operator&gt;.postIncrement,j++)</data>
    </node>
    <node id="1000248">
      <data key="d4">(scanf,scanf(&quot;%d&quot;,&amp;v))</data>
    </node>
    <node id="1000250">
      <data key="d4">(&lt;operator&gt;.addressOf,&amp;v)</data>
    </node>
    <node id="1000252">
      <data key="d4">(&lt;operator&gt;.assignment,A[u][v]=1)</data>
    </node>
    <node id="1000253">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,A[u][v])</data>
    </node>
    <node id="1000254">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,A[u])</data>
    </node>
    <node id="1000260">
      <data key="d4">(&lt;operator&gt;.assignment,i=1)</data>
    </node>
    <node id="1000263">
      <data key="d4">(&lt;operator&gt;.lessEqualsThan,i&lt;=n)</data>
    </node>
    <node id="1000266">
      <data key="d4">(&lt;operator&gt;.postIncrement,i++)</data>
    </node>
    <node id="1000270">
      <data key="d4">(&lt;operator&gt;.equals,color[i]==0)</data>
    </node>
    <node id="1000271">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,color[i])</data>
    </node>
    <node id="1000275">
      <data key="d4">(visit,visit(i))</data>
    </node>
    <node id="1000278">
      <data key="d4">(&lt;operator&gt;.assignment,i=1)</data>
    </node>
    <node id="1000281">
      <data key="d4">(&lt;operator&gt;.lessEqualsThan,i&lt;=n)</data>
    </node>
    <node id="1000284">
      <data key="d4">(&lt;operator&gt;.postIncrement,i++)</data>
    </node>
    <node id="1000287">
      <data key="d4">(printf,printf(&quot;%d %d %d\n&quot;,i,d[i],f[i]))</data>
    </node>
    <node id="1000290">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,d[i])</data>
    </node>
    <node id="1000293">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,f[i])</data>
    </node>
    <node id="1000296">
      <data key="d4">(RETURN,return 0;,return 0;)</data>
    </node>
    <node id="1000298">
      <data key="d4">(METHOD_RETURN,int)</data>
    </node>

    <edge source="1000106" target="1000115">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000113" target="1000120">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000115" target="1000113">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000117" target="1000131">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000119" target="1000117">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000120" target="1000124">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000121" target="1000119">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000122" target="1000121">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000123" target="1000125">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000124" target="1000123">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000125" target="1000122">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000128" target="1000142">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000130" target="1000128">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000131" target="1000134">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000132" target="1000130">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000133" target="1000132">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000134" target="1000136">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000136" target="1000133">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000139" target="1000153">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000141" target="1000139">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000142" target="1000145">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000143" target="1000141">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000144" target="1000143">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000145" target="1000147">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000147" target="1000144">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000150" target="1000162">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000152" target="1000150">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000153" target="1000156">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000154" target="1000152">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000155" target="1000154">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000156" target="1000158">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000158" target="1000155">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000162" target="1000165">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000165" target="1000171">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000165" target="1000171">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000165" target="1000184">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000168" target="1000165">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000170" target="1000168">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000171" target="1000175">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000174" target="1000170">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000175" target="1000178">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000176" target="1000174">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000177" target="1000176">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000178" target="1000180">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000180" target="1000177">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000184" target="1000187">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000187" target="1000194">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000187" target="1000194">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000187" target="1000216">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000190" target="1000187">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000193" target="1000199">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000194" target="1000193">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000199" target="1000202">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000202" target="1000190">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000202" target="1000210">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000202" target="1000210">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000205" target="1000202">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000208" target="1000205">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000209" target="1000208">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000210" target="1000209">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000216" target="1000219">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000219" target="1000227">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000219" target="1000227">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000219" target="1000260">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000222" target="1000219">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000225" target="1000231">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000227" target="1000225">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000229" target="1000234">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000231" target="1000229">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000234" target="1000222">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000234" target="1000239">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000239" target="1000242">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000242" target="1000222">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000242" target="1000250">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000242" target="1000250">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000245" target="1000242">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000248" target="1000254">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000250" target="1000248">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000252" target="1000245">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000253" target="1000252">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000254" target="1000253">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000260" target="1000263">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000263" target="1000271">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000263" target="1000271">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000263" target="1000278">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000266" target="1000263">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000270" target="1000266">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000270" target="1000275">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000271" target="1000270">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000275" target="1000266">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000278" target="1000281">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000281" target="1000290">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000281" target="1000290">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000281" target="1000296">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000284" target="1000281">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000287" target="1000284">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000290" target="1000293">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000293" target="1000287">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000296" target="1000298">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
  </graph>
</graphml>
