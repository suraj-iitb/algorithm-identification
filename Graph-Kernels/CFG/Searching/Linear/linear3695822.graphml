<?xml version="1.0" encoding="UTF-8"?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns
     http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd">

  <!-- Created by Graph::Easy v0.76 at Wed Jun  9 00:17:59 2021 -->

  <key id="d0" for="edge" attr.name="arrowstyle" attr.type="string">
    <default>open</default>
  </key>
  <key id="d1" for="graph" attr.name="colorscheme" attr.type="string">
    <default>w3c</default>
  </key>
  <key id="d2" for="graph" attr.name="flow" attr.type="string">
    <default>east</default>
  </key>
  <key id="d3" for="graph" attr.name="title" attr.type="string">
    <default></default>
  </key>
  <key id="d4" for="node" attr.name="label" attr.type="string"/>
  <key id="d5" for="edge" attr.name="label" attr.type="string"/>
  <key id="d6" for="edge" attr.name="style" attr.type="string">
    <default>solid</default>
  </key>

  <graph id="G" edgedefault="directed">
    <data key="d1">x11</data>
    <data key="d2">south</data>
    <data key="d3">main</data>
    <node id="1000107">
      <data key="d4">(METHOD,main)</data>
    </node>
    <node id="1000113">
      <data key="d4">(scanf,scanf(&quot;%d&quot;,&amp;n))</data>
    </node>
    <node id="1000115">
      <data key="d4">(&lt;operator&gt;.addressOf,&amp;n)</data>
    </node>
    <node id="1000118">
      <data key="d4">(&lt;operator&gt;.assignment,*A =(int*)malloc(n *sizeof(int)))</data>
    </node>
    <node id="1000120">
      <data key="d4">(&lt;operator&gt;.cast,(int*)malloc(n *sizeof(int)))</data>
    </node>
    <node id="1000121">
      <data key="d4">(UNKNOWN,int*,int*)</data>
    </node>
    <node id="1000122">
      <data key="d4">(malloc,malloc(n *sizeof(int)))</data>
    </node>
    <node id="1000123">
      <data key="d4">(&lt;operator&gt;.multiplication,n *sizeof(int))</data>
    </node>
    <node id="1000125">
      <data key="d4">(&lt;operator&gt;.sizeOf,sizeof(int))</data>
    </node>
    <node id="1000129">
      <data key="d4">(&lt;operator&gt;.assignment,a = 0)</data>
    </node>
    <node id="1000132">
      <data key="d4">(&lt;operator&gt;.lessThan,a &lt; n)</data>
    </node>
    <node id="1000135">
      <data key="d4">(&lt;operator&gt;.postIncrement,a++)</data>
    </node>
    <node id="1000138">
      <data key="d4">(scanf,scanf(&quot;%d&quot;,&amp;A[a]))</data>
    </node>
    <node id="1000140">
      <data key="d4">(&lt;operator&gt;.addressOf,&amp;A[a])</data>
    </node>
    <node id="1000141">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,A[a])</data>
    </node>
    <node id="1000145">
      <data key="d4">(scanf,scanf(&quot;%d&quot;,&amp;m))</data>
    </node>
    <node id="1000147">
      <data key="d4">(&lt;operator&gt;.addressOf,&amp;m)</data>
    </node>
    <node id="1000150">
      <data key="d4">(&lt;operator&gt;.assignment,*B = (data*)malloc(n * sizeof(data)))</data>
    </node>
    <node id="1000152">
      <data key="d4">(&lt;operator&gt;.cast,(data*)malloc(n * sizeof(data)))</data>
    </node>
    <node id="1000153">
      <data key="d4">(UNKNOWN,data*,data*)</data>
    </node>
    <node id="1000154">
      <data key="d4">(malloc,malloc(n * sizeof(data)))</data>
    </node>
    <node id="1000155">
      <data key="d4">(&lt;operator&gt;.multiplication,n * sizeof(data))</data>
    </node>
    <node id="1000157">
      <data key="d4">(&lt;operator&gt;.sizeOf,sizeof(data))</data>
    </node>
    <node id="1000161">
      <data key="d4">(&lt;operator&gt;.assignment,a = 0)</data>
    </node>
    <node id="1000164">
      <data key="d4">(&lt;operator&gt;.lessThan,a &lt; m)</data>
    </node>
    <node id="1000167">
      <data key="d4">(&lt;operator&gt;.postIncrement,a++)</data>
    </node>
    <node id="1000170">
      <data key="d4">(scanf,scanf(&quot;%d&quot;,&amp;B[a].value))</data>
    </node>
    <node id="1000172">
      <data key="d4">(&lt;operator&gt;.addressOf,&amp;B[a].value)</data>
    </node>
    <node id="1000173">
      <data key="d4">(&lt;operator&gt;.fieldAccess,B[a].value)</data>
    </node>
    <node id="1000174">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,B[a])</data>
    </node>
    <node id="1000177">
      <data key="d4">(FIELD_IDENTIFIER,value,value)</data>
    </node>
    <node id="1000178">
      <data key="d4">(&lt;operator&gt;.assignment,B[a].done = 0)</data>
    </node>
    <node id="1000179">
      <data key="d4">(&lt;operator&gt;.fieldAccess,B[a].done)</data>
    </node>
    <node id="1000180">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,B[a])</data>
    </node>
    <node id="1000183">
      <data key="d4">(FIELD_IDENTIFIER,done,done)</data>
    </node>
    <node id="1000187">
      <data key="d4">(&lt;operator&gt;.assignment,a = 0)</data>
    </node>
    <node id="1000190">
      <data key="d4">(&lt;operator&gt;.lessThan,a &lt; n)</data>
    </node>
    <node id="1000193">
      <data key="d4">(&lt;operator&gt;.postIncrement,a++)</data>
    </node>
    <node id="1000198">
      <data key="d4">(&lt;operator&gt;.assignment,b = 0)</data>
    </node>
    <node id="1000201">
      <data key="d4">(&lt;operator&gt;.lessThan,b &lt; m)</data>
    </node>
    <node id="1000204">
      <data key="d4">(&lt;operator&gt;.postIncrement,b++)</data>
    </node>
    <node id="1000208">
      <data key="d4">(&lt;operator&gt;.logicalAnd,(A[a] == B[b].value) &amp;&amp; (B[b].done == 0))</data>
    </node>
    <node id="1000209">
      <data key="d4">(&lt;operator&gt;.equals,A[a] == B[b].value)</data>
    </node>
    <node id="1000210">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,A[a])</data>
    </node>
    <node id="1000213">
      <data key="d4">(&lt;operator&gt;.fieldAccess,B[b].value)</data>
    </node>
    <node id="1000214">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,B[b])</data>
    </node>
    <node id="1000217">
      <data key="d4">(FIELD_IDENTIFIER,value,value)</data>
    </node>
    <node id="1000218">
      <data key="d4">(&lt;operator&gt;.equals,B[b].done == 0)</data>
    </node>
    <node id="1000219">
      <data key="d4">(&lt;operator&gt;.fieldAccess,B[b].done)</data>
    </node>
    <node id="1000220">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,B[b])</data>
    </node>
    <node id="1000223">
      <data key="d4">(FIELD_IDENTIFIER,done,done)</data>
    </node>
    <node id="1000226">
      <data key="d4">(&lt;operator&gt;.postIncrement,track++)</data>
    </node>
    <node id="1000228">
      <data key="d4">(&lt;operator&gt;.assignment,B[b].done=1)</data>
    </node>
    <node id="1000229">
      <data key="d4">(&lt;operator&gt;.fieldAccess,B[b].done)</data>
    </node>
    <node id="1000230">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,B[b])</data>
    </node>
    <node id="1000233">
      <data key="d4">(FIELD_IDENTIFIER,done,done)</data>
    </node>
    <node id="1000235">
      <data key="d4">(free,free(A))</data>
    </node>
    <node id="1000237">
      <data key="d4">(free,free(B))</data>
    </node>
    <node id="1000239">
      <data key="d4">(printf,printf(&quot;%d&quot;,track))</data>
    </node>
    <node id="1000242">
      <data key="d4">(printf,printf(&quot;\n&quot;))</data>
    </node>
    <node id="1000244">
      <data key="d4">(RETURN,return (0);,return (0);)</data>
    </node>
    <node id="1000246">
      <data key="d4">(METHOD_RETURN,int)</data>
    </node>

    <edge source="1000107" target="1000115">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000113" target="1000121">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000115" target="1000113">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000118" target="1000129">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000120" target="1000118">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000121" target="1000125">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000122" target="1000120">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000123" target="1000122">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000125" target="1000123">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000129" target="1000132">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000132" target="1000141">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000132" target="1000141">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000132" target="1000147">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000135" target="1000132">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000138" target="1000135">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000140" target="1000138">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000141" target="1000140">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000145" target="1000153">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000147" target="1000145">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000150" target="1000161">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000152" target="1000150">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000153" target="1000157">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000154" target="1000152">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000155" target="1000154">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000157" target="1000155">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000161" target="1000164">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000164" target="1000174">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000164" target="1000174">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000164" target="1000187">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000167" target="1000164">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000170" target="1000180">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000172" target="1000170">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000173" target="1000172">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000174" target="1000177">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000177" target="1000173">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000178" target="1000167">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000179" target="1000178">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000180" target="1000183">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000183" target="1000179">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000187" target="1000190">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000190" target="1000198">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000190" target="1000198">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000190" target="1000235">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000193" target="1000190">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000198" target="1000201">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000201" target="1000193">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000201" target="1000210">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000201" target="1000210">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000204" target="1000201">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000208" target="1000204">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000208" target="1000226">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000209" target="1000208">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000209" target="1000220">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000210" target="1000214">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000213" target="1000209">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000214" target="1000217">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000217" target="1000213">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000218" target="1000208">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000219" target="1000218">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000220" target="1000223">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000223" target="1000219">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000226" target="1000230">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000228" target="1000204">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000229" target="1000228">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000230" target="1000233">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000233" target="1000229">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000235" target="1000237">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000237" target="1000239">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000239" target="1000242">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000242" target="1000244">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000244" target="1000246">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
  </graph>
</graphml>
