<?xml version="1.0" encoding="UTF-8"?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns
     http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd">

  <!-- Created by Graph::Easy v0.76 at Tue Oct 27 11:38:24 2020 -->

  <key id="d0" for="edge" attr.name="arrowstyle" attr.type="string">
    <default>open</default>
  </key>
  <key id="d1" for="graph" attr.name="colorscheme" attr.type="string">
    <default>w3c</default>
  </key>
  <key id="d2" for="graph" attr.name="flow" attr.type="string">
    <default>east</default>
  </key>
  <key id="d3" for="graph" attr.name="title" attr.type="string">
    <default></default>
  </key>
  <key id="d4" for="node" attr.name="label" attr.type="string"/>
  <key id="d5" for="edge" attr.name="label" attr.type="string"/>
  <key id="d6" for="edge" attr.name="style" attr.type="string">
    <default>solid</default>
  </key>

  <graph id="G" edgedefault="directed">
    <data key="d1">x11</data>
    <data key="d2">south</data>
    <data key="d3">merge</data>
    <node id="1000224">
      <data key="d4">(METHOD,merge)</data>
    </node>
    <node id="1000235">
      <data key="d4">(&lt;operator&gt;.assignment,n1 = mid - left)</data>
    </node>
    <node id="1000237">
      <data key="d4">(&lt;operator&gt;.subtraction,mid - left)</data>
    </node>
    <node id="1000240">
      <data key="d4">(&lt;operator&gt;.assignment,n2 = right - mid)</data>
    </node>
    <node id="1000242">
      <data key="d4">(&lt;operator&gt;.subtraction,right - mid)</data>
    </node>
    <node id="1000247">
      <data key="d4">(&lt;operator&gt;.assignment,L = malloc(sizeof(int) * (n1 + 1)))</data>
    </node>
    <node id="1000249">
      <data key="d4">(malloc,malloc(sizeof(int) * (n1 + 1)))</data>
    </node>
    <node id="1000250">
      <data key="d4">(&lt;operator&gt;.multiplication,sizeof(int) * (n1 + 1))</data>
    </node>
    <node id="1000251">
      <data key="d4">(&lt;operator&gt;.sizeOf,sizeof(int))</data>
    </node>
    <node id="1000253">
      <data key="d4">(&lt;operator&gt;.addition,n1 + 1)</data>
    </node>
    <node id="1000256">
      <data key="d4">(&lt;operator&gt;.assignment,R = malloc(sizeof(int) * (n2 + 1)))</data>
    </node>
    <node id="1000258">
      <data key="d4">(malloc,malloc(sizeof(int) * (n2 + 1)))</data>
    </node>
    <node id="1000259">
      <data key="d4">(&lt;operator&gt;.multiplication,sizeof(int) * (n2 + 1))</data>
    </node>
    <node id="1000260">
      <data key="d4">(&lt;operator&gt;.sizeOf,sizeof(int))</data>
    </node>
    <node id="1000262">
      <data key="d4">(&lt;operator&gt;.addition,n2 + 1)</data>
    </node>
    <node id="1000266">
      <data key="d4">(&lt;operator&gt;.assignment,i = 0)</data>
    </node>
    <node id="1000269">
      <data key="d4">(&lt;operator&gt;.lessThan,i &lt; n1)</data>
    </node>
    <node id="1000272">
      <data key="d4">(&lt;operator&gt;.postIncrement,i++)</data>
    </node>
    <node id="1000275">
      <data key="d4">(&lt;operator&gt;.assignment,L[i] = S[left + i])</data>
    </node>
    <node id="1000276">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,L[i])</data>
    </node>
    <node id="1000279">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,S[left + i])</data>
    </node>
    <node id="1000281">
      <data key="d4">(&lt;operator&gt;.addition,left + i)</data>
    </node>
    <node id="1000285">
      <data key="d4">(&lt;operator&gt;.assignment,i = 0)</data>
    </node>
    <node id="1000288">
      <data key="d4">(&lt;operator&gt;.lessThan,i &lt; n2)</data>
    </node>
    <node id="1000291">
      <data key="d4">(&lt;operator&gt;.postIncrement,i++)</data>
    </node>
    <node id="1000294">
      <data key="d4">(&lt;operator&gt;.assignment,R[i] = S[mid + i])</data>
    </node>
    <node id="1000295">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,R[i])</data>
    </node>
    <node id="1000298">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,S[mid + i])</data>
    </node>
    <node id="1000300">
      <data key="d4">(&lt;operator&gt;.addition,mid + i)</data>
    </node>
    <node id="1000303">
      <data key="d4">(&lt;operator&gt;.assignment,L[n1] = INF)</data>
    </node>
    <node id="1000304">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,L[n1])</data>
    </node>
    <node id="1000308">
      <data key="d4">(&lt;operator&gt;.assignment,R[n2] = INF)</data>
    </node>
    <node id="1000309">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,R[n2])</data>
    </node>
    <node id="1000313">
      <data key="d4">(&lt;operator&gt;.assignment,i = 0)</data>
    </node>
    <node id="1000316">
      <data key="d4">(&lt;operator&gt;.assignment,j = 0)</data>
    </node>
    <node id="1000320">
      <data key="d4">(&lt;operator&gt;.assignment,k = left)</data>
    </node>
    <node id="1000323">
      <data key="d4">(&lt;operator&gt;.lessThan,k &lt; right)</data>
    </node>
    <node id="1000326">
      <data key="d4">(&lt;operator&gt;.postIncrement,k++)</data>
    </node>
    <node id="1000330">
      <data key="d4">(&lt;operator&gt;.lessEqualsThan,L[i] &lt;= R[j])</data>
    </node>
    <node id="1000331">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,L[i])</data>
    </node>
    <node id="1000334">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,R[j])</data>
    </node>
    <node id="1000338">
      <data key="d4">(&lt;operator&gt;.assignment,S[k] = L[i])</data>
    </node>
    <node id="1000339">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,S[k])</data>
    </node>
    <node id="1000342">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,L[i])</data>
    </node>
    <node id="1000345">
      <data key="d4">(&lt;operator&gt;.postIncrement,i++)</data>
    </node>
    <node id="1000347">
      <data key="d4">(&lt;operator&gt;.postIncrement,num++)</data>
    </node>
    <node id="1000351">
      <data key="d4">(&lt;operator&gt;.assignment,S[k] = R[j])</data>
    </node>
    <node id="1000352">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,S[k])</data>
    </node>
    <node id="1000355">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,R[j])</data>
    </node>
    <node id="1000358">
      <data key="d4">(&lt;operator&gt;.postIncrement,j++)</data>
    </node>
    <node id="1000360">
      <data key="d4">(&lt;operator&gt;.postIncrement,num++)</data>
    </node>
    <node id="1000362">
      <data key="d4">(METHOD_RETURN,void)</data>
    </node>

    <edge source="1000224" target="1000237">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000235" target="1000242">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000237" target="1000235">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000240" target="1000251">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000242" target="1000240">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000247" target="1000260">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000249" target="1000247">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000250" target="1000249">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000251" target="1000253">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000253" target="1000250">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000256" target="1000266">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000258" target="1000256">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000259" target="1000258">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000260" target="1000262">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000262" target="1000259">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000266" target="1000269">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000269" target="1000276">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000269" target="1000276">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000269" target="1000285">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000272" target="1000269">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000275" target="1000272">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000276" target="1000281">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000279" target="1000275">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000281" target="1000279">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000285" target="1000288">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000288" target="1000295">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000288" target="1000295">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000288" target="1000304">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000291" target="1000288">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000294" target="1000291">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000295" target="1000300">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000298" target="1000294">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000300" target="1000298">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000303" target="1000309">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000304" target="1000303">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000308" target="1000313">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000309" target="1000308">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000313" target="1000316">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000316" target="1000320">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000320" target="1000323">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000323" target="1000331">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000323" target="1000331">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000323" target="1000362">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000326" target="1000323">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000330" target="1000339">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000330" target="1000352">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000331" target="1000334">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000334" target="1000330">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000338" target="1000345">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000339" target="1000342">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000342" target="1000338">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000345" target="1000347">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000347" target="1000326">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000351" target="1000358">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000352" target="1000355">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000355" target="1000351">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000358" target="1000360">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000360" target="1000326">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
  </graph>
</graphml>
