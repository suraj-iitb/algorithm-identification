<?xml version="1.0" encoding="UTF-8"?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns
     http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd">

  <!-- Created by Graph::Easy v0.76 at Tue Jun  8 22:45:13 2021 -->

  <key id="d0" for="edge" attr.name="arrowstyle" attr.type="string">
    <default>open</default>
  </key>
  <key id="d1" for="graph" attr.name="colorscheme" attr.type="string">
    <default>w3c</default>
  </key>
  <key id="d2" for="graph" attr.name="flow" attr.type="string">
    <default>east</default>
  </key>
  <key id="d3" for="graph" attr.name="title" attr.type="string">
    <default></default>
  </key>
  <key id="d4" for="node" attr.name="label" attr.type="string"/>
  <key id="d5" for="edge" attr.name="label" attr.type="string"/>
  <key id="d6" for="edge" attr.name="style" attr.type="string">
    <default>solid</default>
  </key>

  <graph id="G" edgedefault="directed">
    <data key="d1">x11</data>
    <data key="d2">south</data>
    <data key="d3">main</data>
    <node id="1000136">
      <data key="d4">(METHOD,main)</data>
    </node>
    <node id="1000145">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,col[101])</data>
    </node>
    <node id="1000149">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,wei[101])</data>
    </node>
    <node id="1000152">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,adj[101][101])</data>
    </node>
    <node id="1000153">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,adj[101])</data>
    </node>
    <node id="1000158">
      <data key="d4">(scanf,scanf(&quot;%d&quot;, &amp;n))</data>
    </node>
    <node id="1000160">
      <data key="d4">(&lt;operator&gt;.addressOf,&amp;n)</data>
    </node>
    <node id="1000163">
      <data key="d4">(&lt;operator&gt;.assignment,i = 1)</data>
    </node>
    <node id="1000166">
      <data key="d4">(&lt;operator&gt;.lessEqualsThan,i &lt;= n)</data>
    </node>
    <node id="1000169">
      <data key="d4">(&lt;operator&gt;.postIncrement,i++)</data>
    </node>
    <node id="1000172">
      <data key="d4">(&lt;operator&gt;.assignment,col[i] = W)</data>
    </node>
    <node id="1000173">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,col[i])</data>
    </node>
    <node id="1000177">
      <data key="d4">(&lt;operator&gt;.assignment,wei[i] = -1)</data>
    </node>
    <node id="1000178">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,wei[i])</data>
    </node>
    <node id="1000181">
      <data key="d4">(&lt;operator&gt;.minus,-1)</data>
    </node>
    <node id="1000184">
      <data key="d4">(&lt;operator&gt;.assignment,j = 1)</data>
    </node>
    <node id="1000187">
      <data key="d4">(&lt;operator&gt;.lessEqualsThan,j &lt;= n)</data>
    </node>
    <node id="1000190">
      <data key="d4">(&lt;operator&gt;.postIncrement,j++)</data>
    </node>
    <node id="1000193">
      <data key="d4">(&lt;operator&gt;.assignment,adj[i][j] = 0)</data>
    </node>
    <node id="1000194">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,adj[i][j])</data>
    </node>
    <node id="1000195">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,adj[i])</data>
    </node>
    <node id="1000201">
      <data key="d4">(&lt;operator&gt;.assignment,i = 0)</data>
    </node>
    <node id="1000204">
      <data key="d4">(&lt;operator&gt;.lessThan,i &lt; n)</data>
    </node>
    <node id="1000207">
      <data key="d4">(&lt;operator&gt;.postIncrement,i++)</data>
    </node>
    <node id="1000210">
      <data key="d4">(scanf,scanf(&quot;%d%d&quot;, &amp;u, &amp;k))</data>
    </node>
    <node id="1000212">
      <data key="d4">(&lt;operator&gt;.addressOf,&amp;u)</data>
    </node>
    <node id="1000214">
      <data key="d4">(&lt;operator&gt;.addressOf,&amp;k)</data>
    </node>
    <node id="1000217">
      <data key="d4">(&lt;operator&gt;.assignment,j = 0)</data>
    </node>
    <node id="1000220">
      <data key="d4">(&lt;operator&gt;.lessThan,j &lt; k)</data>
    </node>
    <node id="1000223">
      <data key="d4">(&lt;operator&gt;.postIncrement,j++)</data>
    </node>
    <node id="1000226">
      <data key="d4">(scanf,scanf(&quot;%d&quot;, &amp;v))</data>
    </node>
    <node id="1000228">
      <data key="d4">(&lt;operator&gt;.addressOf,&amp;v)</data>
    </node>
    <node id="1000230">
      <data key="d4">(&lt;operator&gt;.assignment,adj[u][v] = 1)</data>
    </node>
    <node id="1000231">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,adj[u][v])</data>
    </node>
    <node id="1000232">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,adj[u])</data>
    </node>
    <node id="1000237">
      <data key="d4">(&lt;operator&gt;.assignment,col[1] = G)</data>
    </node>
    <node id="1000238">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,col[1])</data>
    </node>
    <node id="1000242">
      <data key="d4">(&lt;operator&gt;.assignment,wei[1] = 0)</data>
    </node>
    <node id="1000243">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,wei[1])</data>
    </node>
    <node id="1000247">
      <data key="d4">(enqueue,enqueue(1))</data>
    </node>
    <node id="1000250">
      <data key="d4">(&lt;operator&gt;.notEquals,head!=tail)</data>
    </node>
    <node id="1000254">
      <data key="d4">(&lt;operator&gt;.assignment,ver = dequeue())</data>
    </node>
    <node id="1000256">
      <data key="d4">(dequeue,dequeue())</data>
    </node>
    <node id="1000258">
      <data key="d4">(&lt;operator&gt;.assignment,i = 1)</data>
    </node>
    <node id="1000261">
      <data key="d4">(&lt;operator&gt;.lessEqualsThan,i &lt;= n)</data>
    </node>
    <node id="1000264">
      <data key="d4">(&lt;operator&gt;.postIncrement,i++)</data>
    </node>
    <node id="1000268">
      <data key="d4">(&lt;operator&gt;.logicalAnd,col[i] == W &amp;&amp; adj[ver][i]== 1)</data>
    </node>
    <node id="1000269">
      <data key="d4">(&lt;operator&gt;.equals,col[i] == W)</data>
    </node>
    <node id="1000270">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,col[i])</data>
    </node>
    <node id="1000274">
      <data key="d4">(&lt;operator&gt;.equals,adj[ver][i]== 1)</data>
    </node>
    <node id="1000275">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,adj[ver][i])</data>
    </node>
    <node id="1000276">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,adj[ver])</data>
    </node>
    <node id="1000282">
      <data key="d4">(&lt;operator&gt;.assignment,col[i] = G)</data>
    </node>
    <node id="1000283">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,col[i])</data>
    </node>
    <node id="1000287">
      <data key="d4">(&lt;operator&gt;.assignment,wei[i] = wei[ver]+1)</data>
    </node>
    <node id="1000288">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,wei[i])</data>
    </node>
    <node id="1000291">
      <data key="d4">(&lt;operator&gt;.addition,wei[ver]+1)</data>
    </node>
    <node id="1000292">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,wei[ver])</data>
    </node>
    <node id="1000296">
      <data key="d4">(enqueue,enqueue(i))</data>
    </node>
    <node id="1000298">
      <data key="d4">(&lt;operator&gt;.assignment,col[ver] = B)</data>
    </node>
    <node id="1000299">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,col[ver])</data>
    </node>
    <node id="1000304">
      <data key="d4">(&lt;operator&gt;.assignment,i = 1)</data>
    </node>
    <node id="1000307">
      <data key="d4">(&lt;operator&gt;.lessEqualsThan,i &lt;= n)</data>
    </node>
    <node id="1000310">
      <data key="d4">(&lt;operator&gt;.postIncrement,i++)</data>
    </node>
    <node id="1000312">
      <data key="d4">(printf,printf(&quot;%d %d\n&quot;, i, wei[i]))</data>
    </node>
    <node id="1000315">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,wei[i])</data>
    </node>
    <node id="1000318">
      <data key="d4">(RETURN,return 0;,return 0;)</data>
    </node>
    <node id="1000320">
      <data key="d4">(METHOD_RETURN,int)</data>
    </node>

    <edge source="1000136" target="1000145">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000145" target="1000149">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000149" target="1000153">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000152" target="1000160">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000153" target="1000152">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000158" target="1000163">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000160" target="1000158">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000163" target="1000166">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000166" target="1000173">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000166" target="1000173">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000166" target="1000201">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000169" target="1000166">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000172" target="1000178">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000173" target="1000172">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000177" target="1000184">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000178" target="1000181">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000181" target="1000177">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000184" target="1000187">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000187" target="1000169">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000187" target="1000195">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000187" target="1000195">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000190" target="1000187">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000193" target="1000190">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000194" target="1000193">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000195" target="1000194">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000201" target="1000204">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000204" target="1000212">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000204" target="1000212">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000204" target="1000238">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000207" target="1000204">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000210" target="1000217">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000212" target="1000214">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000214" target="1000210">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000217" target="1000220">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000220" target="1000207">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000220" target="1000228">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000220" target="1000228">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000223" target="1000220">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000226" target="1000232">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000228" target="1000226">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000230" target="1000223">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000231" target="1000230">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000232" target="1000231">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000237" target="1000243">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000238" target="1000237">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000242" target="1000247">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000243" target="1000242">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000247" target="1000250">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000250" target="1000256">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000250" target="1000304">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000254" target="1000258">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000256" target="1000254">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000258" target="1000261">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000261" target="1000270">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000261" target="1000270">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000261" target="1000299">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000264" target="1000261">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000268" target="1000264">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000268" target="1000283">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000269" target="1000268">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000269" target="1000276">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000270" target="1000269">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000274" target="1000268">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000275" target="1000274">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000276" target="1000275">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000282" target="1000288">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000283" target="1000282">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000287" target="1000296">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000288" target="1000292">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000291" target="1000287">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000292" target="1000291">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000296" target="1000264">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000298" target="1000250">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000299" target="1000298">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000304" target="1000307">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000307" target="1000315">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000307" target="1000315">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000307" target="1000318">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000310" target="1000307">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000312" target="1000310">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000315" target="1000312">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000318" target="1000320">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
  </graph>
</graphml>
