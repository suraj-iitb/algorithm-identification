<?xml version="1.0" encoding="UTF-8"?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns
     http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd">

  <!-- Created by Graph::Easy v0.76 at Tue Jun  8 23:10:13 2021 -->

  <key id="d0" for="edge" attr.name="arrowstyle" attr.type="string">
    <default>open</default>
  </key>
  <key id="d1" for="graph" attr.name="colorscheme" attr.type="string">
    <default>w3c</default>
  </key>
  <key id="d2" for="graph" attr.name="flow" attr.type="string">
    <default>east</default>
  </key>
  <key id="d3" for="graph" attr.name="title" attr.type="string">
    <default></default>
  </key>
  <key id="d4" for="node" attr.name="label" attr.type="string"/>
  <key id="d5" for="edge" attr.name="label" attr.type="string"/>
  <key id="d6" for="edge" attr.name="style" attr.type="string">
    <default>solid</default>
  </key>

  <graph id="G" edgedefault="directed">
    <data key="d1">x11</data>
    <data key="d2">south</data>
    <data key="d3">dfs</data>
    <node id="1000103">
      <data key="d4">(METHOD,dfs)</data>
    </node>
    <node id="1000108">
      <data key="d4">(&lt;operator&gt;.assignment,visit[n] = 1)</data>
    </node>
    <node id="1000109">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,visit[n])</data>
    </node>
    <node id="1000114">
      <data key="d4">(&lt;operator&gt;.equals,time[n][0] == 0)</data>
    </node>
    <node id="1000115">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,time[n][0])</data>
    </node>
    <node id="1000116">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,time[n])</data>
    </node>
    <node id="1000122">
      <data key="d4">(&lt;operator&gt;.assignment,time[n][0] = t)</data>
    </node>
    <node id="1000123">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,time[n][0])</data>
    </node>
    <node id="1000124">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,time[n])</data>
    </node>
    <node id="1000130">
      <data key="d4">(&lt;operator&gt;.assignment,i = 1)</data>
    </node>
    <node id="1000133">
      <data key="d4">(&lt;operator&gt;.lessEqualsThan,i &lt;= node[n][0])</data>
    </node>
    <node id="1000135">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,node[n][0])</data>
    </node>
    <node id="1000136">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,node[n])</data>
    </node>
    <node id="1000140">
      <data key="d4">(&lt;operator&gt;.postIncrement,i++)</data>
    </node>
    <node id="1000144">
      <data key="d4">(&lt;operator&gt;.logicalAnd,node[n][i] != 0 &amp;&amp; visit[node[n][i]] == 0)</data>
    </node>
    <node id="1000145">
      <data key="d4">(&lt;operator&gt;.notEquals,node[n][i] != 0)</data>
    </node>
    <node id="1000146">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,node[n][i])</data>
    </node>
    <node id="1000147">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,node[n])</data>
    </node>
    <node id="1000152">
      <data key="d4">(&lt;operator&gt;.equals,visit[node[n][i]] == 0)</data>
    </node>
    <node id="1000153">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,visit[node[n][i]])</data>
    </node>
    <node id="1000155">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,node[n][i])</data>
    </node>
    <node id="1000156">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,node[n])</data>
    </node>
    <node id="1000162">
      <data key="d4">(&lt;operator&gt;.assignment,t = dfs(node[n][i], t + 1))</data>
    </node>
    <node id="1000164">
      <data key="d4">(dfs,dfs(node[n][i], t + 1))</data>
    </node>
    <node id="1000165">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,node[n][i])</data>
    </node>
    <node id="1000166">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,node[n])</data>
    </node>
    <node id="1000170">
      <data key="d4">(&lt;operator&gt;.addition,t + 1)</data>
    </node>
    <node id="1000173">
      <data key="d4">(&lt;operator&gt;.postIncrement,t++)</data>
    </node>
    <node id="1000175">
      <data key="d4">(&lt;operator&gt;.assignment,time[n][1] = t)</data>
    </node>
    <node id="1000176">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,time[n][1])</data>
    </node>
    <node id="1000177">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,time[n])</data>
    </node>
    <node id="1000182">
      <data key="d4">(RETURN,return (t);,return (t);)</data>
    </node>
    <node id="1000184">
      <data key="d4">(METHOD_RETURN,int)</data>
    </node>

    <edge source="1000103" target="1000109">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000108" target="1000116">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000109" target="1000108">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000114" target="1000124">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000114" target="1000130">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000115" target="1000114">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000116" target="1000115">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000122" target="1000130">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000123" target="1000122">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000124" target="1000123">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000130" target="1000136">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000133" target="1000147">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000133" target="1000147">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000133" target="1000173">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000135" target="1000133">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000136" target="1000135">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000140" target="1000136">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000144" target="1000140">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000144" target="1000166">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000145" target="1000144">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000145" target="1000156">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000146" target="1000145">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000147" target="1000146">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000152" target="1000144">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000153" target="1000152">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000155" target="1000153">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000156" target="1000155">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000162" target="1000140">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000164" target="1000162">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000165" target="1000170">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000166" target="1000165">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000170" target="1000164">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000173" target="1000177">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000175" target="1000182">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000176" target="1000175">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000177" target="1000176">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000182" target="1000184">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
  </graph>
</graphml>
