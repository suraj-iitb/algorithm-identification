<?xml version="1.0" encoding="UTF-8"?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns
     http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd">

  <!-- Created by Graph::Easy v0.76 at Tue Oct 27 09:54:15 2020 -->

  <key id="d0" for="edge" attr.name="arrowstyle" attr.type="string">
    <default>open</default>
  </key>
  <key id="d1" for="graph" attr.name="colorscheme" attr.type="string">
    <default>w3c</default>
  </key>
  <key id="d2" for="graph" attr.name="flow" attr.type="string">
    <default>east</default>
  </key>
  <key id="d3" for="graph" attr.name="title" attr.type="string">
    <default></default>
  </key>
  <key id="d4" for="node" attr.name="label" attr.type="string"/>
  <key id="d5" for="edge" attr.name="label" attr.type="string"/>
  <key id="d6" for="edge" attr.name="style" attr.type="string">
    <default>solid</default>
  </key>

  <graph id="G" edgedefault="directed">
    <data key="d1">x11</data>
    <data key="d2">south</data>
    <data key="d3">main</data>
    <node id="1000477">
      <data key="d4">(METHOD,main)</data>
    </node>
    <node id="1000482">
      <data key="d4">(&lt;operator&gt;.assignment,isStable = 1)</data>
    </node>
    <node id="1000485">
      <data key="d4">(scanf,scanf(&quot;%d&quot;, &amp;n))</data>
    </node>
    <node id="1000487">
      <data key="d4">(&lt;operator&gt;.addressOf,&amp;n)</data>
    </node>
    <node id="1000490">
      <data key="d4">(&lt;operator&gt;.assignment,i=0)</data>
    </node>
    <node id="1000493">
      <data key="d4">(&lt;operator&gt;.lessThan,i&lt;n)</data>
    </node>
    <node id="1000496">
      <data key="d4">(&lt;operator&gt;.postIncrement,i++)</data>
    </node>
    <node id="1000500">
      <data key="d4">(&lt;operator&gt;.logicalNot,!getchar())</data>
    </node>
    <node id="1000501">
      <data key="d4">(getchar,getchar())</data>
    </node>
    <node id="1000502">
      <data key="d4">(scanf,scanf(&quot;%c %d&quot;, &amp;(A[i].var), &amp;(A[i].num) ))</data>
    </node>
    <node id="1000504">
      <data key="d4">(&lt;operator&gt;.addressOf,&amp;(A[i].var))</data>
    </node>
    <node id="1000505">
      <data key="d4">(&lt;operator&gt;.fieldAccess,A[i].var)</data>
    </node>
    <node id="1000506">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,A[i])</data>
    </node>
    <node id="1000509">
      <data key="d4">(FIELD_IDENTIFIER,var,var)</data>
    </node>
    <node id="1000510">
      <data key="d4">(&lt;operator&gt;.addressOf,&amp;(A[i].num))</data>
    </node>
    <node id="1000511">
      <data key="d4">(&lt;operator&gt;.fieldAccess,A[i].num)</data>
    </node>
    <node id="1000512">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,A[i])</data>
    </node>
    <node id="1000515">
      <data key="d4">(FIELD_IDENTIFIER,num,num)</data>
    </node>
    <node id="1000516">
      <data key="d4">(memcpy,memcpy(B, A, sizeof(CARD)*n))</data>
    </node>
    <node id="1000519">
      <data key="d4">(&lt;operator&gt;.multiplication,sizeof(CARD)*n)</data>
    </node>
    <node id="1000520">
      <data key="d4">(&lt;operator&gt;.sizeOf,sizeof(CARD))</data>
    </node>
    <node id="1000523">
      <data key="d4">(quicksort,quicksort(A, 0, n-1))</data>
    </node>
    <node id="1000526">
      <data key="d4">(&lt;operator&gt;.subtraction,n-1)</data>
    </node>
    <node id="1000529">
      <data key="d4">(MergeSort,MergeSort(B, 0, n-1))</data>
    </node>
    <node id="1000532">
      <data key="d4">(&lt;operator&gt;.subtraction,n-1)</data>
    </node>
    <node id="1000535">
      <data key="d4">(&lt;operator&gt;.assignment,isStable = checkStable(A, B, n))</data>
    </node>
    <node id="1000537">
      <data key="d4">(checkStable,checkStable(A, B, n))</data>
    </node>
    <node id="1000544">
      <data key="d4">(printf,printf(&quot;%s\n&quot;, &quot;Stable&quot;))</data>
    </node>
    <node id="1000549">
      <data key="d4">(printf,printf(&quot;%s\n&quot;, &quot;Not stable&quot;))</data>
    </node>
    <node id="1000553">
      <data key="d4">(&lt;operator&gt;.assignment,i=0)</data>
    </node>
    <node id="1000556">
      <data key="d4">(&lt;operator&gt;.lessThan,i&lt;n)</data>
    </node>
    <node id="1000559">
      <data key="d4">(&lt;operator&gt;.postIncrement,i++)</data>
    </node>
    <node id="1000562">
      <data key="d4">(printf,printf(&quot;%c %d\n&quot;, A[i].var, A[i].num))</data>
    </node>
    <node id="1000564">
      <data key="d4">(&lt;operator&gt;.fieldAccess,A[i].var)</data>
    </node>
    <node id="1000565">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,A[i])</data>
    </node>
    <node id="1000568">
      <data key="d4">(FIELD_IDENTIFIER,var,var)</data>
    </node>
    <node id="1000569">
      <data key="d4">(&lt;operator&gt;.fieldAccess,A[i].num)</data>
    </node>
    <node id="1000570">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,A[i])</data>
    </node>
    <node id="1000573">
      <data key="d4">(FIELD_IDENTIFIER,num,num)</data>
    </node>
    <node id="1000574">
      <data key="d4">(RETURN,return 0;,return 0;)</data>
    </node>
    <node id="1000576">
      <data key="d4">(METHOD_RETURN,int)</data>
    </node>

    <edge source="1000477" target="1000482">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000482" target="1000487">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000485" target="1000490">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000487" target="1000485">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000490" target="1000493">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000493" target="1000501">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000493" target="1000501">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000493" target="1000520">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000496" target="1000493">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000500" target="1000506">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000501" target="1000500">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000502" target="1000496">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000504" target="1000512">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000505" target="1000504">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000506" target="1000509">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000509" target="1000505">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000510" target="1000502">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000511" target="1000510">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000512" target="1000515">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000515" target="1000511">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000516" target="1000526">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000519" target="1000516">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000520" target="1000519">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000523" target="1000532">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000526" target="1000523">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000529" target="1000537">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000532" target="1000529">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000535" target="1000544">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000535" target="1000549">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000537" target="1000535">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000544" target="1000553">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000549" target="1000553">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000553" target="1000556">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000556" target="1000565">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000556" target="1000565">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000556" target="1000574">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000559" target="1000556">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000562" target="1000559">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000564" target="1000570">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000565" target="1000568">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000568" target="1000564">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000569" target="1000562">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000570" target="1000573">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000573" target="1000569">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000574" target="1000576">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
  </graph>
</graphml>
