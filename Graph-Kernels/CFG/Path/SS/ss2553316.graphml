<?xml version="1.0" encoding="UTF-8"?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns
     http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd">

  <!-- Created by Graph::Easy v0.76 at Thu Jun 10 23:55:55 2021 -->

  <key id="d0" for="edge" attr.name="arrowstyle" attr.type="string">
    <default>open</default>
  </key>
  <key id="d1" for="graph" attr.name="colorscheme" attr.type="string">
    <default>w3c</default>
  </key>
  <key id="d2" for="graph" attr.name="flow" attr.type="string">
    <default>east</default>
  </key>
  <key id="d3" for="graph" attr.name="title" attr.type="string">
    <default></default>
  </key>
  <key id="d4" for="node" attr.name="label" attr.type="string"/>
  <key id="d5" for="edge" attr.name="label" attr.type="string"/>
  <key id="d6" for="edge" attr.name="style" attr.type="string">
    <default>solid</default>
  </key>

  <graph id="G" edgedefault="directed">
    <data key="d1">x11</data>
    <data key="d2">south</data>
    <data key="d3">main</data>
    <node id="1000288">
      <data key="d4">(METHOD,main)</data>
    </node>
    <node id="1000293">
      <data key="d4">(scanf,scanf(&quot;&quot;, &amp;V, &amp;E, &amp;r))</data>
    </node>
    <node id="1000295">
      <data key="d4">(&lt;operator&gt;.addressOf,&amp;V)</data>
    </node>
    <node id="1000297">
      <data key="d4">(&lt;operator&gt;.addressOf,&amp;E)</data>
    </node>
    <node id="1000299">
      <data key="d4">(&lt;operator&gt;.addressOf,&amp;r)</data>
    </node>
    <node id="1000303">
      <data key="d4">(&lt;operator&gt;.assignment,i = 0)</data>
    </node>
    <node id="1000306">
      <data key="d4">(&lt;operator&gt;.lessThan,i &lt; E)</data>
    </node>
    <node id="1000309">
      <data key="d4">(&lt;operator&gt;.postIncrement,i++)</data>
    </node>
    <node id="1000315">
      <data key="d4">(scanf,scanf(&quot;%d&quot;, &amp;s, &amp;t, &amp;d))</data>
    </node>
    <node id="1000317">
      <data key="d4">(&lt;operator&gt;.addressOf,&amp;s)</data>
    </node>
    <node id="1000319">
      <data key="d4">(&lt;operator&gt;.addressOf,&amp;t)</data>
    </node>
    <node id="1000321">
      <data key="d4">(&lt;operator&gt;.addressOf,&amp;d)</data>
    </node>
    <node id="1000323">
      <data key="d4">(edges[s].push_back,edges[s].push_back(std::make_pair(t, d)))</data>
    </node>
    <node id="1000324">
      <data key="d4">(std::make_pair,std::make_pair(t, d))</data>
    </node>
    <node id="1000327">
      <data key="d4">(std::fill,std::fill(ds, ds + V, -1))</data>
    </node>
    <node id="1000329">
      <data key="d4">(&lt;operator&gt;.addition,ds + V)</data>
    </node>
    <node id="1000332">
      <data key="d4">(&lt;operator&gt;.minus,-1)</data>
    </node>
    <node id="1000334">
      <data key="d4">(&lt;operator&gt;.assignment,ds[r] = 0)</data>
    </node>
    <node id="1000335">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,ds[r])</data>
    </node>
    <node id="1000339">
      <data key="d4">(heap.push_back,heap.push_back(r))</data>
    </node>
    <node id="1000342">
      <data key="d4">(heap.size,heap.size())</data>
    </node>
    <node id="1000345">
      <data key="d4">(&lt;operator&gt;.assignment,s = heap.front())</data>
    </node>
    <node id="1000347">
      <data key="d4">(heap.front,heap.front())</data>
    </node>
    <node id="1000349">
      <data key="d4">(&lt;operator&gt;.equals,heap.size() == 1)</data>
    </node>
    <node id="1000350">
      <data key="d4">(heap.size,heap.size())</data>
    </node>
    <node id="1000352">
      <data key="d4">(heap.pop_back,heap.pop_back())</data>
    </node>
    <node id="1000355">
      <data key="d4">(&lt;operator&gt;.assignment,paeh[heap.front() = heap.back()] = 0)</data>
    </node>
    <node id="1000356">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,paeh[heap.front() = heap.back()])</data>
    </node>
    <node id="1000358">
      <data key="d4">(&lt;operator&gt;.assignment,heap.front() = heap.back())</data>
    </node>
    <node id="1000359">
      <data key="d4">(heap.front,heap.front())</data>
    </node>
    <node id="1000360">
      <data key="d4">(heap.back,heap.back())</data>
    </node>
    <node id="1000362">
      <data key="d4">(heap.pop_back,heap.pop_back())</data>
    </node>
    <node id="1000363">
      <data key="d4">(bubble_down,bubble_down(0))</data>
    </node>
    <node id="1000368">
      <data key="d4">(&lt;operator&gt;.assignment,t = p.first)</data>
    </node>
    <node id="1000370">
      <data key="d4">(&lt;operator&gt;.fieldAccess,p.first)</data>
    </node>
    <node id="1000372">
      <data key="d4">(FIELD_IDENTIFIER,first,first)</data>
    </node>
    <node id="1000374">
      <data key="d4">(&lt;operator&gt;.assignment,d = ds[s] + p.second)</data>
    </node>
    <node id="1000376">
      <data key="d4">(&lt;operator&gt;.addition,ds[s] + p.second)</data>
    </node>
    <node id="1000377">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,ds[s])</data>
    </node>
    <node id="1000380">
      <data key="d4">(&lt;operator&gt;.fieldAccess,p.second)</data>
    </node>
    <node id="1000382">
      <data key="d4">(FIELD_IDENTIFIER,second,second)</data>
    </node>
    <node id="1000384">
      <data key="d4">(&lt;operator&gt;.lessThan,ds[t] &lt; 0)</data>
    </node>
    <node id="1000385">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,ds[t])</data>
    </node>
    <node id="1000390">
      <data key="d4">(&lt;operator&gt;.assignment,ds[t] = d)</data>
    </node>
    <node id="1000391">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,ds[t])</data>
    </node>
    <node id="1000395">
      <data key="d4">(heap.push_back,heap.push_back(t))</data>
    </node>
    <node id="1000397">
      <data key="d4">(&lt;operator&gt;.assignment,paeh[t] = heap.size()-1)</data>
    </node>
    <node id="1000398">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,paeh[t])</data>
    </node>
    <node id="1000401">
      <data key="d4">(&lt;operator&gt;.subtraction,heap.size()-1)</data>
    </node>
    <node id="1000402">
      <data key="d4">(heap.size,heap.size())</data>
    </node>
    <node id="1000404">
      <data key="d4">(bubble_up,bubble_up(heap.size()-1))</data>
    </node>
    <node id="1000405">
      <data key="d4">(&lt;operator&gt;.subtraction,heap.size()-1)</data>
    </node>
    <node id="1000406">
      <data key="d4">(heap.size,heap.size())</data>
    </node>
    <node id="1000410">
      <data key="d4">(&lt;operator&gt;.greaterThan,ds[t] &gt; d)</data>
    </node>
    <node id="1000411">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,ds[t])</data>
    </node>
    <node id="1000416">
      <data key="d4">(&lt;operator&gt;.assignment,ds[t] = d)</data>
    </node>
    <node id="1000417">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,ds[t])</data>
    </node>
    <node id="1000421">
      <data key="d4">(bubble_up,bubble_up(paeh[t]))</data>
    </node>
    <node id="1000422">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,paeh[t])</data>
    </node>
    <node id="1000427">
      <data key="d4">(&lt;operator&gt;.assignment,s = 0)</data>
    </node>
    <node id="1000430">
      <data key="d4">(&lt;operator&gt;.lessThan,s &lt; V)</data>
    </node>
    <node id="1000433">
      <data key="d4">(&lt;operator&gt;.postIncrement,s++)</data>
    </node>
    <node id="1000436">
      <data key="d4">(&lt;operator&gt;.lessThan,ds[s] &lt; 0)</data>
    </node>
    <node id="1000437">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,ds[s])</data>
    </node>
    <node id="1000441">
      <data key="d4">(puts,puts(&quot;INF&quot;))</data>
    </node>
    <node id="1000444">
      <data key="d4">(printf,printf(&quot;%d\n&quot;, ds[s]))</data>
    </node>
    <node id="1000446">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,ds[s])</data>
    </node>
    <node id="1000449">
      <data key="d4">(RETURN,return 0;,return 0;)</data>
    </node>
    <node id="1000451">
      <data key="d4">(METHOD_RETURN,int)</data>
    </node>

    <edge source="1000288" target="1000295">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000293" target="1000303">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000295" target="1000297">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000297" target="1000299">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000299" target="1000293">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000303" target="1000306">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000306" target="1000317">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000306" target="1000317">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000306" target="1000329">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000309" target="1000306">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000315" target="1000324">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000317" target="1000319">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000319" target="1000321">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000321" target="1000315">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000323" target="1000309">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000324" target="1000323">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000327" target="1000335">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000329" target="1000332">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000332" target="1000327">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000334" target="1000339">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000335" target="1000334">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000339" target="1000342">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000342" target="1000347">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000342" target="1000427">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000345" target="1000350">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000347" target="1000345">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000349" target="1000352">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000349" target="1000359">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000350" target="1000349">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000352" target="1000372">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000355" target="1000362">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000356" target="1000355">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000358" target="1000356">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000359" target="1000360">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000360" target="1000358">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000362" target="1000363">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000363" target="1000372">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000368" target="1000377">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000370" target="1000368">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000372" target="1000370">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000374" target="1000385">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000376" target="1000374">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000377" target="1000382">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000380" target="1000376">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000382" target="1000380">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000384" target="1000391">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000384" target="1000411">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000385" target="1000384">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000390" target="1000395">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000391" target="1000390">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000395" target="1000398">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000397" target="1000406">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000398" target="1000402">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000401" target="1000397">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000402" target="1000401">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000404" target="1000342">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000405" target="1000404">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000406" target="1000405">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000410" target="1000342">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000410" target="1000417">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000411" target="1000410">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000416" target="1000422">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000417" target="1000416">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000421" target="1000342">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000422" target="1000421">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000427" target="1000430">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000430" target="1000437">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000430" target="1000437">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000430" target="1000449">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000433" target="1000430">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000436" target="1000441">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000436" target="1000446">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000437" target="1000436">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000441" target="1000433">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000444" target="1000433">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000446" target="1000444">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000449" target="1000451">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
  </graph>
</graphml>
