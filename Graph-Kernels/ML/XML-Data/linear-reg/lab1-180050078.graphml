<?xml version="1.0" encoding="UTF-8"?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns
     http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd">

  <!-- Created by Graph::Easy v0.76 at Mon Dec 21 22:39:53 2020 -->

  <key id="d0" for="edge" attr.name="arrowstyle" attr.type="string">
    <default>open</default>
  </key>
  <key id="d1" for="graph" attr.name="colorscheme" attr.type="string">
    <default>w3c</default>
  </key>
  <key id="d2" for="graph" attr.name="flow" attr.type="string">
    <default>east</default>
  </key>
  <key id="d3" for="graph" attr.name="title" attr.type="string">
    <default></default>
  </key>
  <key id="d4" for="node" attr.name="label" attr.type="string"/>
  <key id="d5" for="node" attr.name="bordercolor" attr.type="string">
    <default>#000000</default>
  </key>
  <key id="d6" for="node" attr.name="borderstyle" attr.type="string">
    <default>none</default>
  </key>
  <key id="d7" for="edge" attr.name="label" attr.type="string"/>
  <key id="d8" for="edge" attr.name="style" attr.type="string">
    <default>solid</default>
  </key>

  <graph id="G" edgedefault="directed">
    <data key="d1">x11</data>
    <data key="d2">south</data>
    <node id="0">
      <data key="d4">0: start</data>
    </node>
    <node id="1">
      <data key="d4">5: np.random.seed(337)</data>
    </node>
    <node id="10">
      <data key="d4">25: train_mses = []</data>
    </node>
    <node id="11">
      <data key="d4">26: test_mses = []</data>
    </node>
    <node id="12">
      <data key="d4">29: (n, f) = np.shape(X_train)</data>
    </node>
    <node id="13">
      <data key="d4">30: W = np.random.normal(0, 1, (f, 1))</data>
    </node>
    <node id="14">
      <data key="d4">34: for: (True if range(max_iter) else False)</data>
    </node>
    <node id="15">
      <data key="d4">34: i = range(max_iter).shift()</data>
    </node>
    <node id="16">
      <data key="d4">37: train_mse = mse(X_train, Y_train, W)</data>
    </node>
    <node id="17">
      <data key="d5">black</data>
      <data key="d6">dotted</data>
      <data key="d4">38: test_mse = mse(X_test, Y_test, W)</data>
    </node>
    <node id="18">
      <data key="d5">black</data>
      <data key="d6">dotted</data>
      <data key="d4">41: train_mses.append(train_mse)</data>
    </node>
    <node id="19">
      <data key="d4">42: test_mses.append(test_mse)</data>
    </node>
    <node id="2">
      <data key="d4">7: enter: mse(X, Y, W)</data>
    </node>
    <node id="20">
      <data key="d4">45: W = (W - ((lr * (np.dot(np.dot(X_train.T, X_train), W) - np.dot(X_train.T, Y_train))) / n))</data>
    </node>
    <node id="21">
      <data key="d4">51: return (W, train_mses, test_mses)</data>
    </node>
    <node id="22">
      <data key="d4">53: enter: ridge_regression(X_train, Y_train, X_test, Y_test, reg, lr, max_iter)</data>
    </node>
    <node id="23">
      <data key="d4">53: exit: ridge_regression(X_train, Y_train, X_test, Y_test, reg, lr, max_iter)</data>
    </node>
    <node id="24">
      <data key="d4">56: &apos;\n\treg - regularization parameter (lambda in Q2.1 c)\n\t&apos;</data>
    </node>
    <node id="25">
      <data key="d4">57: train_mses = []</data>
    </node>
    <node id="26">
      <data key="d4">58: test_mses = []</data>
    </node>
    <node id="27">
      <data key="d4">61: (n, f) = np.shape(X_train)</data>
    </node>
    <node id="28">
      <data key="d4">62: W = np.random.normal(0, 1, (f, 1))</data>
    </node>
    <node id="29">
      <data key="d4">65: for: (True if range(max_iter) else False)</data>
    </node>
    <node id="3">
      <data key="d4">7: exit: mse(X, Y, W)</data>
    </node>
    <node id="30">
      <data key="d4">65: i = range(max_iter).shift()</data>
    </node>
    <node id="31">
      <data key="d4">68: train_mse = mse(X_train, Y_train, W)</data>
    </node>
    <node id="32">
      <data key="d5">black</data>
      <data key="d6">dotted</data>
      <data key="d4">69: test_mse = mse(X_test, Y_test, W)</data>
    </node>
    <node id="33">
      <data key="d5">black</data>
      <data key="d6">dotted</data>
      <data key="d4">72: train_mses.append(train_mse)</data>
    </node>
    <node id="34">
      <data key="d4">73: test_mses.append(test_mse)</data>
    </node>
    <node id="35">
      <data key="d4">76: W = (W - (lr * (((np.dot(np.dot(X_train.T, X_train), W) - np.dot(X_train.T, Y_train)) / n) + ((2 * reg) * W))))</data>
    </node>
    <node id="36">
      <data key="d4">80: return (W, train_mses, test_mses)</data>
    </node>
    <node id="37">
      <data key="d4">82: enter: weighted_regression(X, Y, r)</data>
    </node>
    <node id="38">
      <data key="d4">82: exit: weighted_regression(X, Y, r)</data>
    </node>
    <node id="39">
      <data key="d4">87: &apos;\n\tFill up this function for problem 3.\n\tUse closed form expression.\n\tr_train is a (n,) array, where n is number of training  samples\n\t&apos;</data>
    </node>
    <node id="4">
      <data key="d4">15: &apos;\n\tCompute mean squared error between predictions and true y values\n\n\tArgs:\n\tX - numpy array of shape (n_samples, n_features)\n\tY  - numpy array of shape (n_samples, 1)\n\tW - numpy array of shape (n_features, 1)\n\t&apos;</data>
    </node>
    <node id="40">
      <data key="d4">90: R2 = (np.diag(r) ** 2)</data>
    </node>
    <node id="41">
      <data key="d4">91: W = np.dot(np.linalg.inv(np.dot(np.dot(X.T, R2), X)), np.dot(np.dot(X.T, R2), Y))</data>
    </node>
    <node id="42">
      <data key="d4">94: return W</data>
    </node>
    <node id="43">
      <data key="d4">96: if: (__name__ == &apos;__main__&apos;)</data>
    </node>
    <node id="44">
      <data key="d4">98: (X, Y) = load_data2(&apos;data2.csv&apos;)</data>
    </node>
    <node id="45">
      <data key="d4">99: (X, Y) = preprocess(X, Y)</data>
    </node>
    <node id="46">
      <data key="d4">100: (X_train, Y_train, X_test, Y_test) = split_data(X, Y)</data>
    </node>
    <node id="47">
      <data key="d4">102: (W, train_mses, test_mses) = ordinary_least_squares(X_train, Y_train, X_test, Y_test)</data>
    </node>
    <node id="48">
      <data key="d5">black</data>
      <data key="d6">dotted</data>
      <data key="d4">106: plt.figure(figsize=(4, 4))</data>
    </node>
    <node id="49">
      <data key="d4">107: plt.plot(train_mses)</data>
    </node>
    <node id="5">
      <data key="d4">18: (n, m) = np.shape(X)</data>
    </node>
    <node id="50">
      <data key="d4">108: plt.plot(test_mses)</data>
    </node>
    <node id="51">
      <data key="d4">109: plt.legend([&apos;Train MSE&apos;, &apos;Test MSE&apos;])</data>
    </node>
    <node id="52">
      <data key="d4">110: plt.xlabel(&apos;Iteration&apos;)</data>
    </node>
    <node id="53">
      <data key="d4">111: plt.ylabel(&apos;MSE&apos;)</data>
    </node>
    <node id="54">
      <data key="d4">112: plt.show()</data>
    </node>
    <node id="55">
      <data key="d4">0: stop</data>
    </node>
    <node id="6">
      <data key="d4">19: mse = (np.sum(((Y - np.matmul(X, W)) ** 2)) / (2 * n))</data>
    </node>
    <node id="7">
      <data key="d4">22: return mse</data>
    </node>
    <node id="8">
      <data key="d4">24: enter: ordinary_least_squares(X_train, Y_train, X_test, Y_test, lr, max_iter)</data>
    </node>
    <node id="9">
      <data key="d4">24: exit: ordinary_least_squares(X_train, Y_train, X_test, Y_test, lr, max_iter)</data>
    </node>

    <edge source="0" target="1">
      <data key="d0">filled</data>
      <data key="d7"></data>
    </edge>
    <edge source="1" target="43">
      <data key="d0">filled</data>
      <data key="d7"></data>
    </edge>
    <edge source="10" target="11">
      <data key="d0">filled</data>
      <data key="d7"></data>
    </edge>
    <edge source="11" target="12">
      <data key="d0">filled</data>
      <data key="d7"></data>
    </edge>
    <edge source="12" target="13">
      <data key="d0">filled</data>
      <data key="d7"></data>
    </edge>
    <edge source="13" target="14">
      <data key="d0">filled</data>
      <data key="d7"></data>
    </edge>
    <edge source="14" target="15">
      <data key="d0">filled</data>
      <data key="d7"></data>
    </edge>
    <edge source="14" target="21">
      <data key="d0">filled</data>
      <data key="d7"></data>
    </edge>
    <edge source="15" target="16">
      <data key="d0">filled</data>
      <data key="d7"></data>
    </edge>
    <edge source="16" target="17">
      <data key="d0">filled</data>
      <data key="d7"></data>
    </edge>
    <edge source="16" target="2">
      <data key="d0">filled</data>
      <data key="d7"></data>
    </edge>
    <edge source="17" target="18">
      <data key="d0">filled</data>
      <data key="d7"></data>
    </edge>
    <edge source="17" target="2">
      <data key="d0">filled</data>
      <data key="d7"></data>
    </edge>
    <edge source="18" target="19">
      <data key="d0">filled</data>
      <data key="d7"></data>
    </edge>
    <edge source="19" target="20">
      <data key="d0">filled</data>
      <data key="d7"></data>
    </edge>
    <edge source="2" target="4">
      <data key="d0">filled</data>
      <data key="d7"></data>
    </edge>
    <edge source="20" target="14">
      <data key="d0">filled</data>
      <data key="d7"></data>
    </edge>
    <edge source="21" target="9">
      <data key="d0">filled</data>
      <data key="d7"></data>
    </edge>
    <edge source="22" target="24">
      <data key="d0">filled</data>
      <data key="d7"></data>
    </edge>
    <edge source="24" target="25">
      <data key="d0">filled</data>
      <data key="d7"></data>
    </edge>
    <edge source="25" target="26">
      <data key="d0">filled</data>
      <data key="d7"></data>
    </edge>
    <edge source="26" target="27">
      <data key="d0">filled</data>
      <data key="d7"></data>
    </edge>
    <edge source="27" target="28">
      <data key="d0">filled</data>
      <data key="d7"></data>
    </edge>
    <edge source="28" target="29">
      <data key="d0">filled</data>
      <data key="d7"></data>
    </edge>
    <edge source="29" target="30">
      <data key="d0">filled</data>
      <data key="d7"></data>
    </edge>
    <edge source="29" target="36">
      <data key="d0">filled</data>
      <data key="d7"></data>
    </edge>
    <edge source="3" target="17">
      <data key="d0">filled</data>
      <data key="d7"></data>
    </edge>
    <edge source="3" target="32">
      <data key="d0">filled</data>
      <data key="d7"></data>
    </edge>
    <edge source="3" target="18">
      <data key="d0">filled</data>
      <data key="d7"></data>
    </edge>
    <edge source="3" target="33">
      <data key="d0">filled</data>
      <data key="d7"></data>
    </edge>
    <edge source="30" target="31">
      <data key="d0">filled</data>
      <data key="d7"></data>
    </edge>
    <edge source="31" target="32">
      <data key="d0">filled</data>
      <data key="d7"></data>
    </edge>
    <edge source="31" target="2">
      <data key="d0">filled</data>
      <data key="d7"></data>
    </edge>
    <edge source="32" target="2">
      <data key="d0">filled</data>
      <data key="d7"></data>
    </edge>
    <edge source="32" target="33">
      <data key="d0">filled</data>
      <data key="d7"></data>
    </edge>
    <edge source="33" target="34">
      <data key="d0">filled</data>
      <data key="d7"></data>
    </edge>
    <edge source="34" target="35">
      <data key="d0">filled</data>
      <data key="d7"></data>
    </edge>
    <edge source="35" target="29">
      <data key="d0">filled</data>
      <data key="d7"></data>
    </edge>
    <edge source="36" target="23">
      <data key="d0">filled</data>
      <data key="d7"></data>
    </edge>
    <edge source="37" target="39">
      <data key="d0">filled</data>
      <data key="d7"></data>
    </edge>
    <edge source="39" target="40">
      <data key="d0">filled</data>
      <data key="d7"></data>
    </edge>
    <edge source="4" target="5">
      <data key="d0">filled</data>
      <data key="d7"></data>
    </edge>
    <edge source="40" target="41">
      <data key="d0">filled</data>
      <data key="d7"></data>
    </edge>
    <edge source="41" target="42">
      <data key="d0">filled</data>
      <data key="d7"></data>
    </edge>
    <edge source="42" target="38">
      <data key="d0">filled</data>
      <data key="d7"></data>
    </edge>
    <edge source="43" target="44">
      <data key="d0">filled</data>
      <data key="d7"></data>
    </edge>
    <edge source="43" target="55">
      <data key="d0">filled</data>
      <data key="d7"></data>
    </edge>
    <edge source="44" target="45">
      <data key="d0">filled</data>
      <data key="d7"></data>
    </edge>
    <edge source="45" target="46">
      <data key="d0">filled</data>
      <data key="d7"></data>
    </edge>
    <edge source="46" target="47">
      <data key="d0">filled</data>
      <data key="d7"></data>
    </edge>
    <edge source="47" target="48">
      <data key="d0">filled</data>
      <data key="d7"></data>
    </edge>
    <edge source="47" target="8">
      <data key="d0">filled</data>
      <data key="d7"></data>
    </edge>
    <edge source="48" target="49">
      <data key="d0">filled</data>
      <data key="d7"></data>
    </edge>
    <edge source="49" target="50">
      <data key="d0">filled</data>
      <data key="d7"></data>
    </edge>
    <edge source="5" target="6">
      <data key="d0">filled</data>
      <data key="d7"></data>
    </edge>
    <edge source="50" target="51">
      <data key="d0">filled</data>
      <data key="d7"></data>
    </edge>
    <edge source="51" target="52">
      <data key="d0">filled</data>
      <data key="d7"></data>
    </edge>
    <edge source="52" target="53">
      <data key="d0">filled</data>
      <data key="d7"></data>
    </edge>
    <edge source="53" target="54">
      <data key="d0">filled</data>
      <data key="d7"></data>
    </edge>
    <edge source="54" target="55">
      <data key="d0">filled</data>
      <data key="d7"></data>
    </edge>
    <edge source="6" target="7">
      <data key="d0">filled</data>
      <data key="d7"></data>
    </edge>
    <edge source="7" target="3">
      <data key="d0">filled</data>
      <data key="d7"></data>
    </edge>
    <edge source="8" target="10">
      <data key="d0">filled</data>
      <data key="d7"></data>
    </edge>
    <edge source="9" target="48">
      <data key="d0">filled</data>
      <data key="d7"></data>
    </edge>
  </graph>
</graphml>
