<?xml version="1.0" encoding="UTF-8"?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns
     http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd">

  <!-- Created by Graph::Easy v0.76 at Tue Jun  8 23:23:44 2021 -->

  <key id="d0" for="edge" attr.name="arrowstyle" attr.type="string">
    <default>open</default>
  </key>
  <key id="d1" for="graph" attr.name="colorscheme" attr.type="string">
    <default>w3c</default>
  </key>
  <key id="d2" for="graph" attr.name="flow" attr.type="string">
    <default>east</default>
  </key>
  <key id="d3" for="graph" attr.name="title" attr.type="string">
    <default></default>
  </key>
  <key id="d4" for="node" attr.name="label" attr.type="string"/>
  <key id="d5" for="edge" attr.name="label" attr.type="string"/>
  <key id="d6" for="edge" attr.name="style" attr.type="string">
    <default>solid</default>
  </key>

  <graph id="G" edgedefault="directed">
    <data key="d1">x11</data>
    <data key="d2">south</data>
    <data key="d3">main</data>
    <node id="1000182">
      <data key="d4">(METHOD,main)</data>
    </node>
    <node id="1000186">
      <data key="d4">(scanf,scanf(&quot;%d\n&quot;, &amp;n ))</data>
    </node>
    <node id="1000188">
      <data key="d4">(&lt;operator&gt;.addressOf,&amp;n)</data>
    </node>
    <node id="1000191">
      <data key="d4">(&lt;operator&gt;.assignment,*s = ( int * ) malloc ( n * sizeof( int ) ))</data>
    </node>
    <node id="1000193">
      <data key="d4">(&lt;operator&gt;.cast,( int * ) malloc ( n * sizeof( int ) ))</data>
    </node>
    <node id="1000194">
      <data key="d4">(UNKNOWN,int *,int *)</data>
    </node>
    <node id="1000195">
      <data key="d4">(malloc,malloc ( n * sizeof( int ) ))</data>
    </node>
    <node id="1000196">
      <data key="d4">(&lt;operator&gt;.multiplication,n * sizeof( int ))</data>
    </node>
    <node id="1000198">
      <data key="d4">(&lt;operator&gt;.sizeOf,sizeof( int ))</data>
    </node>
    <node id="1000202">
      <data key="d4">(&lt;operator&gt;.assignment,i = 0)</data>
    </node>
    <node id="1000205">
      <data key="d4">(&lt;operator&gt;.lessThan,i &lt; n)</data>
    </node>
    <node id="1000208">
      <data key="d4">(&lt;operator&gt;.postIncrement,i ++)</data>
    </node>
    <node id="1000210">
      <data key="d4">(scanf,scanf(&quot;%d&quot;, s + i ))</data>
    </node>
    <node id="1000212">
      <data key="d4">(&lt;operator&gt;.addition,s + i)</data>
    </node>
    <node id="1000215">
      <data key="d4">(qsort,qsort( ( void * )s, n, sizeof( int ), compare ))</data>
    </node>
    <node id="1000216">
      <data key="d4">(&lt;operator&gt;.cast,( void * )s)</data>
    </node>
    <node id="1000217">
      <data key="d4">(UNKNOWN,void *,void *)</data>
    </node>
    <node id="1000220">
      <data key="d4">(&lt;operator&gt;.sizeOf,sizeof( int ))</data>
    </node>
    <node id="1000224">
      <data key="d4">(scanf,scanf(&quot;%d\n&quot;, &amp;q ))</data>
    </node>
    <node id="1000226">
      <data key="d4">(&lt;operator&gt;.addressOf,&amp;q)</data>
    </node>
    <node id="1000229">
      <data key="d4">(&lt;operator&gt;.assignment,count = 0)</data>
    </node>
    <node id="1000234">
      <data key="d4">(&lt;operator&gt;.assignment,i = 0)</data>
    </node>
    <node id="1000237">
      <data key="d4">(&lt;operator&gt;.lessThan,i &lt; q)</data>
    </node>
    <node id="1000240">
      <data key="d4">(&lt;operator&gt;.postIncrement,i ++)</data>
    </node>
    <node id="1000244">
      <data key="d4">(scanf,scanf(&quot;%d&quot;, &amp;t ))</data>
    </node>
    <node id="1000246">
      <data key="d4">(&lt;operator&gt;.addressOf,&amp;t)</data>
    </node>
    <node id="1000248">
      <data key="d4">(&lt;operator&gt;.assignmentPlus,count += search( s, n, t ))</data>
    </node>
    <node id="1000250">
      <data key="d4">(search,search( s, n, t ))</data>
    </node>
    <node id="1000254">
      <data key="d4">(printf,printf( &quot;%d\n&quot;, count ))</data>
    </node>
    <node id="1000257">
      <data key="d4">(RETURN,return 0;,return 0;)</data>
    </node>
    <node id="1000259">
      <data key="d4">(METHOD_RETURN,int)</data>
    </node>

    <edge source="1000182" target="1000188">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000186" target="1000194">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000188" target="1000186">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000191" target="1000202">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000193" target="1000191">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000194" target="1000198">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000195" target="1000193">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000196" target="1000195">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000198" target="1000196">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000202" target="1000205">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000205" target="1000212">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000205" target="1000212">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000205" target="1000217">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000208" target="1000205">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000210" target="1000208">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000212" target="1000210">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000215" target="1000226">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000216" target="1000220">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000217" target="1000216">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000220" target="1000215">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000224" target="1000229">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000226" target="1000224">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000229" target="1000234">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000234" target="1000237">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000237" target="1000246">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000237" target="1000246">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000237" target="1000254">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000240" target="1000237">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000244" target="1000250">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000246" target="1000244">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000248" target="1000240">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000250" target="1000248">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000254" target="1000257">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000257" target="1000259">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
  </graph>
</graphml>
