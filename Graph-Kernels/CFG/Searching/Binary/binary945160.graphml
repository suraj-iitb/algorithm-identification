<?xml version="1.0" encoding="UTF-8"?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns
     http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd">

  <!-- Created by Graph::Easy v0.76 at Wed Jun  9 00:10:46 2021 -->

  <key id="d0" for="edge" attr.name="arrowstyle" attr.type="string">
    <default>open</default>
  </key>
  <key id="d1" for="graph" attr.name="colorscheme" attr.type="string">
    <default>w3c</default>
  </key>
  <key id="d2" for="graph" attr.name="flow" attr.type="string">
    <default>east</default>
  </key>
  <key id="d3" for="graph" attr.name="title" attr.type="string">
    <default></default>
  </key>
  <key id="d4" for="node" attr.name="label" attr.type="string"/>
  <key id="d5" for="edge" attr.name="label" attr.type="string"/>
  <key id="d6" for="edge" attr.name="style" attr.type="string">
    <default>solid</default>
  </key>

  <graph id="G" edgedefault="directed">
    <data key="d1">x11</data>
    <data key="d2">south</data>
    <data key="d3">main</data>
    <node id="1000103">
      <data key="d4">(METHOD,main)</data>
    </node>
    <node id="1000112">
      <data key="d4">(&lt;operator&gt;.assignment,left=0)</data>
    </node>
    <node id="1000117">
      <data key="d4">(&lt;operator&gt;.assignment,cnt=0)</data>
    </node>
    <node id="1000120">
      <data key="d4">(scanf,scanf(&quot;%d&quot;,&amp;n))</data>
    </node>
    <node id="1000122">
      <data key="d4">(&lt;operator&gt;.addressOf,&amp;n)</data>
    </node>
    <node id="1000124">
      <data key="d4">(&lt;operator&gt;.assignment,right=n)</data>
    </node>
    <node id="1000127">
      <data key="d4">(&lt;operator&gt;.assignment,S=(int *)malloc(sizeof(int)*n))</data>
    </node>
    <node id="1000129">
      <data key="d4">(&lt;operator&gt;.cast,(int *)malloc(sizeof(int)*n))</data>
    </node>
    <node id="1000130">
      <data key="d4">(UNKNOWN,int *,int *)</data>
    </node>
    <node id="1000131">
      <data key="d4">(malloc,malloc(sizeof(int)*n))</data>
    </node>
    <node id="1000132">
      <data key="d4">(&lt;operator&gt;.multiplication,sizeof(int)*n)</data>
    </node>
    <node id="1000133">
      <data key="d4">(&lt;operator&gt;.sizeOf,sizeof(int))</data>
    </node>
    <node id="1000137">
      <data key="d4">(&lt;operator&gt;.assignment,i=0)</data>
    </node>
    <node id="1000140">
      <data key="d4">(&lt;operator&gt;.lessThan,i&lt;n)</data>
    </node>
    <node id="1000143">
      <data key="d4">(&lt;operator&gt;.postIncrement,i++)</data>
    </node>
    <node id="1000145">
      <data key="d4">(scanf,scanf(&quot;%d&quot;,&amp;S[i]))</data>
    </node>
    <node id="1000147">
      <data key="d4">(&lt;operator&gt;.addressOf,&amp;S[i])</data>
    </node>
    <node id="1000148">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,S[i])</data>
    </node>
    <node id="1000151">
      <data key="d4">(scanf,scanf(&quot;%d&quot;,&amp;q))</data>
    </node>
    <node id="1000153">
      <data key="d4">(&lt;operator&gt;.addressOf,&amp;q)</data>
    </node>
    <node id="1000156">
      <data key="d4">(&lt;operator&gt;.assignment,i=0)</data>
    </node>
    <node id="1000159">
      <data key="d4">(&lt;operator&gt;.lessThan,i&lt;q)</data>
    </node>
    <node id="1000162">
      <data key="d4">(&lt;operator&gt;.postIncrement,i++)</data>
    </node>
    <node id="1000165">
      <data key="d4">(scanf,scanf(&quot;%d&quot;,&amp;work))</data>
    </node>
    <node id="1000167">
      <data key="d4">(&lt;operator&gt;.addressOf,&amp;work)</data>
    </node>
    <node id="1000173">
      <data key="d4">(&lt;operator&gt;.equals,left==right)</data>
    </node>
    <node id="1000178">
      <data key="d4">(&lt;operator&gt;.equals,S[(left+right)/2]==work)</data>
    </node>
    <node id="1000179">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,S[(left+right)/2])</data>
    </node>
    <node id="1000181">
      <data key="d4">(&lt;operator&gt;.division,(left+right)/2)</data>
    </node>
    <node id="1000182">
      <data key="d4">(&lt;operator&gt;.addition,left+right)</data>
    </node>
    <node id="1000188">
      <data key="d4">(&lt;operator&gt;.postIncrement,cnt++)</data>
    </node>
    <node id="1000192">
      <data key="d4">(&lt;operator&gt;.greaterThan,S[(left+right)/2]&gt;work)</data>
    </node>
    <node id="1000193">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,S[(left+right)/2])</data>
    </node>
    <node id="1000195">
      <data key="d4">(&lt;operator&gt;.division,(left+right)/2)</data>
    </node>
    <node id="1000196">
      <data key="d4">(&lt;operator&gt;.addition,left+right)</data>
    </node>
    <node id="1000201">
      <data key="d4">(&lt;operator&gt;.assignment,right=(left+right)/2)</data>
    </node>
    <node id="1000203">
      <data key="d4">(&lt;operator&gt;.division,(left+right)/2)</data>
    </node>
    <node id="1000204">
      <data key="d4">(&lt;operator&gt;.addition,left+right)</data>
    </node>
    <node id="1000209">
      <data key="d4">(&lt;operator&gt;.lessThan,S[(left+right)/2]&lt;work)</data>
    </node>
    <node id="1000210">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,S[(left+right)/2])</data>
    </node>
    <node id="1000212">
      <data key="d4">(&lt;operator&gt;.division,(left+right)/2)</data>
    </node>
    <node id="1000213">
      <data key="d4">(&lt;operator&gt;.addition,left+right)</data>
    </node>
    <node id="1000218">
      <data key="d4">(&lt;operator&gt;.assignment,left=(left+right)/2+1)</data>
    </node>
    <node id="1000220">
      <data key="d4">(&lt;operator&gt;.addition,(left+right)/2+1)</data>
    </node>
    <node id="1000221">
      <data key="d4">(&lt;operator&gt;.division,(left+right)/2)</data>
    </node>
    <node id="1000222">
      <data key="d4">(&lt;operator&gt;.addition,left+right)</data>
    </node>
    <node id="1000227">
      <data key="d4">(&lt;operator&gt;.assignment,left=0)</data>
    </node>
    <node id="1000230">
      <data key="d4">(&lt;operator&gt;.assignment,right=n)</data>
    </node>
    <node id="1000233">
      <data key="d4">(printf,printf(&quot;%d\n&quot;,cnt))</data>
    </node>
    <node id="1000236">
      <data key="d4">(free,free(S))</data>
    </node>
    <node id="1000238">
      <data key="d4">(RETURN,return 0;,return 0;)</data>
    </node>
    <node id="1000240">
      <data key="d4">(METHOD_RETURN,int)</data>
    </node>

    <edge source="1000103" target="1000112">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000112" target="1000117">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000117" target="1000122">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000120" target="1000124">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000122" target="1000120">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000124" target="1000130">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000127" target="1000137">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000129" target="1000127">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000130" target="1000133">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000131" target="1000129">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000132" target="1000131">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000133" target="1000132">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000137" target="1000140">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000140" target="1000148">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000140" target="1000148">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000140" target="1000153">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000143" target="1000140">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000145" target="1000143">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000147" target="1000145">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000148" target="1000147">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000151" target="1000156">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000153" target="1000151">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000156" target="1000159">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000159" target="1000167">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000159" target="1000167">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000159" target="1000233">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000162" target="1000159">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000165" target="1000173">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000165" target="1000227">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000167" target="1000165">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000173" target="1000182">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000173" target="1000227">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000173" target="1000233">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000178" target="1000188">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000178" target="1000196">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000179" target="1000178">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000181" target="1000179">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000182" target="1000181">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000188" target="1000227">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000188" target="1000233">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000192" target="1000204">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000192" target="1000213">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000193" target="1000192">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000195" target="1000193">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000196" target="1000195">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000201" target="1000213">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000203" target="1000201">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000204" target="1000203">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000209" target="1000173">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000209" target="1000222">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000209" target="1000227">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000210" target="1000209">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000212" target="1000210">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000213" target="1000212">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000218" target="1000173">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000218" target="1000227">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000220" target="1000218">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000221" target="1000220">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000222" target="1000221">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000227" target="1000230">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000230" target="1000162">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000233" target="1000236">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000236" target="1000238">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000238" target="1000240">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
  </graph>
</graphml>
