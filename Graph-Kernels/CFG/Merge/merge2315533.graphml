<?xml version="1.0" encoding="UTF-8"?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns
     http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd">

  <!-- Created by Graph::Easy v0.76 at Tue Oct 27 10:21:23 2020 -->

  <key id="d0" for="edge" attr.name="arrowstyle" attr.type="string">
    <default>open</default>
  </key>
  <key id="d1" for="graph" attr.name="colorscheme" attr.type="string">
    <default>w3c</default>
  </key>
  <key id="d2" for="graph" attr.name="flow" attr.type="string">
    <default>east</default>
  </key>
  <key id="d3" for="graph" attr.name="title" attr.type="string">
    <default></default>
  </key>
  <key id="d4" for="node" attr.name="label" attr.type="string"/>
  <key id="d5" for="edge" attr.name="label" attr.type="string"/>
  <key id="d6" for="edge" attr.name="style" attr.type="string">
    <default>solid</default>
  </key>

  <graph id="G" edgedefault="directed">
    <data key="d1">x11</data>
    <data key="d2">south</data>
    <data key="d3">merge</data>
    <node id="1000102">
      <data key="d4">(METHOD,merge)</data>
    </node>
    <node id="1000109">
      <data key="d4">(&lt;operator&gt;.assignment,len = size_left + size_right)</data>
    </node>
    <node id="1000111">
      <data key="d4">(&lt;operator&gt;.addition,size_left + size_right)</data>
    </node>
    <node id="1000115">
      <data key="d4">(&lt;operator&gt;.assignment,*buf = (int64_t *)malloc(sizeof(int64_t) * len))</data>
    </node>
    <node id="1000117">
      <data key="d4">(&lt;operator&gt;.cast,(int64_t *)malloc(sizeof(int64_t) * len))</data>
    </node>
    <node id="1000118">
      <data key="d4">(UNKNOWN,int64_t *,int64_t *)</data>
    </node>
    <node id="1000119">
      <data key="d4">(malloc,malloc(sizeof(int64_t) * len))</data>
    </node>
    <node id="1000120">
      <data key="d4">(&lt;operator&gt;.multiplication,sizeof(int64_t) * len)</data>
    </node>
    <node id="1000121">
      <data key="d4">(&lt;operator&gt;.sizeOf,sizeof(int64_t))</data>
    </node>
    <node id="1000125">
      <data key="d4">(&lt;operator&gt;.assignment,count = 0)</data>
    </node>
    <node id="1000129">
      <data key="d4">(&lt;operator&gt;.assignment,left_count = 0)</data>
    </node>
    <node id="1000133">
      <data key="d4">(&lt;operator&gt;.assignment,right_count = 0)</data>
    </node>
    <node id="1000138">
      <data key="d4">(&lt;operator&gt;.assignment,i = 0)</data>
    </node>
    <node id="1000141">
      <data key="d4">(&lt;operator&gt;.lessThan,i &lt; len)</data>
    </node>
    <node id="1000144">
      <data key="d4">(&lt;operator&gt;.postIncrement,i++)</data>
    </node>
    <node id="1000148">
      <data key="d4">(&lt;operator&gt;.logicalAnd,(left_count &lt; size_left) &amp;&amp; (right_count &lt; size_right))</data>
    </node>
    <node id="1000149">
      <data key="d4">(&lt;operator&gt;.lessThan,left_count &lt; size_left)</data>
    </node>
    <node id="1000152">
      <data key="d4">(&lt;operator&gt;.lessThan,right_count &lt; size_right)</data>
    </node>
    <node id="1000157">
      <data key="d4">(&lt;operator&gt;.lessThan,left[left_count] &lt; right[right_count])</data>
    </node>
    <node id="1000158">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,left[left_count])</data>
    </node>
    <node id="1000161">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,right[right_count])</data>
    </node>
    <node id="1000165">
      <data key="d4">(&lt;operator&gt;.assignment,buf[i] = left[left_count])</data>
    </node>
    <node id="1000166">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,buf[i])</data>
    </node>
    <node id="1000169">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,left[left_count])</data>
    </node>
    <node id="1000172">
      <data key="d4">(&lt;operator&gt;.postIncrement,left_count++)</data>
    </node>
    <node id="1000176">
      <data key="d4">(&lt;operator&gt;.assignment,buf[i] = right[right_count])</data>
    </node>
    <node id="1000177">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,buf[i])</data>
    </node>
    <node id="1000180">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,right[right_count])</data>
    </node>
    <node id="1000183">
      <data key="d4">(&lt;operator&gt;.postIncrement,right_count++)</data>
    </node>
    <node id="1000187">
      <data key="d4">(&lt;operator&gt;.lessThan,left_count &lt; size_left)</data>
    </node>
    <node id="1000191">
      <data key="d4">(&lt;operator&gt;.assignment,buf[i] = left[left_count])</data>
    </node>
    <node id="1000192">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,buf[i])</data>
    </node>
    <node id="1000195">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,left[left_count])</data>
    </node>
    <node id="1000198">
      <data key="d4">(&lt;operator&gt;.postIncrement,left_count++)</data>
    </node>
    <node id="1000202">
      <data key="d4">(&lt;operator&gt;.assignment,buf[i] = right[right_count])</data>
    </node>
    <node id="1000203">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,buf[i])</data>
    </node>
    <node id="1000206">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,right[right_count])</data>
    </node>
    <node id="1000209">
      <data key="d4">(&lt;operator&gt;.postIncrement,right_count++)</data>
    </node>
    <node id="1000211">
      <data key="d4">(&lt;operator&gt;.postIncrement,count++)</data>
    </node>
    <node id="1000213">
      <data key="d4">(memcpy,memcpy(left, buf, sizeof(int64_t) * len))</data>
    </node>
    <node id="1000216">
      <data key="d4">(&lt;operator&gt;.multiplication,sizeof(int64_t) * len)</data>
    </node>
    <node id="1000217">
      <data key="d4">(&lt;operator&gt;.sizeOf,sizeof(int64_t))</data>
    </node>
    <node id="1000220">
      <data key="d4">(free,free(buf))</data>
    </node>
    <node id="1000222">
      <data key="d4">(RETURN,return count;,return count;)</data>
    </node>
    <node id="1000224">
      <data key="d4">(METHOD_RETURN,static size_t)</data>
    </node>

    <edge source="1000102" target="1000111">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000109" target="1000118">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000111" target="1000109">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000115" target="1000125">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000117" target="1000115">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000118" target="1000121">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000119" target="1000117">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000120" target="1000119">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000121" target="1000120">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000125" target="1000129">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000129" target="1000133">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000133" target="1000138">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000138" target="1000141">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000141" target="1000149">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000141" target="1000149">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000141" target="1000217">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000144" target="1000141">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000148" target="1000187">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000148" target="1000158">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000149" target="1000148">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000149" target="1000152">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000152" target="1000148">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000157" target="1000166">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000157" target="1000177">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000158" target="1000161">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000161" target="1000157">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000165" target="1000172">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000166" target="1000169">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000169" target="1000165">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000172" target="1000211">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000176" target="1000183">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000177" target="1000180">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000180" target="1000176">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000183" target="1000211">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000187" target="1000192">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000187" target="1000203">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000191" target="1000198">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000192" target="1000195">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000195" target="1000191">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000198" target="1000211">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000202" target="1000209">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000203" target="1000206">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000206" target="1000202">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000209" target="1000211">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000211" target="1000144">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000213" target="1000220">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000216" target="1000213">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000217" target="1000216">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000220" target="1000222">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000222" target="1000224">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
  </graph>
</graphml>
