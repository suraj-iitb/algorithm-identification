<?xml version="1.0" encoding="UTF-8"?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns
     http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd">

  <!-- Created by Graph::Easy v0.76 at Tue Jun  8 23:36:31 2021 -->

  <key id="d0" for="edge" attr.name="arrowstyle" attr.type="string">
    <default>open</default>
  </key>
  <key id="d1" for="graph" attr.name="colorscheme" attr.type="string">
    <default>w3c</default>
  </key>
  <key id="d2" for="graph" attr.name="flow" attr.type="string">
    <default>east</default>
  </key>
  <key id="d3" for="graph" attr.name="title" attr.type="string">
    <default></default>
  </key>
  <key id="d4" for="node" attr.name="label" attr.type="string"/>
  <key id="d5" for="edge" attr.name="label" attr.type="string"/>
  <key id="d6" for="edge" attr.name="style" attr.type="string">
    <default>solid</default>
  </key>

  <graph id="G" edgedefault="directed">
    <data key="d1">x11</data>
    <data key="d2">south</data>
    <data key="d3">binarySearch</data>
    <node id="1000102">
      <data key="d4">(METHOD,binarySearch)</data>
    </node>
    <node id="1000109">
      <data key="d4">(&lt;operator&gt;.greaterThan,head&gt;tail)</data>
    </node>
    <node id="1000112">
      <data key="d4">(RETURN,return 0;,return 0;)</data>
    </node>
    <node id="1000115">
      <data key="d4">(&lt;operator&gt;.assignment,mid=(head+tail)/2)</data>
    </node>
    <node id="1000117">
      <data key="d4">(&lt;operator&gt;.division,(head+tail)/2)</data>
    </node>
    <node id="1000118">
      <data key="d4">(&lt;operator&gt;.addition,head+tail)</data>
    </node>
    <node id="1000123">
      <data key="d4">(&lt;operator&gt;.equals,s[mid]==key)</data>
    </node>
    <node id="1000124">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,s[mid])</data>
    </node>
    <node id="1000128">
      <data key="d4">(RETURN,return 1;,return 1;)</data>
    </node>
    <node id="1000132">
      <data key="d4">(&lt;operator&gt;.greaterThan,s[mid]&gt;key)</data>
    </node>
    <node id="1000133">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,s[mid])</data>
    </node>
    <node id="1000137">
      <data key="d4">(&lt;operator&gt;.assignment,tail=mid-1)</data>
    </node>
    <node id="1000139">
      <data key="d4">(&lt;operator&gt;.subtraction,mid-1)</data>
    </node>
    <node id="1000143">
      <data key="d4">(&lt;operator&gt;.assignment,head=mid+1)</data>
    </node>
    <node id="1000145">
      <data key="d4">(&lt;operator&gt;.addition,mid+1)</data>
    </node>
    <node id="1000148">
      <data key="d4">(RETURN,return binarySearch(s,key,head,tail);,return binarySearch(s,key,head,tail);)</data>
    </node>
    <node id="1000149">
      <data key="d4">(binarySearch,binarySearch(s,key,head,tail))</data>
    </node>
    <node id="1000154">
      <data key="d4">(METHOD_RETURN,int)</data>
    </node>

    <edge source="1000102" target="1000109">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000109" target="1000112">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000109" target="1000118">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000112" target="1000154">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000115" target="1000124">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000117" target="1000115">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000118" target="1000117">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000123" target="1000128">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000123" target="1000133">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000124" target="1000123">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000128" target="1000154">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000132" target="1000139">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000132" target="1000145">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000133" target="1000132">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000137" target="1000149">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000139" target="1000137">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000143" target="1000149">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000145" target="1000143">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000148" target="1000154">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000149" target="1000148">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
  </graph>
</graphml>
