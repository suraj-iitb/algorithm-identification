<?xml version="1.0" encoding="UTF-8"?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns
     http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd">

  <!-- Created by Graph::Easy v0.76 at Tue Oct 27 10:44:07 2020 -->

  <key id="d0" for="edge" attr.name="arrowstyle" attr.type="string">
    <default>open</default>
  </key>
  <key id="d1" for="graph" attr.name="colorscheme" attr.type="string">
    <default>w3c</default>
  </key>
  <key id="d2" for="graph" attr.name="flow" attr.type="string">
    <default>east</default>
  </key>
  <key id="d3" for="graph" attr.name="title" attr.type="string">
    <default></default>
  </key>
  <key id="d4" for="node" attr.name="label" attr.type="string"/>
  <key id="d5" for="edge" attr.name="label" attr.type="string"/>
  <key id="d6" for="edge" attr.name="style" attr.type="string">
    <default>solid</default>
  </key>

  <graph id="G" edgedefault="directed">
    <data key="d1">x11</data>
    <data key="d2">south</data>
    <data key="d3">main</data>
    <node id="1000116">
      <data key="d4">(METHOD,main)</data>
    </node>
    <node id="1000121">
      <data key="d4">(scanf,scanf(&quot;%d&quot;,&amp;n))</data>
    </node>
    <node id="1000123">
      <data key="d4">(&lt;operator&gt;.addressOf,&amp;n)</data>
    </node>
    <node id="1000126">
      <data key="d4">(&lt;operator&gt;.assignment,x=0)</data>
    </node>
    <node id="1000129">
      <data key="d4">(&lt;operator&gt;.lessThan,x&lt;n)</data>
    </node>
    <node id="1000132">
      <data key="d4">(&lt;operator&gt;.postIncrement,x++)</data>
    </node>
    <node id="1000135">
      <data key="d4">(scanf,scanf(&quot;%d&quot;,&amp;S[x]))</data>
    </node>
    <node id="1000137">
      <data key="d4">(&lt;operator&gt;.addressOf,&amp;S[x])</data>
    </node>
    <node id="1000138">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,S[x])</data>
    </node>
    <node id="1000141">
      <data key="d4">(margeSort,margeSort(S,0,n))</data>
    </node>
    <node id="1000146">
      <data key="d4">(&lt;operator&gt;.assignment,x=0)</data>
    </node>
    <node id="1000149">
      <data key="d4">(&lt;operator&gt;.lessThan,x&lt;n)</data>
    </node>
    <node id="1000152">
      <data key="d4">(&lt;operator&gt;.postIncrement,x++)</data>
    </node>
    <node id="1000156">
      <data key="d4">(&lt;operator&gt;.greaterThan,x&gt;0)</data>
    </node>
    <node id="1000159">
      <data key="d4">(printf,printf(&quot; &quot;))</data>
    </node>
    <node id="1000161">
      <data key="d4">(printf,printf(&quot;%d&quot;,S[x]))</data>
    </node>
    <node id="1000163">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,S[x])</data>
    </node>
    <node id="1000166">
      <data key="d4">(printf,printf(&quot;\n%d\n&quot;,cnt))</data>
    </node>
    <node id="1000169">
      <data key="d4">(RETURN,return 0;,return 0;)</data>
    </node>
    <node id="1000171">
      <data key="d4">(METHOD_RETURN,int)</data>
    </node>

    <edge source="1000116" target="1000123">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000121" target="1000126">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000123" target="1000121">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000126" target="1000129">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000129" target="1000138">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000129" target="1000138">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000129" target="1000141">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000132" target="1000129">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000135" target="1000132">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000137" target="1000135">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000138" target="1000137">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000141" target="1000146">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000146" target="1000149">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000149" target="1000156">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000149" target="1000156">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000149" target="1000166">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000152" target="1000149">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000156" target="1000159">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000156" target="1000163">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000159" target="1000163">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000161" target="1000152">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000163" target="1000161">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000166" target="1000169">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000169" target="1000171">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
  </graph>
</graphml>
