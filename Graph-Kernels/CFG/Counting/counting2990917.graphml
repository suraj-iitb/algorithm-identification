<?xml version="1.0" encoding="UTF-8"?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns
     http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd">

  <!-- Created by Graph::Easy v0.76 at Tue Oct 27 09:18:08 2020 -->

  <key id="d0" for="edge" attr.name="arrowstyle" attr.type="string">
    <default>open</default>
  </key>
  <key id="d1" for="graph" attr.name="colorscheme" attr.type="string">
    <default>w3c</default>
  </key>
  <key id="d2" for="graph" attr.name="flow" attr.type="string">
    <default>east</default>
  </key>
  <key id="d3" for="graph" attr.name="title" attr.type="string">
    <default></default>
  </key>
  <key id="d4" for="node" attr.name="label" attr.type="string"/>
  <key id="d5" for="edge" attr.name="label" attr.type="string"/>
  <key id="d6" for="edge" attr.name="style" attr.type="string">
    <default>solid</default>
  </key>

  <graph id="G" edgedefault="directed">
    <data key="d1">x11</data>
    <data key="d2">south</data>
    <data key="d3">main</data>
    <node id="1000102">
      <data key="d4">(METHOD,main)</data>
    </node>
    <node id="1000109">
      <data key="d4">(scanf,scanf(&quot;%d&quot;, &amp;n))</data>
    </node>
    <node id="1000111">
      <data key="d4">(&lt;operator&gt;.addressOf,&amp;n)</data>
    </node>
    <node id="1000113">
      <data key="d4">(&lt;operator&gt;.assignment,X=malloc(sizeof(int)*n+1))</data>
    </node>
    <node id="1000115">
      <data key="d4">(malloc,malloc(sizeof(int)*n+1))</data>
    </node>
    <node id="1000116">
      <data key="d4">(&lt;operator&gt;.addition,sizeof(int)*n+1)</data>
    </node>
    <node id="1000117">
      <data key="d4">(&lt;operator&gt;.multiplication,sizeof(int)*n)</data>
    </node>
    <node id="1000118">
      <data key="d4">(&lt;operator&gt;.sizeOf,sizeof(int))</data>
    </node>
    <node id="1000122">
      <data key="d4">(&lt;operator&gt;.assignment,Y=malloc(sizeof(int)*n+1))</data>
    </node>
    <node id="1000124">
      <data key="d4">(malloc,malloc(sizeof(int)*n+1))</data>
    </node>
    <node id="1000125">
      <data key="d4">(&lt;operator&gt;.addition,sizeof(int)*n+1)</data>
    </node>
    <node id="1000126">
      <data key="d4">(&lt;operator&gt;.multiplication,sizeof(int)*n)</data>
    </node>
    <node id="1000127">
      <data key="d4">(&lt;operator&gt;.sizeOf,sizeof(int))</data>
    </node>
    <node id="1000132">
      <data key="d4">(&lt;operator&gt;.assignment,i=0)</data>
    </node>
    <node id="1000135">
      <data key="d4">(&lt;operator&gt;.lessEqualsThan,i&lt;=max)</data>
    </node>
    <node id="1000138">
      <data key="d4">(&lt;operator&gt;.postIncrement,i++)</data>
    </node>
    <node id="1000140">
      <data key="d4">(&lt;operator&gt;.assignment,Z[i]=0)</data>
    </node>
    <node id="1000141">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,Z[i])</data>
    </node>
    <node id="1000146">
      <data key="d4">(&lt;operator&gt;.assignment,i=0)</data>
    </node>
    <node id="1000149">
      <data key="d4">(&lt;operator&gt;.lessThan,i&lt;n)</data>
    </node>
    <node id="1000152">
      <data key="d4">(&lt;operator&gt;.postIncrement,i++)</data>
    </node>
    <node id="1000155">
      <data key="d4">(scanf,scanf(&quot;%d&quot;, &amp;X[i+1]))</data>
    </node>
    <node id="1000157">
      <data key="d4">(&lt;operator&gt;.addressOf,&amp;X[i+1])</data>
    </node>
    <node id="1000158">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,X[i+1])</data>
    </node>
    <node id="1000160">
      <data key="d4">(&lt;operator&gt;.addition,i+1)</data>
    </node>
    <node id="1000163">
      <data key="d4">(&lt;operator&gt;.postIncrement,Z[X[i+1]]++)</data>
    </node>
    <node id="1000164">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,Z[X[i+1]])</data>
    </node>
    <node id="1000166">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,X[i+1])</data>
    </node>
    <node id="1000168">
      <data key="d4">(&lt;operator&gt;.addition,i+1)</data>
    </node>
    <node id="1000172">
      <data key="d4">(&lt;operator&gt;.assignment,i=1)</data>
    </node>
    <node id="1000175">
      <data key="d4">(&lt;operator&gt;.lessEqualsThan,i&lt;=max)</data>
    </node>
    <node id="1000178">
      <data key="d4">(&lt;operator&gt;.postIncrement,i++)</data>
    </node>
    <node id="1000180">
      <data key="d4">(&lt;operator&gt;.assignment,Z[i]=Z[i]+Z[i-1])</data>
    </node>
    <node id="1000181">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,Z[i])</data>
    </node>
    <node id="1000184">
      <data key="d4">(&lt;operator&gt;.addition,Z[i]+Z[i-1])</data>
    </node>
    <node id="1000185">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,Z[i])</data>
    </node>
    <node id="1000188">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,Z[i-1])</data>
    </node>
    <node id="1000190">
      <data key="d4">(&lt;operator&gt;.subtraction,i-1)</data>
    </node>
    <node id="1000194">
      <data key="d4">(&lt;operator&gt;.assignment,i=0)</data>
    </node>
    <node id="1000197">
      <data key="d4">(&lt;operator&gt;.lessEqualsThan,i&lt;=n)</data>
    </node>
    <node id="1000200">
      <data key="d4">(&lt;operator&gt;.postIncrement,i++)</data>
    </node>
    <node id="1000203">
      <data key="d4">(&lt;operator&gt;.assignment,Y[Z[X[i]]]=X[i])</data>
    </node>
    <node id="1000204">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,Y[Z[X[i]]])</data>
    </node>
    <node id="1000206">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,Z[X[i]])</data>
    </node>
    <node id="1000208">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,X[i])</data>
    </node>
    <node id="1000211">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,X[i])</data>
    </node>
    <node id="1000214">
      <data key="d4">(&lt;operator&gt;.postDecrement,Z[X[i]]--)</data>
    </node>
    <node id="1000215">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,Z[X[i]])</data>
    </node>
    <node id="1000217">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,X[i])</data>
    </node>
    <node id="1000220">
      <data key="d4">(printf,printf(&quot;%d&quot;,Y[1]))</data>
    </node>
    <node id="1000222">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,Y[1])</data>
    </node>
    <node id="1000226">
      <data key="d4">(&lt;operator&gt;.assignment,i=2)</data>
    </node>
    <node id="1000229">
      <data key="d4">(&lt;operator&gt;.lessEqualsThan,i&lt;=n)</data>
    </node>
    <node id="1000232">
      <data key="d4">(&lt;operator&gt;.postIncrement,i++)</data>
    </node>
    <node id="1000235">
      <data key="d4">(printf,printf(&quot; %d&quot;,Y[i]))</data>
    </node>
    <node id="1000237">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,Y[i])</data>
    </node>
    <node id="1000240">
      <data key="d4">(printf,printf(&quot;\n&quot;))</data>
    </node>
    <node id="1000242">
      <data key="d4">(RETURN,return 0;,return 0;)</data>
    </node>
    <node id="1000244">
      <data key="d4">(METHOD_RETURN,int)</data>
    </node>

    <edge source="1000102" target="1000111">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000109" target="1000118">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000111" target="1000109">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000113" target="1000127">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000115" target="1000113">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000116" target="1000115">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000117" target="1000116">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000118" target="1000117">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000122" target="1000132">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000124" target="1000122">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000125" target="1000124">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000126" target="1000125">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000127" target="1000126">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000132" target="1000135">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000135" target="1000141">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000135" target="1000141">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000135" target="1000146">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000138" target="1000135">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000140" target="1000138">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000141" target="1000140">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000146" target="1000149">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000149" target="1000160">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000149" target="1000160">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000149" target="1000172">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000152" target="1000149">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000155" target="1000168">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000157" target="1000155">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000158" target="1000157">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000160" target="1000158">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000163" target="1000152">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000164" target="1000163">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000166" target="1000164">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000168" target="1000166">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000172" target="1000175">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000175" target="1000181">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000175" target="1000181">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000175" target="1000194">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000178" target="1000175">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000180" target="1000178">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000181" target="1000185">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000184" target="1000180">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000185" target="1000190">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000188" target="1000184">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000190" target="1000188">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000194" target="1000197">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000197" target="1000208">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000197" target="1000208">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000197" target="1000222">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000200" target="1000197">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000203" target="1000217">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000204" target="1000211">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000206" target="1000204">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000208" target="1000206">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000211" target="1000203">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000214" target="1000200">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000215" target="1000214">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000217" target="1000215">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000220" target="1000226">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000222" target="1000220">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000226" target="1000229">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000229" target="1000237">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000229" target="1000237">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000229" target="1000240">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000232" target="1000229">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000235" target="1000232">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000237" target="1000235">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000240" target="1000242">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000242" target="1000244">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
  </graph>
</graphml>
