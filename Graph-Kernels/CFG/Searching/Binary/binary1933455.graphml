<?xml version="1.0" encoding="UTF-8"?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns
     http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd">

  <!-- Created by Graph::Easy v0.76 at Tue Jun  8 23:04:50 2021 -->

  <key id="d0" for="edge" attr.name="arrowstyle" attr.type="string">
    <default>open</default>
  </key>
  <key id="d1" for="graph" attr.name="colorscheme" attr.type="string">
    <default>w3c</default>
  </key>
  <key id="d2" for="graph" attr.name="flow" attr.type="string">
    <default>east</default>
  </key>
  <key id="d3" for="graph" attr.name="title" attr.type="string">
    <default></default>
  </key>
  <key id="d4" for="node" attr.name="label" attr.type="string"/>
  <key id="d5" for="edge" attr.name="label" attr.type="string"/>
  <key id="d6" for="edge" attr.name="style" attr.type="string">
    <default>solid</default>
  </key>

  <graph id="G" edgedefault="directed">
    <data key="d1">x11</data>
    <data key="d2">south</data>
    <data key="d3">main</data>
    <node id="1000102">
      <data key="d4">(METHOD,main)</data>
    </node>
    <node id="1000108">
      <data key="d4">(&lt;operator&gt;.assignment,count=0)</data>
    </node>
    <node id="1000112">
      <data key="d4">(scanf,scanf(&quot;%d&quot;, &amp;p))</data>
    </node>
    <node id="1000114">
      <data key="d4">(&lt;operator&gt;.addressOf,&amp;p)</data>
    </node>
    <node id="1000117">
      <data key="d4">(&lt;operator&gt;.assignment,*binary = (int*)malloc(sizeof(int)*p))</data>
    </node>
    <node id="1000119">
      <data key="d4">(&lt;operator&gt;.cast,(int*)malloc(sizeof(int)*p))</data>
    </node>
    <node id="1000120">
      <data key="d4">(UNKNOWN,int*,int*)</data>
    </node>
    <node id="1000121">
      <data key="d4">(malloc,malloc(sizeof(int)*p))</data>
    </node>
    <node id="1000122">
      <data key="d4">(&lt;operator&gt;.multiplication,sizeof(int)*p)</data>
    </node>
    <node id="1000123">
      <data key="d4">(&lt;operator&gt;.sizeOf,sizeof(int))</data>
    </node>
    <node id="1000127">
      <data key="d4">(&lt;operator&gt;.assignment,i = 0)</data>
    </node>
    <node id="1000130">
      <data key="d4">(&lt;operator&gt;.lessThan,i &lt; p)</data>
    </node>
    <node id="1000133">
      <data key="d4">(&lt;operator&gt;.postIncrement,i++)</data>
    </node>
    <node id="1000136">
      <data key="d4">(scanf,scanf(&quot;%d&quot;, &amp;binary[i]))</data>
    </node>
    <node id="1000138">
      <data key="d4">(&lt;operator&gt;.addressOf,&amp;binary[i])</data>
    </node>
    <node id="1000139">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,binary[i])</data>
    </node>
    <node id="1000142">
      <data key="d4">(scanf,scanf(&quot;%d&quot;, &amp;b))</data>
    </node>
    <node id="1000144">
      <data key="d4">(&lt;operator&gt;.addressOf,&amp;b)</data>
    </node>
    <node id="1000147">
      <data key="d4">(&lt;operator&gt;.assignment,*binary2 = (int*)malloc(sizeof(int)*b))</data>
    </node>
    <node id="1000149">
      <data key="d4">(&lt;operator&gt;.cast,(int*)malloc(sizeof(int)*b))</data>
    </node>
    <node id="1000150">
      <data key="d4">(UNKNOWN,int*,int*)</data>
    </node>
    <node id="1000151">
      <data key="d4">(malloc,malloc(sizeof(int)*b))</data>
    </node>
    <node id="1000152">
      <data key="d4">(&lt;operator&gt;.multiplication,sizeof(int)*b)</data>
    </node>
    <node id="1000153">
      <data key="d4">(&lt;operator&gt;.sizeOf,sizeof(int))</data>
    </node>
    <node id="1000157">
      <data key="d4">(&lt;operator&gt;.assignment,i = 0)</data>
    </node>
    <node id="1000160">
      <data key="d4">(&lt;operator&gt;.lessThan,i &lt; b)</data>
    </node>
    <node id="1000163">
      <data key="d4">(&lt;operator&gt;.postIncrement,i++)</data>
    </node>
    <node id="1000166">
      <data key="d4">(scanf,scanf(&quot;%d&quot;, &amp;binary2[i]))</data>
    </node>
    <node id="1000168">
      <data key="d4">(&lt;operator&gt;.addressOf,&amp;binary2[i])</data>
    </node>
    <node id="1000169">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,binary2[i])</data>
    </node>
    <node id="1000173">
      <data key="d4">(&lt;operator&gt;.assignment,i = 0)</data>
    </node>
    <node id="1000176">
      <data key="d4">(&lt;operator&gt;.lessThan,i &lt; b)</data>
    </node>
    <node id="1000179">
      <data key="d4">(&lt;operator&gt;.postIncrement,i++)</data>
    </node>
    <node id="1000183">
      <data key="d4">(&lt;operator&gt;.assignment,left = 0)</data>
    </node>
    <node id="1000187">
      <data key="d4">(&lt;operator&gt;.assignment,right = p)</data>
    </node>
    <node id="1000191">
      <data key="d4">(&lt;operator&gt;.lessThan,left &lt; right)</data>
    </node>
    <node id="1000195">
      <data key="d4">(&lt;operator&gt;.assignment,j = (left + right) / 2)</data>
    </node>
    <node id="1000197">
      <data key="d4">(&lt;operator&gt;.division,(left + right) / 2)</data>
    </node>
    <node id="1000198">
      <data key="d4">(&lt;operator&gt;.addition,left + right)</data>
    </node>
    <node id="1000203">
      <data key="d4">(&lt;operator&gt;.equals,binary2[i] == binary[j])</data>
    </node>
    <node id="1000204">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,binary2[i])</data>
    </node>
    <node id="1000207">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,binary[j])</data>
    </node>
    <node id="1000211">
      <data key="d4">(&lt;operator&gt;.postIncrement,count++)</data>
    </node>
    <node id="1000216">
      <data key="d4">(&lt;operator&gt;.greaterThan,binary2[i] &gt; binary[j])</data>
    </node>
    <node id="1000217">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,binary2[i])</data>
    </node>
    <node id="1000220">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,binary[j])</data>
    </node>
    <node id="1000223">
      <data key="d4">(&lt;operator&gt;.assignment,left = j + 1)</data>
    </node>
    <node id="1000225">
      <data key="d4">(&lt;operator&gt;.addition,j + 1)</data>
    </node>
    <node id="1000230">
      <data key="d4">(&lt;operator&gt;.lessThan,binary2[i] &lt; binary[j])</data>
    </node>
    <node id="1000231">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,binary2[i])</data>
    </node>
    <node id="1000234">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,binary[j])</data>
    </node>
    <node id="1000237">
      <data key="d4">(&lt;operator&gt;.assignment,right = j)</data>
    </node>
    <node id="1000240">
      <data key="d4">(printf,printf(&quot;%d\n&quot;, count))</data>
    </node>
    <node id="1000243">
      <data key="d4">(RETURN,return 0;,return 0;)</data>
    </node>
    <node id="1000245">
      <data key="d4">(METHOD_RETURN,int)</data>
    </node>

    <edge source="1000102" target="1000108">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000108" target="1000114">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000112" target="1000120">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000114" target="1000112">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000117" target="1000127">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000119" target="1000117">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000120" target="1000123">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000121" target="1000119">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000122" target="1000121">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000123" target="1000122">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000127" target="1000130">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000130" target="1000139">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000130" target="1000139">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000130" target="1000144">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000133" target="1000130">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000136" target="1000133">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000138" target="1000136">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000139" target="1000138">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000142" target="1000150">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000144" target="1000142">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000147" target="1000157">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000149" target="1000147">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000150" target="1000153">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000151" target="1000149">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000152" target="1000151">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000153" target="1000152">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000157" target="1000160">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000160" target="1000169">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000160" target="1000169">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000160" target="1000173">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000163" target="1000160">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000166" target="1000163">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000168" target="1000166">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000169" target="1000168">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000173" target="1000176">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000176" target="1000183">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000176" target="1000183">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000176" target="1000240">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000179" target="1000176">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000183" target="1000187">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000187" target="1000191">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000191" target="1000179">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000191" target="1000198">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000195" target="1000204">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000197" target="1000195">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000198" target="1000197">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000203" target="1000211">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000203" target="1000217">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000204" target="1000207">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000207" target="1000203">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000211" target="1000179">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000211" target="1000240">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000216" target="1000225">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000216" target="1000231">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000217" target="1000220">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000220" target="1000216">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000223" target="1000191">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000225" target="1000223">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000230" target="1000191">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000230" target="1000237">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000231" target="1000234">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000234" target="1000230">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000237" target="1000191">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000240" target="1000243">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000243" target="1000245">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
  </graph>
</graphml>
