<?xml version="1.0" encoding="UTF-8"?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns
     http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd">

  <!-- Created by Graph::Easy v0.76 at Mon Dec 21 22:39:44 2020 -->

  <key id="d0" for="edge" attr.name="arrowstyle" attr.type="string">
    <default>open</default>
  </key>
  <key id="d1" for="graph" attr.name="colorscheme" attr.type="string">
    <default>w3c</default>
  </key>
  <key id="d2" for="graph" attr.name="flow" attr.type="string">
    <default>east</default>
  </key>
  <key id="d3" for="graph" attr.name="title" attr.type="string">
    <default></default>
  </key>
  <key id="d4" for="node" attr.name="label" attr.type="string"/>
  <key id="d5" for="node" attr.name="bordercolor" attr.type="string">
    <default>#000000</default>
  </key>
  <key id="d6" for="node" attr.name="borderstyle" attr.type="string">
    <default>none</default>
  </key>
  <key id="d7" for="edge" attr.name="label" attr.type="string"/>
  <key id="d8" for="edge" attr.name="style" attr.type="string">
    <default>solid</default>
  </key>

  <graph id="G" edgedefault="directed">
    <data key="d1">x11</data>
    <data key="d2">south</data>
    <node id="0">
      <data key="d4">0: start</data>
    </node>
    <node id="1">
      <data key="d4">5: enter: get_data(dataset, num_train_samples)</data>
    </node>
    <node id="10">
      <data key="d4">53: parser = argparse.ArgumentParser(description=&apos;Problem 4&apos;)</data>
    </node>
    <node id="11">
      <data key="d4">54: parser.add_argument(&apos;--num_samples&apos;, type=int, default=(- 1), help=&apos;Number of samples to train on&apos;)</data>
    </node>
    <node id="12">
      <data key="d4">56: args = parser.parse_args()</data>
    </node>
    <node id="13">
      <data key="d4">58: num_train_samples = args.num_samples</data>
    </node>
    <node id="14">
      <data key="d4">60: (X_train, Y_train, X_test, Y_test) = get_data(&apos;D1&apos;, num_train_samples)</data>
    </node>
    <node id="15">
      <data key="d5">black</data>
      <data key="d6">dotted</data>
      <data key="d4">62: C = (max(np.max(Y_train), np.max(Y_test)) + 1)</data>
    </node>
    <node id="16">
      <data key="d4">63: D = X_train.shape[1]</data>
    </node>
    <node id="17">
      <data key="d4">65: perceptron = Perceptron(C, D)</data>
    </node>
    <node id="18">
      <data key="d4">67: perceptron.train(X_train, Y_train)</data>
    </node>
    <node id="19">
      <data key="d4">68: acc = perceptron.eval(X_test, Y_test)</data>
    </node>
    <node id="2">
      <data key="d4">5: exit: get_data(dataset, num_train_samples)</data>
    </node>
    <node id="20">
      <data key="d4">69: print(f&apos;Test Accuracy: {acc}&apos;)</data>
    </node>
    <node id="21">
      <data key="d4">71: num_samples = [10, 100, 1000, 10000, 50000, 80000]</data>
    </node>
    <node id="22">
      <data key="d4">72: plots_data = []</data>
    </node>
    <node id="23">
      <data key="d4">73: for: (True if num_samples else False)</data>
    </node>
    <node id="24">
      <data key="d4">73: sample = num_samples.shift()</data>
    </node>
    <node id="25">
      <data key="d4">74: (X_train, Y_train, X_test, Y_test) = get_data(&apos;D1&apos;, sample)</data>
    </node>
    <node id="26">
      <data key="d5">black</data>
      <data key="d6">dotted</data>
      <data key="d4">76: C = max(np.max(Y_train), np.max(Y_test))</data>
    </node>
    <node id="27">
      <data key="d4">78: D = X_train.shape[1]</data>
    </node>
    <node id="28">
      <data key="d4">80: percep = Perceptron(C, D)</data>
    </node>
    <node id="29">
      <data key="d4">82: percep.train(X_train, Y_train)</data>
    </node>
    <node id="3">
      <data key="d4">6: datasets = [&apos;D1&apos;, &apos;D2&apos;]</data>
    </node>
    <node id="30">
      <data key="d4">83: acc = percep.eval(X_test, Y_test)</data>
    </node>
    <node id="31">
      <data key="d4">84: plots_data.append(acc)</data>
    </node>
    <node id="32">
      <data key="d4">86: plt.figure(figsize=(4, 4))</data>
    </node>
    <node id="33">
      <data key="d4">87: plt.plot(num_samples, [(1 - x) for x in plots_data])</data>
    </node>
    <node id="34">
      <data key="d4">88: plt.xlabel(&apos;LOG NUM SAMPLES&apos;)</data>
    </node>
    <node id="35">
      <data key="d4">89: plt.ylabel(&apos;ERROR&apos;)</data>
    </node>
    <node id="36">
      <data key="d4">90: plt.xscale(&apos;LOG&apos;)</data>
    </node>
    <node id="37">
      <data key="d4">91: plt.title(&apos;TEST ERROR vs NUM SAMPLES&apos;)</data>
    </node>
    <node id="38">
      <data key="d4">92: plt.show()</data>
    </node>
    <node id="39">
      <data key="d4">0: stop</data>
    </node>
    <node id="4">
      <data key="d4">8: X_train = np.loadtxt(f&apos;data/{dataset}/training_data&apos;)</data>
    </node>
    <node id="5">
      <data key="d4">9: Y_train = np.loadtxt(f&apos;data/{dataset}/training_labels&apos;, dtype=int)</data>
    </node>
    <node id="6">
      <data key="d4">10: X_test = np.loadtxt(f&apos;data/{dataset}/test_data&apos;)</data>
    </node>
    <node id="7">
      <data key="d4">11: Y_test = np.loadtxt(f&apos;data/{dataset}/test_labels&apos;, dtype=int)</data>
    </node>
    <node id="8">
      <data key="d4">13: return (X_train[:num_train_samples, :], Y_train[:num_train_samples], X_test, Y_test)</data>
    </node>
    <node id="9">
      <data key="d4">52: if: (__name__ == &apos;__main__&apos;)</data>
    </node>

    <edge source="0" target="9">
      <data key="d0">filled</data>
      <data key="d7"></data>
    </edge>
    <edge source="1" target="3">
      <data key="d0">filled</data>
      <data key="d7"></data>
    </edge>
    <edge source="10" target="11">
      <data key="d0">filled</data>
      <data key="d7"></data>
    </edge>
    <edge source="11" target="12">
      <data key="d0">filled</data>
      <data key="d7"></data>
    </edge>
    <edge source="12" target="13">
      <data key="d0">filled</data>
      <data key="d7"></data>
    </edge>
    <edge source="13" target="14">
      <data key="d0">filled</data>
      <data key="d7"></data>
    </edge>
    <edge source="14" target="1">
      <data key="d0">filled</data>
      <data key="d7"></data>
    </edge>
    <edge source="14" target="15">
      <data key="d0">filled</data>
      <data key="d7"></data>
    </edge>
    <edge source="15" target="16">
      <data key="d0">filled</data>
      <data key="d7"></data>
    </edge>
    <edge source="16" target="17">
      <data key="d0">filled</data>
      <data key="d7"></data>
    </edge>
    <edge source="17" target="18">
      <data key="d0">filled</data>
      <data key="d7"></data>
    </edge>
    <edge source="18" target="19">
      <data key="d0">filled</data>
      <data key="d7"></data>
    </edge>
    <edge source="19" target="20">
      <data key="d0">filled</data>
      <data key="d7"></data>
    </edge>
    <edge source="2" target="15">
      <data key="d0">filled</data>
      <data key="d7"></data>
    </edge>
    <edge source="2" target="26">
      <data key="d0">filled</data>
      <data key="d7"></data>
    </edge>
    <edge source="20" target="21">
      <data key="d0">filled</data>
      <data key="d7"></data>
    </edge>
    <edge source="21" target="22">
      <data key="d0">filled</data>
      <data key="d7"></data>
    </edge>
    <edge source="22" target="23">
      <data key="d0">filled</data>
      <data key="d7"></data>
    </edge>
    <edge source="23" target="24">
      <data key="d0">filled</data>
      <data key="d7"></data>
    </edge>
    <edge source="23" target="32">
      <data key="d0">filled</data>
      <data key="d7"></data>
    </edge>
    <edge source="24" target="25">
      <data key="d0">filled</data>
      <data key="d7"></data>
    </edge>
    <edge source="25" target="1">
      <data key="d0">filled</data>
      <data key="d7"></data>
    </edge>
    <edge source="25" target="26">
      <data key="d0">filled</data>
      <data key="d7"></data>
    </edge>
    <edge source="26" target="27">
      <data key="d0">filled</data>
      <data key="d7"></data>
    </edge>
    <edge source="27" target="28">
      <data key="d0">filled</data>
      <data key="d7"></data>
    </edge>
    <edge source="28" target="29">
      <data key="d0">filled</data>
      <data key="d7"></data>
    </edge>
    <edge source="29" target="30">
      <data key="d0">filled</data>
      <data key="d7"></data>
    </edge>
    <edge source="3" target="4">
      <data key="d0">filled</data>
      <data key="d7"></data>
    </edge>
    <edge source="30" target="31">
      <data key="d0">filled</data>
      <data key="d7"></data>
    </edge>
    <edge source="31" target="23">
      <data key="d0">filled</data>
      <data key="d7"></data>
    </edge>
    <edge source="32" target="33">
      <data key="d0">filled</data>
      <data key="d7"></data>
    </edge>
    <edge source="33" target="34">
      <data key="d0">filled</data>
      <data key="d7"></data>
    </edge>
    <edge source="34" target="35">
      <data key="d0">filled</data>
      <data key="d7"></data>
    </edge>
    <edge source="35" target="36">
      <data key="d0">filled</data>
      <data key="d7"></data>
    </edge>
    <edge source="36" target="37">
      <data key="d0">filled</data>
      <data key="d7"></data>
    </edge>
    <edge source="37" target="38">
      <data key="d0">filled</data>
      <data key="d7"></data>
    </edge>
    <edge source="38" target="39">
      <data key="d0">filled</data>
      <data key="d7"></data>
    </edge>
    <edge source="4" target="5">
      <data key="d0">filled</data>
      <data key="d7"></data>
    </edge>
    <edge source="5" target="6">
      <data key="d0">filled</data>
      <data key="d7"></data>
    </edge>
    <edge source="6" target="7">
      <data key="d0">filled</data>
      <data key="d7"></data>
    </edge>
    <edge source="7" target="8">
      <data key="d0">filled</data>
      <data key="d7"></data>
    </edge>
    <edge source="8" target="2">
      <data key="d0">filled</data>
      <data key="d7"></data>
    </edge>
    <edge source="9" target="10">
      <data key="d0">filled</data>
      <data key="d7"></data>
    </edge>
    <edge source="9" target="39">
      <data key="d0">filled</data>
      <data key="d7"></data>
    </edge>
  </graph>
</graphml>
