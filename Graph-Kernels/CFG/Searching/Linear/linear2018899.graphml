<?xml version="1.0" encoding="UTF-8"?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns
     http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd">

  <!-- Created by Graph::Easy v0.76 at Tue Jun  8 23:35:14 2021 -->

  <key id="d0" for="edge" attr.name="arrowstyle" attr.type="string">
    <default>open</default>
  </key>
  <key id="d1" for="graph" attr.name="colorscheme" attr.type="string">
    <default>w3c</default>
  </key>
  <key id="d2" for="graph" attr.name="flow" attr.type="string">
    <default>east</default>
  </key>
  <key id="d3" for="graph" attr.name="title" attr.type="string">
    <default></default>
  </key>
  <key id="d4" for="node" attr.name="label" attr.type="string"/>
  <key id="d5" for="edge" attr.name="label" attr.type="string"/>
  <key id="d6" for="edge" attr.name="style" attr.type="string">
    <default>solid</default>
  </key>

  <graph id="G" edgedefault="directed">
    <data key="d1">x11</data>
    <data key="d2">south</data>
    <data key="d3">input</data>
    <node id="1000347">
      <data key="d4">(METHOD,input)</data>
    </node>
    <node id="1000357">
      <data key="d4">(&lt;operator&gt;.assignment,top=btm=NULL)</data>
    </node>
    <node id="1000359">
      <data key="d4">(&lt;operator&gt;.assignment,btm=NULL)</data>
    </node>
    <node id="1000362">
      <data key="d4">(scanf,scanf(&quot;&quot;, &amp;n))</data>
    </node>
    <node id="1000364">
      <data key="d4">(&lt;operator&gt;.addressOf,&amp;n)</data>
    </node>
    <node id="1000366">
      <data key="d4">(&lt;operator&gt;.assignment,S=malloc(n*sizeof(long)))</data>
    </node>
    <node id="1000368">
      <data key="d4">(malloc,malloc(n*sizeof(long)))</data>
    </node>
    <node id="1000369">
      <data key="d4">(&lt;operator&gt;.multiplication,n*sizeof(long))</data>
    </node>
    <node id="1000371">
      <data key="d4">(&lt;operator&gt;.sizeOf,sizeof(long))</data>
    </node>
    <node id="1000372">
      <data key="d4">(UNKNOWN,long,long)</data>
    </node>
    <node id="1000374">
      <data key="d4">(&lt;operator&gt;.assignment,i=0)</data>
    </node>
    <node id="1000377">
      <data key="d4">(&lt;operator&gt;.lessThan,i&lt;n)</data>
    </node>
    <node id="1000380">
      <data key="d4">(&lt;operator&gt;.postIncrement,i++)</data>
    </node>
    <node id="1000382">
      <data key="d4">(scanf,scanf(&quot;&quot;, &amp;S[i]))</data>
    </node>
    <node id="1000384">
      <data key="d4">(&lt;operator&gt;.addressOf,&amp;S[i])</data>
    </node>
    <node id="1000385">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,S[i])</data>
    </node>
    <node id="1000388">
      <data key="d4">(scanf,scanf(&quot;&quot;, &amp;q))</data>
    </node>
    <node id="1000390">
      <data key="d4">(&lt;operator&gt;.addressOf,&amp;q)</data>
    </node>
    <node id="1000392">
      <data key="d4">(&lt;operator&gt;.assignment,T=malloc(q*sizeof(long)))</data>
    </node>
    <node id="1000394">
      <data key="d4">(malloc,malloc(q*sizeof(long)))</data>
    </node>
    <node id="1000395">
      <data key="d4">(&lt;operator&gt;.multiplication,q*sizeof(long))</data>
    </node>
    <node id="1000397">
      <data key="d4">(&lt;operator&gt;.sizeOf,sizeof(long))</data>
    </node>
    <node id="1000398">
      <data key="d4">(UNKNOWN,long,long)</data>
    </node>
    <node id="1000400">
      <data key="d4">(&lt;operator&gt;.assignment,i=0)</data>
    </node>
    <node id="1000403">
      <data key="d4">(&lt;operator&gt;.lessThan,i&lt;q)</data>
    </node>
    <node id="1000406">
      <data key="d4">(&lt;operator&gt;.postIncrement,i++)</data>
    </node>
    <node id="1000408">
      <data key="d4">(scanf,scanf(&quot;&quot;, &amp;T[i]))</data>
    </node>
    <node id="1000410">
      <data key="d4">(&lt;operator&gt;.addressOf,&amp;T[i])</data>
    </node>
    <node id="1000411">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,T[i])</data>
    </node>
    <node id="1000415">
      <data key="d4">(&lt;operator&gt;.assignment,i=sum=0)</data>
    </node>
    <node id="1000417">
      <data key="d4">(&lt;operator&gt;.assignment,sum=0)</data>
    </node>
    <node id="1000420">
      <data key="d4">(&lt;operator&gt;.lessThan,i&lt;q)</data>
    </node>
    <node id="1000423">
      <data key="d4">(&lt;operator&gt;.postIncrement,i++)</data>
    </node>
    <node id="1000427">
      <data key="d4">(&lt;operator&gt;.assignment,j=0)</data>
    </node>
    <node id="1000430">
      <data key="d4">(&lt;operator&gt;.lessThan,j&lt;n)</data>
    </node>
    <node id="1000433">
      <data key="d4">(&lt;operator&gt;.postIncrement,j++)</data>
    </node>
    <node id="1000437">
      <data key="d4">(&lt;operator&gt;.equals,S[j]==T[i])</data>
    </node>
    <node id="1000438">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,S[j])</data>
    </node>
    <node id="1000441">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,T[i])</data>
    </node>
    <node id="1000445">
      <data key="d4">(&lt;operator&gt;.postIncrement,sum++)</data>
    </node>
    <node id="1000448">
      <data key="d4">(printf,printf(&quot;%d\n&quot;, sum))</data>
    </node>
    <node id="1000451">
      <data key="d4">(free,free(T))</data>
    </node>
    <node id="1000453">
      <data key="d4">(free,free(S))</data>
    </node>
    <node id="1000455">
      <data key="d4">(METHOD_RETURN,void)</data>
    </node>

    <edge source="1000347" target="1000359">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000357" target="1000364">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000359" target="1000357">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000362" target="1000372">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000364" target="1000362">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000366" target="1000374">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000368" target="1000366">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000369" target="1000368">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000371" target="1000369">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000372" target="1000371">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000374" target="1000377">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000377" target="1000385">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000377" target="1000385">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000377" target="1000390">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000380" target="1000377">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000382" target="1000380">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000384" target="1000382">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000385" target="1000384">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000388" target="1000398">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000390" target="1000388">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000392" target="1000400">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000394" target="1000392">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000395" target="1000394">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000397" target="1000395">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000398" target="1000397">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000400" target="1000403">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000403" target="1000411">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000403" target="1000411">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000403" target="1000417">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000406" target="1000403">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000408" target="1000406">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000410" target="1000408">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000411" target="1000410">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000415" target="1000420">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000417" target="1000415">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000420" target="1000427">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000420" target="1000427">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000420" target="1000448">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000423" target="1000420">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000427" target="1000430">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000430" target="1000423">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000430" target="1000438">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000430" target="1000438">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000433" target="1000430">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000437" target="1000445">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000437" target="1000433">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000438" target="1000441">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000441" target="1000437">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000445" target="1000423">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000445" target="1000448">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000448" target="1000451">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000451" target="1000453">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000453" target="1000455">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
  </graph>
</graphml>
