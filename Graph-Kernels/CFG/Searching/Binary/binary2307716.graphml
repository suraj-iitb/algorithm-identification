<?xml version="1.0" encoding="UTF-8"?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns
     http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd">

  <!-- Created by Graph::Easy v0.76 at Tue Jun  8 23:26:23 2021 -->

  <key id="d0" for="edge" attr.name="arrowstyle" attr.type="string">
    <default>open</default>
  </key>
  <key id="d1" for="graph" attr.name="colorscheme" attr.type="string">
    <default>w3c</default>
  </key>
  <key id="d2" for="graph" attr.name="flow" attr.type="string">
    <default>east</default>
  </key>
  <key id="d3" for="graph" attr.name="title" attr.type="string">
    <default></default>
  </key>
  <key id="d4" for="node" attr.name="label" attr.type="string"/>
  <key id="d5" for="edge" attr.name="label" attr.type="string"/>
  <key id="d6" for="edge" attr.name="style" attr.type="string">
    <default>solid</default>
  </key>

  <graph id="G" edgedefault="directed">
    <data key="d1">x11</data>
    <data key="d2">south</data>
    <data key="d3">Binarysearch</data>
    <node id="1000197">
      <data key="d4">(METHOD,Binarysearch)</data>
    </node>
    <node id="1000203">
      <data key="d4">(&lt;operator&gt;.assignment,l=0)</data>
    </node>
    <node id="1000207">
      <data key="d4">(&lt;operator&gt;.assignment,r=n)</data>
    </node>
    <node id="1000212">
      <data key="d4">(&lt;operator&gt;.lessThan,l&lt;r)</data>
    </node>
    <node id="1000216">
      <data key="d4">(&lt;operator&gt;.assignment,m = (l + r) / 2)</data>
    </node>
    <node id="1000218">
      <data key="d4">(&lt;operator&gt;.division,(l + r) / 2)</data>
    </node>
    <node id="1000219">
      <data key="d4">(&lt;operator&gt;.addition,l + r)</data>
    </node>
    <node id="1000224">
      <data key="d4">(&lt;operator&gt;.equals,A[m] == key)</data>
    </node>
    <node id="1000225">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,A[m])</data>
    </node>
    <node id="1000229">
      <data key="d4">(RETURN,return 1;,return 1;)</data>
    </node>
    <node id="1000233">
      <data key="d4">(&lt;operator&gt;.greaterThan,A[m] &gt; key)</data>
    </node>
    <node id="1000234">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,A[m])</data>
    </node>
    <node id="1000238">
      <data key="d4">(&lt;operator&gt;.assignment,r = m)</data>
    </node>
    <node id="1000243">
      <data key="d4">(&lt;operator&gt;.lessThan,A[m] &lt; key)</data>
    </node>
    <node id="1000244">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,A[m])</data>
    </node>
    <node id="1000248">
      <data key="d4">(&lt;operator&gt;.assignment,l = m + 1)</data>
    </node>
    <node id="1000250">
      <data key="d4">(&lt;operator&gt;.addition,m + 1)</data>
    </node>
    <node id="1000253">
      <data key="d4">(RETURN,return 0;,return 0;)</data>
    </node>
    <node id="1000255">
      <data key="d4">(METHOD_RETURN,int)</data>
    </node>

    <edge source="1000197" target="1000203">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000203" target="1000207">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000207" target="1000212">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000212" target="1000219">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000212" target="1000253">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000216" target="1000225">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000218" target="1000216">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000219" target="1000218">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000224" target="1000229">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000224" target="1000234">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000225" target="1000224">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000229" target="1000255">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000233" target="1000238">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000233" target="1000244">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000234" target="1000233">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000238" target="1000212">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000243" target="1000212">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000243" target="1000250">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000244" target="1000243">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000248" target="1000212">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000250" target="1000248">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000253" target="1000255">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
  </graph>
</graphml>
