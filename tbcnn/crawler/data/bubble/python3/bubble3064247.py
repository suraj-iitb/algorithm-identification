# Aはリストを表している
# Nは要素数を表している
N = int(input())
A = list(map(int, input().split()))

# バブルソートの処理
flag = 1
i = 0  # 未ソート部分列の先頭インデックス
count = 0
while flag:
    flag = 0

    # pythonで逆順にするのは組み込み関数reversedを使用する。またrange関数とも一緒に使うことができる。
    for j in reversed(range(1, N)):
        if A[j] < A[j-1]:
            A[j], A[j-1] = A[j-1], A[j]
            count += 1
            flag = 1
    i += 1

print(*A)
print(count)
# バブルソートは、挿入ソートと同様に、各計算ステップにおいて、配列は「ソート済みの部分列」と「未ソートの部分列」とに分けられる。
# ソート済み | 未ソート

# バブルソート
# リストにおいて隣り合う二つの要素の値を比較して条件に応じた交換を行う整列アルゴリズムである。
# その条件は値の大小関係である。
# このソートを実行すると値の大きいまたは小さい値が浮かび上がって見えることからバブルソートと呼ばれている。

