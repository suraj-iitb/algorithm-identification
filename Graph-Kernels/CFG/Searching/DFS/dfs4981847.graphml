<?xml version="1.0" encoding="UTF-8"?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns
     http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd">

  <!-- Created by Graph::Easy v0.76 at Wed Jun  9 00:18:00 2021 -->

  <key id="d0" for="edge" attr.name="arrowstyle" attr.type="string">
    <default>open</default>
  </key>
  <key id="d1" for="graph" attr.name="colorscheme" attr.type="string">
    <default>w3c</default>
  </key>
  <key id="d2" for="graph" attr.name="flow" attr.type="string">
    <default>east</default>
  </key>
  <key id="d3" for="graph" attr.name="title" attr.type="string">
    <default></default>
  </key>
  <key id="d4" for="node" attr.name="label" attr.type="string"/>
  <key id="d5" for="edge" attr.name="label" attr.type="string"/>
  <key id="d6" for="edge" attr.name="style" attr.type="string">
    <default>solid</default>
  </key>

  <graph id="G" edgedefault="directed">
    <data key="d1">x11</data>
    <data key="d2">south</data>
    <data key="d3">dfs</data>
    <node id="1000103">
      <data key="d4">(METHOD,dfs)</data>
    </node>
    <node id="1000106">
      <data key="d4">(&lt;operator&gt;.postIncrement,time++)</data>
    </node>
    <node id="1000108">
      <data key="d4">(&lt;operator&gt;.assignment,t1[v]=time)</data>
    </node>
    <node id="1000109">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,t1[v])</data>
    </node>
    <node id="1000113">
      <data key="d4">(&lt;operator&gt;.assignment,visited[v]=1)</data>
    </node>
    <node id="1000114">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,visited[v])</data>
    </node>
    <node id="1000120">
      <data key="d4">(&lt;operator&gt;.assignment,i=1)</data>
    </node>
    <node id="1000123">
      <data key="d4">(&lt;operator&gt;.lessEqualsThan,i&lt;=n)</data>
    </node>
    <node id="1000126">
      <data key="d4">(&lt;operator&gt;.postIncrement,i++)</data>
    </node>
    <node id="1000130">
      <data key="d4">(&lt;operator&gt;.logicalAnd,M[v][i]&amp;&amp;(!visited[i]))</data>
    </node>
    <node id="1000131">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,M[v][i])</data>
    </node>
    <node id="1000132">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,M[v])</data>
    </node>
    <node id="1000136">
      <data key="d4">(&lt;operator&gt;.logicalNot,!visited[i])</data>
    </node>
    <node id="1000137">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,visited[i])</data>
    </node>
    <node id="1000140">
      <data key="d4">(dfs,dfs(i))</data>
    </node>
    <node id="1000142">
      <data key="d4">(&lt;operator&gt;.postIncrement,time++)</data>
    </node>
    <node id="1000144">
      <data key="d4">(&lt;operator&gt;.assignment,t2[v]=time)</data>
    </node>
    <node id="1000145">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,t2[v])</data>
    </node>
    <node id="1000149">
      <data key="d4">(RETURN,return;,return;)</data>
    </node>
    <node id="1000150">
      <data key="d4">(METHOD_RETURN,void)</data>
    </node>

    <edge source="1000103" target="1000106">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000106" target="1000109">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000108" target="1000114">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000109" target="1000108">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000113" target="1000120">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000114" target="1000113">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000120" target="1000123">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000123" target="1000132">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000123" target="1000132">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000123" target="1000142">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000126" target="1000123">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000130" target="1000126">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000130" target="1000140">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000131" target="1000130">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000131" target="1000137">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000132" target="1000131">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000136" target="1000130">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000137" target="1000136">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000140" target="1000126">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000142" target="1000145">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000144" target="1000149">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000145" target="1000144">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000149" target="1000150">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
  </graph>
</graphml>
