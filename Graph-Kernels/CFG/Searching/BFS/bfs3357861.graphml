<?xml version="1.0" encoding="UTF-8"?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns
     http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd">

  <!-- Created by Graph::Easy v0.76 at Tue Jun  8 22:37:41 2021 -->

  <key id="d0" for="edge" attr.name="arrowstyle" attr.type="string">
    <default>open</default>
  </key>
  <key id="d1" for="graph" attr.name="colorscheme" attr.type="string">
    <default>w3c</default>
  </key>
  <key id="d2" for="graph" attr.name="flow" attr.type="string">
    <default>east</default>
  </key>
  <key id="d3" for="graph" attr.name="title" attr.type="string">
    <default></default>
  </key>
  <key id="d4" for="node" attr.name="label" attr.type="string"/>
  <key id="d5" for="edge" attr.name="label" attr.type="string"/>
  <key id="d6" for="edge" attr.name="style" attr.type="string">
    <default>solid</default>
  </key>

  <graph id="G" edgedefault="directed">
    <data key="d1">x11</data>
    <data key="d2">south</data>
    <data key="d3">dequeue</data>
    <node id="1000354">
      <data key="d4">(METHOD,dequeue)</data>
    </node>
    <node id="1000358">
      <data key="d4">(&lt;operator&gt;.equals,head == tail)</data>
    </node>
    <node id="1000362">
      <data key="d4">(printf,printf(&quot;over flow\n&quot;))</data>
    </node>
    <node id="1000364">
      <data key="d4">(exit,exit(1))</data>
    </node>
    <node id="1000366">
      <data key="d4">(&lt;operator&gt;.assignment,x = Q[head])</data>
    </node>
    <node id="1000368">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,Q[head])</data>
    </node>
    <node id="1000372">
      <data key="d4">(&lt;operator&gt;.equals,head + 1 == N)</data>
    </node>
    <node id="1000373">
      <data key="d4">(&lt;operator&gt;.addition,head + 1)</data>
    </node>
    <node id="1000377">
      <data key="d4">(&lt;operator&gt;.assignment,head = 0)</data>
    </node>
    <node id="1000381">
      <data key="d4">(&lt;operator&gt;.postIncrement,head++)</data>
    </node>
    <node id="1000383">
      <data key="d4">(RETURN,return x;,return x;)</data>
    </node>
    <node id="1000385">
      <data key="d4">(METHOD_RETURN,int)</data>
    </node>

    <edge source="1000354" target="1000358">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000358" target="1000362">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000358" target="1000368">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000362" target="1000364">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000364" target="1000368">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000366" target="1000373">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000368" target="1000366">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000372" target="1000377">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000372" target="1000381">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000373" target="1000372">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000377" target="1000383">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000381" target="1000383">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000383" target="1000385">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
  </graph>
</graphml>
