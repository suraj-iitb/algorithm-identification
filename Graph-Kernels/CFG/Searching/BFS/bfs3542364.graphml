<?xml version="1.0" encoding="UTF-8"?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns
     http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd">

  <!-- Created by Graph::Easy v0.76 at Tue Jun  8 21:58:35 2021 -->

  <key id="d0" for="edge" attr.name="arrowstyle" attr.type="string">
    <default>open</default>
  </key>
  <key id="d1" for="graph" attr.name="colorscheme" attr.type="string">
    <default>w3c</default>
  </key>
  <key id="d2" for="graph" attr.name="flow" attr.type="string">
    <default>east</default>
  </key>
  <key id="d3" for="graph" attr.name="title" attr.type="string">
    <default></default>
  </key>
  <key id="d4" for="node" attr.name="label" attr.type="string"/>
  <key id="d5" for="edge" attr.name="label" attr.type="string"/>
  <key id="d6" for="edge" attr.name="style" attr.type="string">
    <default>solid</default>
  </key>

  <graph id="G" edgedefault="directed">
    <data key="d1">x11</data>
    <data key="d2">south</data>
    <data key="d3">main</data>
    <node id="1000202">
      <data key="d4">(METHOD,main)</data>
    </node>
    <node id="1000207">
      <data key="d4">(scanf,scanf(&quot;%d&quot;, &amp;n))</data>
    </node>
    <node id="1000209">
      <data key="d4">(&lt;operator&gt;.addressOf,&amp;n)</data>
    </node>
    <node id="1000213">
      <data key="d4">(&lt;operator&gt;.assignment,i = 0)</data>
    </node>
    <node id="1000216">
      <data key="d4">(&lt;operator&gt;.lessThan,i &lt; n)</data>
    </node>
    <node id="1000219">
      <data key="d4">(&lt;operator&gt;.preIncrement,++i)</data>
    </node>
    <node id="1000222">
      <data key="d4">(scanf,scanf(&quot;%d%d&quot;, &amp;u, &amp;k))</data>
    </node>
    <node id="1000224">
      <data key="d4">(&lt;operator&gt;.addressOf,&amp;u)</data>
    </node>
    <node id="1000226">
      <data key="d4">(&lt;operator&gt;.addressOf,&amp;k)</data>
    </node>
    <node id="1000230">
      <data key="d4">(&lt;operator&gt;.assignment,j = 0)</data>
    </node>
    <node id="1000233">
      <data key="d4">(&lt;operator&gt;.lessThan,j &lt; k)</data>
    </node>
    <node id="1000236">
      <data key="d4">(&lt;operator&gt;.preIncrement,++j)</data>
    </node>
    <node id="1000239">
      <data key="d4">(scanf,scanf(&quot;%d&quot;, &amp;adja[u][j]))</data>
    </node>
    <node id="1000241">
      <data key="d4">(&lt;operator&gt;.addressOf,&amp;adja[u][j])</data>
    </node>
    <node id="1000242">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,adja[u][j])</data>
    </node>
    <node id="1000243">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,adja[u])</data>
    </node>
    <node id="1000247">
      <data key="d4">(bfs,bfs())</data>
    </node>
    <node id="1000250">
      <data key="d4">(&lt;operator&gt;.assignment,i = 1)</data>
    </node>
    <node id="1000253">
      <data key="d4">(&lt;operator&gt;.lessEqualsThan,i &lt;= n)</data>
    </node>
    <node id="1000256">
      <data key="d4">(&lt;operator&gt;.preIncrement,++i)</data>
    </node>
    <node id="1000259">
      <data key="d4">(printf,printf(&quot;%d %d\n&quot;, i, --dist[i]))</data>
    </node>
    <node id="1000262">
      <data key="d4">(&lt;operator&gt;.preDecrement,--dist[i])</data>
    </node>
    <node id="1000263">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,dist[i])</data>
    </node>
    <node id="1000266">
      <data key="d4">(RETURN,return 0;,return 0;)</data>
    </node>
    <node id="1000268">
      <data key="d4">(METHOD_RETURN,int)</data>
    </node>

    <edge source="1000202" target="1000209">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000207" target="1000213">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000209" target="1000207">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000213" target="1000216">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000216" target="1000224">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000216" target="1000224">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000216" target="1000247">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000219" target="1000216">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000222" target="1000230">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000224" target="1000226">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000226" target="1000222">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000230" target="1000233">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000233" target="1000219">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000233" target="1000243">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000233" target="1000243">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000236" target="1000233">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000239" target="1000236">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000241" target="1000239">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000242" target="1000241">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000243" target="1000242">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000247" target="1000250">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000250" target="1000253">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000253" target="1000263">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000253" target="1000263">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000253" target="1000266">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000256" target="1000253">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000259" target="1000256">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000262" target="1000259">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000263" target="1000262">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000266" target="1000268">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
  </graph>
</graphml>
