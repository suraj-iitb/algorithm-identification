<?xml version="1.0" encoding="UTF-8"?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns
     http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd">

  <!-- Created by Graph::Easy v0.76 at Tue Jun  8 21:47:05 2021 -->

  <key id="d0" for="edge" attr.name="arrowstyle" attr.type="string">
    <default>open</default>
  </key>
  <key id="d1" for="graph" attr.name="colorscheme" attr.type="string">
    <default>w3c</default>
  </key>
  <key id="d2" for="graph" attr.name="flow" attr.type="string">
    <default>east</default>
  </key>
  <key id="d3" for="graph" attr.name="title" attr.type="string">
    <default></default>
  </key>
  <key id="d4" for="node" attr.name="label" attr.type="string"/>
  <key id="d5" for="edge" attr.name="label" attr.type="string"/>
  <key id="d6" for="edge" attr.name="style" attr.type="string">
    <default>solid</default>
  </key>

  <graph id="G" edgedefault="directed">
    <data key="d1">x11</data>
    <data key="d2">south</data>
    <data key="d3">main</data>
    <node id="1000102">
      <data key="d4">(METHOD,main)</data>
    </node>
    <node id="1000108">
      <data key="d4">(scanf,scanf(&quot;%d\n&quot;,&amp;n))</data>
    </node>
    <node id="1000110">
      <data key="d4">(&lt;operator&gt;.addressOf,&amp;n)</data>
    </node>
    <node id="1000114">
      <data key="d4">(&lt;operator&gt;.assignment,ix = 0)</data>
    </node>
    <node id="1000117">
      <data key="d4">(&lt;operator&gt;.lessThan,ix &lt; n)</data>
    </node>
    <node id="1000120">
      <data key="d4">(&lt;operator&gt;.postIncrement,ix++)</data>
    </node>
    <node id="1000124">
      <data key="d4">(&lt;operator&gt;.equals,ix == n-1)</data>
    </node>
    <node id="1000126">
      <data key="d4">(&lt;operator&gt;.subtraction,n-1)</data>
    </node>
    <node id="1000129">
      <data key="d4">(scanf,scanf(&quot;%d\n&quot;,&amp;S[ix]))</data>
    </node>
    <node id="1000131">
      <data key="d4">(&lt;operator&gt;.addressOf,&amp;S[ix])</data>
    </node>
    <node id="1000132">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,S[ix])</data>
    </node>
    <node id="1000136">
      <data key="d4">(scanf,scanf(&quot;%d &quot;,&amp;S[ix]))</data>
    </node>
    <node id="1000138">
      <data key="d4">(&lt;operator&gt;.addressOf,&amp;S[ix])</data>
    </node>
    <node id="1000139">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,S[ix])</data>
    </node>
    <node id="1000142">
      <data key="d4">(scanf,scanf(&quot;%d\n&quot;,&amp;q))</data>
    </node>
    <node id="1000144">
      <data key="d4">(&lt;operator&gt;.addressOf,&amp;q)</data>
    </node>
    <node id="1000147">
      <data key="d4">(&lt;operator&gt;.assignment,counter = 0)</data>
    </node>
    <node id="1000152">
      <data key="d4">(&lt;operator&gt;.assignment,ix = 0)</data>
    </node>
    <node id="1000155">
      <data key="d4">(&lt;operator&gt;.lessThan,ix &lt; q)</data>
    </node>
    <node id="1000158">
      <data key="d4">(&lt;operator&gt;.postIncrement,ix++)</data>
    </node>
    <node id="1000162">
      <data key="d4">(&lt;operator&gt;.equals,ix == q-1)</data>
    </node>
    <node id="1000164">
      <data key="d4">(&lt;operator&gt;.subtraction,q-1)</data>
    </node>
    <node id="1000167">
      <data key="d4">(scanf,scanf(&quot;%d\n&quot;,&amp;T))</data>
    </node>
    <node id="1000169">
      <data key="d4">(&lt;operator&gt;.addressOf,&amp;T)</data>
    </node>
    <node id="1000172">
      <data key="d4">(scanf,scanf(&quot;%d &quot;,&amp;T))</data>
    </node>
    <node id="1000174">
      <data key="d4">(&lt;operator&gt;.addressOf,&amp;T)</data>
    </node>
    <node id="1000177">
      <data key="d4">(&lt;operator&gt;.assignment,jx = 0)</data>
    </node>
    <node id="1000181">
      <data key="d4">(&lt;operator&gt;.lessThan,jx &lt; n)</data>
    </node>
    <node id="1000186">
      <data key="d4">(&lt;operator&gt;.equals,T == S[jx])</data>
    </node>
    <node id="1000188">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,S[jx])</data>
    </node>
    <node id="1000192">
      <data key="d4">(&lt;operator&gt;.preIncrement,++counter)</data>
    </node>
    <node id="1000195">
      <data key="d4">(&lt;operator&gt;.postIncrement,jx++)</data>
    </node>
    <node id="1000197">
      <data key="d4">(printf,printf(&quot;%d\n&quot;,counter))</data>
    </node>
    <node id="1000200">
      <data key="d4">(RETURN,return 0;,return 0;)</data>
    </node>
    <node id="1000202">
      <data key="d4">(METHOD_RETURN,int)</data>
    </node>

    <edge source="1000102" target="1000110">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000108" target="1000114">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000110" target="1000108">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000114" target="1000117">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000117" target="1000126">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000117" target="1000126">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000117" target="1000144">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000120" target="1000117">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000124" target="1000132">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000124" target="1000139">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000126" target="1000124">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000129" target="1000120">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000131" target="1000129">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000132" target="1000131">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000136" target="1000120">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000138" target="1000136">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000139" target="1000138">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000142" target="1000147">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000144" target="1000142">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000147" target="1000152">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000152" target="1000155">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000155" target="1000164">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000155" target="1000164">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000155" target="1000197">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000158" target="1000155">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000162" target="1000169">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000162" target="1000174">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000164" target="1000162">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000167" target="1000177">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000169" target="1000167">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000172" target="1000177">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000174" target="1000172">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000177" target="1000181">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000181" target="1000158">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000181" target="1000188">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000186" target="1000192">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000186" target="1000195">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000188" target="1000186">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000192" target="1000158">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000192" target="1000197">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000195" target="1000181">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000197" target="1000200">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000200" target="1000202">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
  </graph>
</graphml>
