<?xml version="1.0" encoding="UTF-8"?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns
     http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd">

  <!-- Created by Graph::Easy v0.76 at Tue Oct 27 11:45:57 2020 -->

  <key id="d0" for="edge" attr.name="arrowstyle" attr.type="string">
    <default>open</default>
  </key>
  <key id="d1" for="graph" attr.name="colorscheme" attr.type="string">
    <default>w3c</default>
  </key>
  <key id="d2" for="graph" attr.name="flow" attr.type="string">
    <default>east</default>
  </key>
  <key id="d3" for="graph" attr.name="title" attr.type="string">
    <default></default>
  </key>
  <key id="d4" for="node" attr.name="label" attr.type="string"/>
  <key id="d5" for="edge" attr.name="label" attr.type="string"/>
  <key id="d6" for="edge" attr.name="style" attr.type="string">
    <default>solid</default>
  </key>

  <graph id="G" edgedefault="directed">
    <data key="d1">x11</data>
    <data key="d2">south</data>
    <data key="d3">merge</data>
    <node id="1000102">
      <data key="d4">(METHOD,merge)</data>
    </node>
    <node id="1000116">
      <data key="d4">(&lt;operator&gt;.assignment,n1 = mid - left)</data>
    </node>
    <node id="1000118">
      <data key="d4">(&lt;operator&gt;.subtraction,mid - left)</data>
    </node>
    <node id="1000121">
      <data key="d4">(&lt;operator&gt;.assignment,l = (int *) malloc(sizeof(int) * (n1 + 1)))</data>
    </node>
    <node id="1000123">
      <data key="d4">(&lt;operator&gt;.cast,(int *) malloc(sizeof(int) * (n1 + 1)))</data>
    </node>
    <node id="1000124">
      <data key="d4">(UNKNOWN,int *,int *)</data>
    </node>
    <node id="1000125">
      <data key="d4">(malloc,malloc(sizeof(int) * (n1 + 1)))</data>
    </node>
    <node id="1000126">
      <data key="d4">(&lt;operator&gt;.multiplication,sizeof(int) * (n1 + 1))</data>
    </node>
    <node id="1000127">
      <data key="d4">(&lt;operator&gt;.sizeOf,sizeof(int))</data>
    </node>
    <node id="1000129">
      <data key="d4">(&lt;operator&gt;.addition,n1 + 1)</data>
    </node>
    <node id="1000133">
      <data key="d4">(&lt;operator&gt;.equals,l == NULL)</data>
    </node>
    <node id="1000136">
      <data key="d4">(RETURN,return 0;,return 0;)</data>
    </node>
    <node id="1000139">
      <data key="d4">(&lt;operator&gt;.assignment,i = 0)</data>
    </node>
    <node id="1000142">
      <data key="d4">(&lt;operator&gt;.lessThan,i &lt; n1)</data>
    </node>
    <node id="1000145">
      <data key="d4">(&lt;operator&gt;.preIncrement,++i)</data>
    </node>
    <node id="1000147">
      <data key="d4">(&lt;operator&gt;.assignment,l[i] = a[left + i])</data>
    </node>
    <node id="1000148">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,l[i])</data>
    </node>
    <node id="1000151">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,a[left + i])</data>
    </node>
    <node id="1000153">
      <data key="d4">(&lt;operator&gt;.addition,left + i)</data>
    </node>
    <node id="1000156">
      <data key="d4">(&lt;operator&gt;.assignment,l[i] = SENTINEL)</data>
    </node>
    <node id="1000157">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,l[i])</data>
    </node>
    <node id="1000161">
      <data key="d4">(&lt;operator&gt;.assignment,n2 = right - mid)</data>
    </node>
    <node id="1000163">
      <data key="d4">(&lt;operator&gt;.subtraction,right - mid)</data>
    </node>
    <node id="1000166">
      <data key="d4">(&lt;operator&gt;.assignment,r = (int *) malloc(sizeof(int) * (n2 + 1)))</data>
    </node>
    <node id="1000168">
      <data key="d4">(&lt;operator&gt;.cast,(int *) malloc(sizeof(int) * (n2 + 1)))</data>
    </node>
    <node id="1000169">
      <data key="d4">(UNKNOWN,int *,int *)</data>
    </node>
    <node id="1000170">
      <data key="d4">(malloc,malloc(sizeof(int) * (n2 + 1)))</data>
    </node>
    <node id="1000171">
      <data key="d4">(&lt;operator&gt;.multiplication,sizeof(int) * (n2 + 1))</data>
    </node>
    <node id="1000172">
      <data key="d4">(&lt;operator&gt;.sizeOf,sizeof(int))</data>
    </node>
    <node id="1000174">
      <data key="d4">(&lt;operator&gt;.addition,n2 + 1)</data>
    </node>
    <node id="1000178">
      <data key="d4">(&lt;operator&gt;.equals,r == NULL)</data>
    </node>
    <node id="1000181">
      <data key="d4">(RETURN,return 0;,return 0;)</data>
    </node>
    <node id="1000184">
      <data key="d4">(&lt;operator&gt;.assignment,i = 0)</data>
    </node>
    <node id="1000187">
      <data key="d4">(&lt;operator&gt;.lessThan,i &lt; n2)</data>
    </node>
    <node id="1000190">
      <data key="d4">(&lt;operator&gt;.preIncrement,++i)</data>
    </node>
    <node id="1000192">
      <data key="d4">(&lt;operator&gt;.assignment,r[i] = a[mid + i])</data>
    </node>
    <node id="1000193">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,r[i])</data>
    </node>
    <node id="1000196">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,a[mid + i])</data>
    </node>
    <node id="1000198">
      <data key="d4">(&lt;operator&gt;.addition,mid + i)</data>
    </node>
    <node id="1000201">
      <data key="d4">(&lt;operator&gt;.assignment,r[i] = SENTINEL)</data>
    </node>
    <node id="1000202">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,r[i])</data>
    </node>
    <node id="1000208">
      <data key="d4">(&lt;operator&gt;.assignment,i = j = cnt = 0)</data>
    </node>
    <node id="1000210">
      <data key="d4">(&lt;operator&gt;.assignment,j = cnt = 0)</data>
    </node>
    <node id="1000212">
      <data key="d4">(&lt;operator&gt;.assignment,cnt = 0)</data>
    </node>
    <node id="1000215">
      <data key="d4">(&lt;operator&gt;.assignment,k = left)</data>
    </node>
    <node id="1000218">
      <data key="d4">(&lt;operator&gt;.lessThan,k &lt; right)</data>
    </node>
    <node id="1000221">
      <data key="d4">(&lt;operator&gt;.preIncrement,++k)</data>
    </node>
    <node id="1000224">
      <data key="d4">(&lt;operator&gt;.preIncrement,++cnt)</data>
    </node>
    <node id="1000227">
      <data key="d4">(&lt;operator&gt;.lessEqualsThan,l[i] &lt;= r[j])</data>
    </node>
    <node id="1000228">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,l[i])</data>
    </node>
    <node id="1000231">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,r[j])</data>
    </node>
    <node id="1000235">
      <data key="d4">(&lt;operator&gt;.assignment,a[k] = l[i++])</data>
    </node>
    <node id="1000236">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,a[k])</data>
    </node>
    <node id="1000239">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,l[i++])</data>
    </node>
    <node id="1000241">
      <data key="d4">(&lt;operator&gt;.postIncrement,i++)</data>
    </node>
    <node id="1000245">
      <data key="d4">(&lt;operator&gt;.assignment,a[k] = r[j++])</data>
    </node>
    <node id="1000246">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,a[k])</data>
    </node>
    <node id="1000249">
      <data key="d4">(&lt;operator&gt;.indirectIndexAccess,r[j++])</data>
    </node>
    <node id="1000251">
      <data key="d4">(&lt;operator&gt;.postIncrement,j++)</data>
    </node>
    <node id="1000253">
      <data key="d4">(free,free(l))</data>
    </node>
    <node id="1000255">
      <data key="d4">(free,free(r))</data>
    </node>
    <node id="1000257">
      <data key="d4">(RETURN,return cnt;,return cnt;)</data>
    </node>
    <node id="1000259">
      <data key="d4">(METHOD_RETURN,static int)</data>
    </node>

    <edge source="1000102" target="1000118">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000116" target="1000124">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000118" target="1000116">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000121" target="1000133">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000123" target="1000121">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000124" target="1000127">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000125" target="1000123">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000126" target="1000125">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000127" target="1000129">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000129" target="1000126">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000133" target="1000136">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000133" target="1000139">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000136" target="1000259">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000139" target="1000142">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000142" target="1000148">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000142" target="1000148">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000142" target="1000157">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000145" target="1000142">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000147" target="1000145">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000148" target="1000153">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000151" target="1000147">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000153" target="1000151">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000156" target="1000163">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000157" target="1000156">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000161" target="1000169">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000163" target="1000161">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000166" target="1000178">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000168" target="1000166">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000169" target="1000172">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000170" target="1000168">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000171" target="1000170">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000172" target="1000174">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000174" target="1000171">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000178" target="1000181">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000178" target="1000184">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000181" target="1000259">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000184" target="1000187">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000187" target="1000193">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000187" target="1000193">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000187" target="1000202">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000190" target="1000187">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000192" target="1000190">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000193" target="1000198">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000196" target="1000192">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000198" target="1000196">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000201" target="1000212">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000202" target="1000201">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000208" target="1000215">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000210" target="1000208">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000212" target="1000210">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000215" target="1000218">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000218" target="1000224">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000218" target="1000224">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000218" target="1000253">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000221" target="1000218">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000224" target="1000228">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000227" target="1000236">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000227" target="1000246">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000228" target="1000231">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000231" target="1000227">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000235" target="1000221">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000236" target="1000241">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000239" target="1000235">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000241" target="1000239">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000245" target="1000221">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000246" target="1000251">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000249" target="1000245">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000251" target="1000249">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000253" target="1000255">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000255" target="1000257">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
    <edge source="1000257" target="1000259">
      <data key="d0">filled</data>
      <data key="d5"></data>
    </edge>
  </graph>
</graphml>
