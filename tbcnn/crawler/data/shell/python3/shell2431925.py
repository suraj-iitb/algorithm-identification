#!/usr/bin/env python
# -*- coding: utf-8 -*-
"""
Shell Sort
?¬????????????°?????????????????\?????????????????¨?????? n ????????´??°???????????°??? A ??????????????´?????????????????°????????§??????

1  insertionSort(A, n, g)
2      for i = g to n-1
3          v = A[i]
4          j = i - g
5          while j >= 0 && A[j] > v
6              A[j+g] = A[j]
7              j = j - g
8              cnt++
9          A[j+g] = v
10
11 shellSort(A, n)
12     cnt = 0
13     m = ?
14     G[] = {?, ?,..., ?}
15     for i = 0 to m-1
16         insertionSort(A, n, G[i])

shellSort(A, n) ????????????????????? g ????????¢??????????´??????????????±???¨???????????\???????????§??????
 insertionSort(A, n, g) ?????????????????§??????????????? g ????????????????????°??????????????????
 ??????????????§??????????????¨?¨?????????????

???????????????????????? ? ??????????????????????????°???????????????????????????????????????
n ??¨??°??? A ???????????????????????§????????????????????????m??? m ????????´??° Gi(i=0,1,...,m???1)???
??\??? A????????????????????????????????????????????°????????????????????????????????????
???????????????????????\???????????¶????????????????????????????????????

1???m???100
0???Gi???n
cnt ????????? [n^1.5] ????¶??????????????????????
"""
import sys

def insertionSort(A, n, g):
    """ ?????\????????? """
    c = 0
    for i in range(g, n):
        v = A[i]
        j = i - g
        while j >=0 and A[j] > v:
            A[j+g] = A[j]
            j = j - g
            c += 1
        A[j+g] = v
    return c

def shellSort(A, n):
    cnt = 0
    G = []
    i = 1
    while i <= n:
        G.insert(0,i)
        i = i * 3 + 1
    
    m = len(G)
    for i in range(0, m):
        cnt += insertionSort(A, n, G[i])
    
    # ??????
    print(m)
    print(" ".join(map(str,G)))
    print(cnt)
    for i in A:
        print(i)

# ?????????
n = int(input().strip())
a = []
for i in range(n):
    a.append(int(input().strip()))
shellSort(a,n)
